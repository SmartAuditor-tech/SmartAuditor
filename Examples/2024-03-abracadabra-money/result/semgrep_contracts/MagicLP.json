{
    "success": true,
    "finding_length": 37,
    "findings": [
        {
            "classification": [],
            "name": "inefficient-state-variable-increment",
            "category": "performance",
            "message": "te-variable-increment <x> += <y> costs more gas than <x> = <x> + <y> for state variables. Details: https://sg.run/bp9v",
            "line": 553
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 84
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 85
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 86
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 87
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 88
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 89
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 139
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 140
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 141
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 142
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 143
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 144
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 145
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 146
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 147
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 148
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 302
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 303
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 304
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 395
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 396
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 397
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 398
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 399
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 400
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 401
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 402
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 403
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 404
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 549
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 550
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 551
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 552
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 553
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 554
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 555
        }
    ]
}