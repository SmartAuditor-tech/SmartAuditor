'forge config --json' running
'/Users/tanzezhong/.solc-select/artifacts/solc-0.8.20/solc-0.8.20 --version' running
'/Users/tanzezhong/.solc-select/artifacts/solc-0.8.20/solc-0.8.20 /=src/ openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/ BoringSolidity/=lib/BoringSolidity/contracts/ ds-test/=lib/forge-std/lib/ds-test/src/ forge-std/=lib/forge-std/src/ solmate/=lib/solmate/src/ utils/=utils/ libraries/=src/libraries/ interfaces/=src/interfaces/ cauldrons/=src/cauldrons/ staking/=src/staking/ oracles/=src/oracles/ tokens/=src/tokens/ mixins/=src/mixins/ solady/=lib/solady/src/ forge-deploy/=lib/forge-deploy/contracts/ /Users/tanzezhong/Desktop/tzz/Research/GPT4Bugs-main/Examples/2024-03-abracadabra-money/src/oracles/aggregators/MagicLpAggregator.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --optimize --optimize-runs 400 --evm-version paris --allow-paths .,/Users/tanzezhong/Desktop/tzz/Research/GPT4Bugs-main/Examples/2024-03-abracadabra-money/src/oracles/aggregators' running
Compilation warnings/errors on /Users/tanzezhong/Desktop/tzz/Research/GPT4Bugs-main/Examples/2024-03-abracadabra-money/src/oracles/aggregators/MagicLpAggregator.sol:
Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> src/oracles/aggregators/MagicLpAggregator.sol:33:60:
   |
33 |     function _getReserves() internal view virtual returns (uint256, uint256) {
   |                                                            ^^^^^^^

Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> src/oracles/aggregators/MagicLpAggregator.sol:33:69:
   |
33 |     function _getReserves() internal view virtual returns (uint256, uint256) {
   |                                                                     ^^^^^^^

Warning: Unused local variable.
  --> src/oracles/aggregators/MagicLpAggregator.sol:34:10:
   |
34 |         (uint256 baseReserve, uint256 quoteReserve) = pair.getReserves();
   |          ^^^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
  --> src/oracles/aggregators/MagicLpAggregator.sol:34:31:
   |
34 |         (uint256 baseReserve, uint256 quoteReserve) = pair.getReserves();
   |                               ^^^^^^^^^^^^^^^^^^^^


INFO:Detectors:
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inv_fullMulDiv_asm_0 = 2 ^ 3 * d (lib/solady/src/utils/FixedPointMathLib.sol#483)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - z = 0xf << 0xf < x >> r_cbrt_asm_0 << r_cbrt_asm_0 / 3 / 7 ^ r_cbrt_asm_0 % 3 (lib/solady/src/utils/FixedPointMathLib.sol#680)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation
INFO:Detectors:
FixedPointMathLib.lnWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#269-339) contains an incorrect shift operation: r = r ^ byte(uint256,uint256)(0x1f & 0x8421084210842108cc6318c6db6d54be >> x >> r,0xf8f9f9faf9fdfafbf9fdfcfdfafbfcfef9fafdfafcfcfbfefafafcfbffffffff) (lib/solady/src/utils/FixedPointMathLib.sol#289-290)
FixedPointMathLib.lambertW0Wad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#344-427) contains an incorrect shift operation: l_lambertW0Wad_asm_0 = l_lambertW0Wad_asm_0 | byte(uint256,uint256)(0x1f & 0x8421084210842108cc6318c6db6d54be >> v_lambertW0Wad_asm_0 >> l_lambertW0Wad_asm_0,0x0706060506020504060203020504030106050205030304010505030400000000) + 49 (lib/solady/src/utils/FixedPointMathLib.sol#364-365)
FixedPointMathLib.lambertW0Wad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#344-427) contains an incorrect shift operation: w = 7 << l_lambertW0Wad_asm_0 /' byte(uint256,uint256)(l_lambertW0Wad_asm_0 - 31,0x0303030303030303040506080c13) (lib/solady/src/utils/FixedPointMathLib.sol#366)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) contains an incorrect shift operation: z = 0xf << 0xf < x >> r_cbrt_asm_0 << r_cbrt_asm_0 / 3 / 7 ^ r_cbrt_asm_0 % 3 (lib/solady/src/utils/FixedPointMathLib.sol#680)
FixedPointMathLib.log2(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#738-750) contains an incorrect shift operation: r = r | byte(uint256,uint256)(0x1f & 0x8421084210842108cc6318c6db6d54be >> x >> r,0x0706060506020504060203020504030106050205030304010505030400000000) (lib/solady/src/utils/FixedPointMathLib.sol#747-748)
FixedPointMathLib.log2Up(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#754-760) contains an incorrect shift operation: r = r + 1 << r < x (lib/solady/src/utils/FixedPointMathLib.sol#758)
FixedPointMathLib.log256Up(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#812-818) contains an incorrect shift operation: r = r + 1 << r << 3 < x (lib/solady/src/utils/FixedPointMathLib.sol#816)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-shift-in-assembly
INFO:Detectors:
FixedPointMathLib.expWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#200-265) performs a multiplication on the result of a division:
	- x = (x << 78) / 5 ** 18 (lib/solady/src/utils/FixedPointMathLib.sol#219)
	- y = ((y * x) >> 96) + 57155421227552351082224309758442 (lib/solady/src/utils/FixedPointMathLib.sol#232)
FixedPointMathLib.expWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#200-265) performs a multiplication on the result of a division:
	- x = (x << 78) / 5 ** 18 (lib/solady/src/utils/FixedPointMathLib.sol#219)
	- p = p * x + (4385272521454847904659076985693276 << 96) (lib/solady/src/utils/FixedPointMathLib.sol#235)
FixedPointMathLib.expWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#200-265) performs a multiplication on the result of a division:
	- x = (x << 78) / 5 ** 18 (lib/solady/src/utils/FixedPointMathLib.sol#219)
	- q = ((q * x) >> 96) + 50020603652535783019961831881945 (lib/solady/src/utils/FixedPointMathLib.sol#239)
FixedPointMathLib.expWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#200-265) performs a multiplication on the result of a division:
	- x = (x << 78) / 5 ** 18 (lib/solady/src/utils/FixedPointMathLib.sol#219)
	- q = ((q * x) >> 96) - 533845033583426703283633433725380 (lib/solady/src/utils/FixedPointMathLib.sol#240)
FixedPointMathLib.expWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#200-265) performs a multiplication on the result of a division:
	- x = (x << 78) / 5 ** 18 (lib/solady/src/utils/FixedPointMathLib.sol#219)
	- q = ((q * x) >> 96) + 3604857256930695427073651918091429 (lib/solady/src/utils/FixedPointMathLib.sol#241)
FixedPointMathLib.expWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#200-265) performs a multiplication on the result of a division:
	- x = (x << 78) / 5 ** 18 (lib/solady/src/utils/FixedPointMathLib.sol#219)
	- q = ((q * x) >> 96) - 14423608567350463180887372962807573 (lib/solady/src/utils/FixedPointMathLib.sol#242)
FixedPointMathLib.expWad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#200-265) performs a multiplication on the result of a division:
	- x = (x << 78) / 5 ** 18 (lib/solady/src/utils/FixedPointMathLib.sol#219)
	- q = ((q * x) >> 96) + 26449188498355588339934803723976023 (lib/solady/src/utils/FixedPointMathLib.sol#243)
FixedPointMathLib.lambertW0Wad(int256) (lib/solady/src/utils/FixedPointMathLib.sol#344-427) performs a multiplication on the result of a division:
	- t_lambertW0Wad_asm_2 = w * e / wad (lib/solady/src/utils/FixedPointMathLib.sol#384)
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) performs a multiplication on the result of a division:
	- d = d / t_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#477)
	- inv_fullMulDiv_asm_0 = 2 ^ 3 * d (lib/solady/src/utils/FixedPointMathLib.sol#483)
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) performs a multiplication on the result of a division:
	- d = d / t_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#477)
	- inv_fullMulDiv_asm_0 = inv_fullMulDiv_asm_0 * 2 - d * inv_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#487)
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) performs a multiplication on the result of a division:
	- d = d / t_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#477)
	- inv_fullMulDiv_asm_0 = inv_fullMulDiv_asm_0 * 2 - d * inv_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#488)
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) performs a multiplication on the result of a division:
	- d = d / t_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#477)
	- inv_fullMulDiv_asm_0 = inv_fullMulDiv_asm_0 * 2 - d * inv_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#489)
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) performs a multiplication on the result of a division:
	- d = d / t_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#477)
	- inv_fullMulDiv_asm_0 = inv_fullMulDiv_asm_0 * 2 - d * inv_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#490)
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) performs a multiplication on the result of a division:
	- d = d / t_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#477)
	- inv_fullMulDiv_asm_0 = inv_fullMulDiv_asm_0 * 2 - d * inv_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#491)
FixedPointMathLib.fullMulDiv(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#436-507) performs a multiplication on the result of a division:
	- d = d / t_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#477)
	- result = p1_fullMulDiv_asm_0 - r_fullMulDiv_asm_0 > result * 0 - t_fullMulDiv_asm_0 / t_fullMulDiv_asm_0 + 1 | result - r_fullMulDiv_asm_0 / t_fullMulDiv_asm_0 * inv_fullMulDiv_asm_0 * 2 - d * inv_fullMulDiv_asm_0 (lib/solady/src/utils/FixedPointMathLib.sol#492-503)
FixedPointMathLib.rpow(uint256,uint256,uint256) (lib/solady/src/utils/FixedPointMathLib.sol#578-612) performs a multiplication on the result of a division:
	- x = xxRound_rpow_asm_0 / b (lib/solady/src/utils/FixedPointMathLib.sol#594)
	- zx_rpow_asm_0 = z * x (lib/solady/src/utils/FixedPointMathLib.sol#597)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = 0xf << 0xf < x >> r_cbrt_asm_0 << r_cbrt_asm_0 / 3 / 7 ^ r_cbrt_asm_0 % 3 (lib/solady/src/utils/FixedPointMathLib.sol#680)
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#682)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#682)
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#683)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#683)
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#684)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#684)
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#685)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#685)
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#686)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#686)
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#687)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#687)
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#688)
FixedPointMathLib.cbrt(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#671-692) performs a multiplication on the result of a division:
	- z = x / z * z + z + z / 3 (lib/solady/src/utils/FixedPointMathLib.sol#688)
	- z = z - x / z * z < z (lib/solady/src/utils/FixedPointMathLib.sol#690)
FixedPointMathLib.cbrtWad(uint256) (lib/solady/src/utils/FixedPointMathLib.sol#707-721) performs a multiplication on the result of a division:
	- x <= (type()(uint256).max / 10 ** 36) * 10 ** 18 - 1 (lib/solady/src/utils/FixedPointMathLib.sol#710)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Slither:/Users/tanzezhong/Desktop/tzz/Research/GPT4Bugs-main/Examples/2024-03-abracadabra-money/src/oracles/aggregators/MagicLpAggregator.sol analyzed (6 contracts with 58 detectors), 34 result(s) found
