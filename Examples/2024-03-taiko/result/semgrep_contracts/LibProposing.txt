METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                   
                   
┌─────────────────┐
│ 5 Code Findings │
└─────────────────┘
                                                              
    /g4b/packages/protocol/contracts/L1/libs/LibProposing.sol 
       solidity.performance.array-length-outside-loop.array-length-outside-loop 
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
          Details: https://sg.run/r4LJ                                          
                                                                                
          244┆ for (uint256 i; i < params.hookCalls.length; ++i) {
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop.unnecessary-c
  hecked-arithmetic-in-loop                                                     
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
          Details: https://sg.run/OvDk                                          
                                                                                
          244┆ for (uint256 i; i < params.hookCalls.length; ++i) {
            ⋮┆----------------------------------------
       solidity.performance.use-nested-if.use-nested-if                         
          Using nested is cheaper than using && multiple check combinations.    
  There are more                                                                
          advantages, such as easier to read code and better coverage reports.  
          Details: https://sg.run/dXw0                                          
                                                                                
          108┆ if (params.parentMetaHash != 0 && parentMetaHash !=              
  params.parentMetaHash) {                                                      
          109┆     revert L1_UNEXPECTED_PARENT();
          110┆ }
            ⋮┆----------------------------------------
          164┆ if (_config.blobReuseEnabled && params.cacheBlobForReuse) {
          165┆     _state.reusableBlobs[meta_.blobHash] = block.timestamp;
          166┆     emit BlobCached(meta_.blobHash);
          167┆ }
            ⋮┆----------------------------------------
          310┆ if (proposerOne != address(0) && msg.sender != proposerOne) {
          311┆     return false;
          312┆ }

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 5 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
