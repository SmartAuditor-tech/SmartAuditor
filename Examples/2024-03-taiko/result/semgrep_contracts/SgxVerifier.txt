METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                    
                    
┌──────────────────┐
│ 14 Code Findings │
└──────────────────┘
                                                               
    /g4b/packages/protocol/contracts/verifiers/SgxVerifier.sol 
       solidity.performance.array-length-outside-loop.array-length-outside-loop 
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
          Details: https://sg.run/r4LJ                                          
                                                                                
          210┆ for (uint256 i; i < _instances.length; ++i) {
            ⋮┆----------------------------------------
       solidity.performance.state-variable-read-in-a-loop.state-variable-read-in
  -a-loop                                                                       
          Replace state variable reads and writes within loops with local       
  variable reads and writes.                                                    
          Details: https://sg.run/xADy                                          
                                                                                
          107┆ if (instances[idx].addr == address(0)) revert                    
  SGX_INVALID_INSTANCE();                                                       
            ⋮┆----------------------------------------
          109┆ emit InstanceDeleted(idx, instances[idx].addr);
            ⋮┆----------------------------------------
          111┆ delete instances[idx];
            ⋮┆----------------------------------------
          211┆ if (addressRegistered[_instances[i]]) revert                     
  SGX_ALREADY_ATTESTED();                                                       
            ⋮┆----------------------------------------
          213┆ addressRegistered[_instances[i]] = true;
            ⋮┆----------------------------------------
          217┆ instances[nextInstanceId] = Instance(_instances[i], validSince);
            ⋮┆----------------------------------------
          217┆ instances[nextInstanceId] = Instance(_instances[i], validSince);
            ⋮┆----------------------------------------
          218┆ ids[i] = nextInstanceId;
            ⋮┆----------------------------------------
          220┆ emit InstanceAdded(nextInstanceId, _instances[i], address(0),    
  validSince);                                                                  
            ⋮┆----------------------------------------
          222┆ nextInstanceId++;
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop.unnecessary-c
  hecked-arithmetic-in-loop                                                     
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
          Details: https://sg.run/OvDk                                          
                                                                                
          104┆ for (uint256 i; i < _ids.length; ++i) {
            ⋮┆----------------------------------------
          210┆ for (uint256 i; i < _instances.length; ++i) {
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix.use-prefix-incremen
  t-not-postfix                                                                 
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
          Details: https://sg.run/nxLr                                          
                                                                                
          222┆ nextInstanceId++;

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Partially scanned: 1 files only partially analyzed due to parsing or internal Semgrep errors

Ran 50 rules on 1 file: 14 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
