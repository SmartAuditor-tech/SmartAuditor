METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                   
                   
┌─────────────────┐
│ 4 Code Findings │
└─────────────────┘
                                                                      
    /g4b/contracts/helpers/valueOracle/oracles/UniswapValueOracle.sol 
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           31┆ constructor(address _factory, PositionRegistry _registry) {
           32┆     factory = _factory;
           33┆     registry = _registry;
           34┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require.use-custom-error-not-re
  quire                                                                         
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
          Details: https://sg.run/ej3L                                          
                                                                                
           50┆ require(pool != address(0), "pool doesn't exist");
            ⋮┆----------------------------------------
       solidity.performance.use-nested-if.use-nested-if                         
          Using nested is cheaper than using && multiple check combinations.    
  There are more                                                                
          advantages, such as easier to read code and better coverage reports.  
          Details: https://sg.run/dXw0                                          
                                                                                
           82┆ if (tickCumulativesDelta < 0 && (tickCumulativesDelta %          
  int56(int32(period)) != 0)) {                                                 
           83┆     timeWeightedAverageTick--;
           84┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-decrement-not-postfix.use-prefix-decremen
  t-not-postfix                                                                 
          Consider using the prefix decrement expression whenever the return    
  value is not needed. The                                                      
          prefix decrement expression is cheaper in terms of gas.               
          Details: https://sg.run/Z024                                          
                                                                                
           83┆ timeWeightedAverageTick--;

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 4 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
