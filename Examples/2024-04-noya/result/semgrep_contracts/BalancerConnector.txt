METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                   
                   
┌─────────────────┐
│ 8 Code Findings │
└─────────────────┘
                                                    
    /g4b/contracts/connectors/BalancerConnector.sol 
       solidity.performance.array-length-outside-loop.array-length-outside-loop 
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
          Details: https://sg.run/r4LJ                                          
                                                                                
           77┆ for (uint256 i = 0; i < tokens.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           42┆ constructor(address _balancerVault, address bal, address aura,   
  BaseConnectorCP memory baseConnectorParams)                                   
           43┆     BaseConnector(baseConnectorParams)
           44┆ {
           45┆     require(_balancerVault != address(0));
           46┆     require(bal != address(0));
           47┆     require(aura != address(0));
           48┆     AURA = aura;
           49┆     BAL = bal;
           50┆     balancerVault = _balancerVault;
           51┆ }
            ⋮┆----------------------------------------
       solidity.performance.state-variable-read-in-a-loop.state-variable-read-in
  -a-loop                                                                       
          Replace state variable reads and writes within loops with local       
  variable reads and writes.                                                    
          Details: https://sg.run/xADy                                          
                                                                                
           78┆ if (amounts[i] > 0) _approveOperations(tokens[i], balancerVault, 
  amounts[i]);                                                                  
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop.unnecessary-c
  hecked-arithmetic-in-loop                                                     
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
          Details: https://sg.run/OvDk                                          
                                                                                
           54┆ for (uint256 i = 0; i < rewardsPools.length; i++) {
            ⋮┆----------------------------------------
           77┆ for (uint256 i = 0; i < tokens.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix.use-prefix-incremen
  t-not-postfix                                                                 
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
          Details: https://sg.run/nxLr                                          
                                                                                
           54┆ for (uint256 i = 0; i < rewardsPools.length; i++) {
            ⋮┆----------------------------------------
           77┆ for (uint256 i = 0; i < tokens.length; i++) {
            ⋮┆----------------------------------------
       solidity.security.balancer-readonly-reentrancy-getpooltokens.balancer-rea
  donly-reentrancy-getpooltokens                                                
          IBalancerVault(balancerVault).getPoolTokens() call on a Balancer pool 
  is not protected from                                                         
          the read-only reentrancy.                                             
          Details: https://sg.run/803Q                                          
                                                                                
          166┆ (, uint256[] memory _tokenBalances,) =                           
  IBalancerVault(balancerVault).getPoolTokens(pool.poolId);                     

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 8 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
