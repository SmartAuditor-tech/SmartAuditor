METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                   
                   
┌─────────────────┐
│ 4 Code Findings │
└─────────────────┘
                                                    
    /g4b/contracts/connectors/MaverickConnector.sol 
       solidity.performance.array-length-outside-loop.array-length-outside-loop 
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
          Details: https://sg.run/r4LJ                                          
                                                                                
          140┆ for (uint256 i = 0; i < earnedInfo.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           43┆ constructor(address _mav, address _veMav, address mr, address pi,
  BaseConnectorCP memory baseCP)                                                
           44┆     BaseConnector(baseCP)
           45┆ {
           46┆     require(_mav != address(0));
           47┆     require(_veMav != address(0));
           48┆     require(mr != address(0));
           49┆     require(pi != address(0));
           50┆     mav = _mav;
           51┆     veMav = _veMav;
           52┆     maverickRouter = mr;
             [hid 2 additional lines, adjust with --max-lines-per-finding] 
       solidity.performance.unnecessary-checked-arithmetic-in-loop.unnecessary-c
  hecked-arithmetic-in-loop                                                     
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
          Details: https://sg.run/OvDk                                          
                                                                                
          140┆ for (uint256 i = 0; i < earnedInfo.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix.use-prefix-incremen
  t-not-postfix                                                                 
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
          Details: https://sg.run/nxLr                                          
                                                                                
          140┆ for (uint256 i = 0; i < earnedInfo.length; i++) {

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 4 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
