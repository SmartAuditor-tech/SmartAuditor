METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                   
                   
┌─────────────────┐
│ 5 Code Findings │
└─────────────────┘
                                                  
    /g4b/contracts/connectors/PendleConnector.sol 
       solidity.performance.array-length-outside-loop.array-length-outside-loop 
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
          Details: https://sg.run/r4LJ                                          
                                                                                
          244┆ for (uint256 i = 0; i < rewardTokens.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           57┆ constructor(address _pendleMarketDepositHelper, address          
  _pendleRouter, address SR, BaseConnectorCP memory baseCP)                     
           58┆     BaseConnector(baseCP)
           59┆ {
           60┆     require(_pendleMarketDepositHelper != address(0));
           61┆     require(_pendleRouter != address(0));
           62┆     require(SR != address(0));
           63┆     pendleMarketDepositHelper =                                  
  IPendleMarketDepositHelper(_pendleMarketDepositHelper);                       
           64┆     pendleRouter = IPAllActionV3(_pendleRouter);
           65┆     staticRouter = IPendleStaticRouter(SR);
           66┆ }
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop.unnecessary-c
  hecked-arithmetic-in-loop                                                     
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
          Details: https://sg.run/OvDk                                          
                                                                                
          244┆ for (uint256 i = 0; i < rewardTokens.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.use-nested-if.use-nested-if                         
          Using nested is cheaper than using && multiple check combinations.    
  There are more                                                                
          advantages, such as easier to read code and better coverage reports.  
          Details: https://sg.run/dXw0                                          
                                                                                
          223┆ if (closePosition && isMarketEmpty(market)) {
          224┆     registry.updateHoldingPosition(
          225┆         vaultId,
          226┆         registry.calculatePositionId(address(this),              
  PENDLE_POSITION_ID, abi.encode(market)),                                      
          227┆         "",
          228┆         "",
          229┆         true
          230┆     );
          231┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix.use-prefix-incremen
  t-not-postfix                                                                 
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
          Details: https://sg.run/nxLr                                          
                                                                                
          244┆ for (uint256 i = 0; i < rewardTokens.length; i++) {

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 5 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
