{
    "success": true,
    "finding_length": 22,
    "findings": [
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "BaseConnector._updateTokenInRegistry(address) (contracts/helpers/BaseConnector.sol#158-160) uses a dangerous strict equality:\n\t- _updateTokenInRegistry(token,IERC20(token).balanceOf(address(this)) == 0) (contracts/helpers/BaseConnector.sol#159)\n",
            "filename": "SNXConnector.sol",
            "classification": [],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 159
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyGovernance() (contracts/governance/NoyaGovernanceBase.sol#85-89) ignores return value by (governer,None,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#86)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyGovernance",
            "contract": "NoyaGovernanceBase",
            "line": 86
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SNXV3Connector.claimRewards(uint128,uint128,address,address) (contracts/connectors/SNXConnector.sol#94-100) ignores return value by SNXCoreProxy.claimRewards(accountId,poolId,collateralType,distributor) (contracts/connectors/SNXConnector.sol#98)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "claimRewards",
            "contract": "SNXV3Connector",
            "line": 98
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (None,None,None,None,watcherContract,None) = registry.getGovernanceAddresses(vaultId) (contracts/helpers/BaseConnector.sol#91)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 91
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainer() (contracts/governance/NoyaGovernanceBase.sol#75-79) ignores return value by (None,maintainer,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#76)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainer",
            "contract": "NoyaGovernanceBase",
            "line": 76
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergency() (contracts/governance/NoyaGovernanceBase.sol#43-47) ignores return value by (None,None,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#44)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 44
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainerOrEmergency() (contracts/governance/NoyaGovernanceBase.sol#65-69) ignores return value by (None,maintainer,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#66)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainerOrEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 66
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.addLiquidity(address[],uint256[],bytes) (contracts/helpers/BaseConnector.sol#169-193) ignores return value by ITokenTransferCallBack(msg.sender).sendTokensToTrustedAddress(tokens[i],amounts[i],msg.sender,) (contracts/helpers/BaseConnector.sol#181)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "addLiquidity",
            "contract": "BaseConnector",
            "line": 181
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SNXV3Connector.withdraw(address,uint256,uint128) (contracts/connectors/SNXConnector.sol#46-62) ignores return value by registry.updateHoldingPosition(vaultId,registry.calculatePositionId(address(this),SNX_POSITION_ID,),abi.encode(_accountId,_token),,true) (contracts/connectors/SNXConnector.sol#52-58)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "withdraw",
            "contract": "SNXV3Connector",
            "line": 52,
            "line_end": 58
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by registry.updateHoldingPosition(vaultId,positionId,abi.encode(address(this)),,remove) (contracts/helpers/BaseConnector.sol#144)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 144
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SNXV3Connector.withdraw(address,uint256,uint128) (contracts/connectors/SNXConnector.sol#46-62) ignores return value by (c,None,None) = SNXCoreProxy.getAccountCollateral(_accountId,_token) (contracts/connectors/SNXConnector.sol#50)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "withdraw",
            "contract": "SNXV3Connector",
            "line": 50
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#89)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 89
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#136)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 136
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyManager() (contracts/governance/NoyaGovernanceBase.sol#31-37) ignores return value by (None,None,None,keeperContract,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#32)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyManager",
            "contract": "NoyaGovernanceBase",
            "line": 32
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SNXV3Connector.deposit(address,uint256,uint128) (contracts/connectors/SNXConnector.sol#30-44) ignores return value by registry.updateHoldingPosition(vaultId,registry.calculatePositionId(address(this),SNX_POSITION_ID,),abi.encode(_accountId,_token),,false) (contracts/connectors/SNXConnector.sol#35-41)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "deposit",
            "contract": "SNXV3Connector",
            "line": 35,
            "line_end": 41
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergencyOrWatcher() (contracts/governance/NoyaGovernanceBase.sol#53-59) ignores return value by (None,None,None,None,watcherContract,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#54)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergencyOrWatcher",
            "contract": "NoyaGovernanceBase",
            "line": 54
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SNXV3Connector.createAccount() (contracts/connectors/SNXConnector.sol#25-28) ignores return value by SNXCoreProxy.createAccount() (contracts/connectors/SNXConnector.sol#27)\n",
            "filename": "SNXConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "createAccount",
            "contract": "SNXV3Connector",
            "line": 27
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.DUST_LEVEL (contracts/helpers/BaseConnector.sol#31) should be constant \n",
            "filename": "SNXConnector.sol",
            "classification": [],
            "line": 31
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.MINIMUM_HEALTH_FACTOR (contracts/helpers/BaseConnector.sol#28) should be constant \n",
            "filename": "SNXConnector.sol",
            "classification": [],
            "line": 28
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "SNXV3Connector.SNXCoreProxy (contracts/connectors/SNXConnector.sol#14) should be immutable \n",
            "filename": "SNXConnector.sol",
            "classification": [],
            "line": 14
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.vaultId (contracts/governance/NoyaGovernanceBase.sol#8) should be immutable \n",
            "filename": "SNXConnector.sol",
            "classification": [],
            "line": 8
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.registry (contracts/governance/NoyaGovernanceBase.sol#7) should be immutable \n",
            "filename": "SNXConnector.sol",
            "classification": [],
            "line": 7
        }
    ]
}