{
    "success": true,
    "finding_length": 32,
    "findings": [
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "CurveConnector.LPToUnder(PoolInfo,uint256) (contracts/connectors/CurveConnector.sol#279-288) uses a dangerous strict equality:\n\t- balance == 0 (contracts/connectors/CurveConnector.sol#280)\n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "function": "LPToUnder",
            "contract": "CurveConnector",
            "line": 280
        },
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "BaseConnector._updateTokenInRegistry(address) (contracts/helpers/BaseConnector.sol#158-160) uses a dangerous strict equality:\n\t- _updateTokenInRegistry(token,IERC20(token).balanceOf(address(this)) == 0) (contracts/helpers/BaseConnector.sol#159)\n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 159
        },
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "CurveConnector.decreaseCurvePosition(address,uint256,uint256,uint256) (contracts/connectors/CurveConnector.sol#160-175) uses a dangerous strict equality:\n\t- totalLpBalanceOf(poolInfo) == 0 (contracts/connectors/CurveConnector.sol#171)\n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "function": "decreaseCurvePosition",
            "contract": "CurveConnector",
            "line": 171
        },
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "BaseConnector._getValue(address,address,uint256) (contracts/helpers/BaseConnector.sol#253-261) uses a dangerous strict equality:\n\t- amount == 0 (contracts/helpers/BaseConnector.sol#257)\n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "function": "_getValue",
            "contract": "BaseConnector",
            "line": 257
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyGovernance() (contracts/governance/NoyaGovernanceBase.sol#85-89) ignores return value by (governer,None,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#86)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyGovernance",
            "contract": "NoyaGovernanceBase",
            "line": 86
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (None,None,None,None,watcherContract,None) = registry.getGovernanceAddresses(vaultId) (contracts/helpers/BaseConnector.sol#91)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 91
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.withdrawFromPrisma(address,uint256) (contracts/connectors/CurveConnector.sol#212-215) ignores return value by IDepositToken(depostiToken).withdraw(address(this),amount) (contracts/connectors/CurveConnector.sol#213)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "withdrawFromPrisma",
            "contract": "CurveConnector",
            "line": 213
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainer() (contracts/governance/NoyaGovernanceBase.sol#75-79) ignores return value by (None,maintainer,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#76)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainer",
            "contract": "NoyaGovernanceBase",
            "line": 76
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergency() (contracts/governance/NoyaGovernanceBase.sol#43-47) ignores return value by (None,None,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#44)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 44
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainerOrEmergency() (contracts/governance/NoyaGovernanceBase.sol#65-69) ignores return value by (None,maintainer,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#66)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainerOrEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 66
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.addLiquidity(address[],uint256[],bytes) (contracts/helpers/BaseConnector.sol#169-193) ignores return value by ITokenTransferCallBack(msg.sender).sendTokensToTrustedAddress(tokens[i],amounts[i],msg.sender,) (contracts/helpers/BaseConnector.sol#181)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "addLiquidity",
            "contract": "BaseConnector",
            "line": 181
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.depositIntoConvexBooster(address,uint256,uint256,bool) (contracts/connectors/CurveConnector.sol#103-108) ignores return value by convexBooster.deposit(pid,amount,stake) (contracts/connectors/CurveConnector.sol#107)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "depositIntoConvexBooster",
            "contract": "CurveConnector",
            "line": 107
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by registry.updateHoldingPosition(vaultId,positionId,abi.encode(address(this)),,remove) (contracts/helpers/BaseConnector.sol#144)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 144
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#89)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 89
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.withdrawFromConvexBooster(uint256,uint256) (contracts/connectors/CurveConnector.sol#182-185) ignores return value by convexBooster.withdraw(pid,amount) (contracts/connectors/CurveConnector.sol#183)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "withdrawFromConvexBooster",
            "contract": "CurveConnector",
            "line": 183
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#136)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 136
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyManager() (contracts/governance/NoyaGovernanceBase.sol#31-37) ignores return value by (None,None,None,keeperContract,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#32)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyManager",
            "contract": "NoyaGovernanceBase",
            "line": 32
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.withdrawFromConvexRewardPool(address,uint256) (contracts/connectors/CurveConnector.sol#192-195) ignores return value by IConvexBasicRewards(pool).withdraw(amount,true) (contracts/connectors/CurveConnector.sol#193)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "withdrawFromConvexRewardPool",
            "contract": "CurveConnector",
            "line": 193
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.depositIntoPrisma(address,uint256,bool) (contracts/connectors/CurveConnector.sol#81-94) ignores return value by IDepositToken(depostiToken).deposit(address(this),amount) (contracts/connectors/CurveConnector.sol#93)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "depositIntoPrisma",
            "contract": "CurveConnector",
            "line": 93
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.harvestPrismaRewards(address[]) (contracts/connectors/CurveConnector.sol#233-241) ignores return value by IDepositToken(pools[i]).claimReward(address(this)) (contracts/connectors/CurveConnector.sol#235)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "harvestPrismaRewards",
            "contract": "CurveConnector",
            "line": 235
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.harvestConvexRewards(address[]) (contracts/connectors/CurveConnector.sol#247-255) ignores return value by baseRewardPool.getReward(address(this),true) (contracts/connectors/CurveConnector.sol#250)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "harvestConvexRewards",
            "contract": "CurveConnector",
            "line": 250
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.decreaseCurvePosition(address,uint256,uint256,uint256) (contracts/connectors/CurveConnector.sol#160-175) ignores return value by registry.updateHoldingPosition(vaultId,positionId,,,true) (contracts/connectors/CurveConnector.sol#172)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "decreaseCurvePosition",
            "contract": "CurveConnector",
            "line": 172
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergencyOrWatcher() (contracts/governance/NoyaGovernanceBase.sol#53-59) ignores return value by (None,None,None,None,watcherContract,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#54)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergencyOrWatcher",
            "contract": "NoyaGovernanceBase",
            "line": 54
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "CurveConnector.openCurvePosition(address,uint256,uint256,uint256) (contracts/connectors/CurveConnector.sol#117-151) ignores return value by registry.updateHoldingPosition(vaultId,positionId,,,false) (contracts/connectors/CurveConnector.sol#150)\n",
            "filename": "CurveConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "openCurvePosition",
            "contract": "CurveConnector",
            "line": 150
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.DUST_LEVEL (contracts/helpers/BaseConnector.sol#31) should be constant \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 31
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.MINIMUM_HEALTH_FACTOR (contracts/helpers/BaseConnector.sol#28) should be constant \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 28
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "CurveConnector.CVX (contracts/connectors/CurveConnector.sol#27) should be immutable \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 27
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "CurveConnector.convexBooster (contracts/connectors/CurveConnector.sol#26) should be immutable \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 26
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "CurveConnector.CRV (contracts/connectors/CurveConnector.sol#28) should be immutable \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 28
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "CurveConnector.PRISMA (contracts/connectors/CurveConnector.sol#29) should be immutable \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 29
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.vaultId (contracts/governance/NoyaGovernanceBase.sol#8) should be immutable \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 8
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.registry (contracts/governance/NoyaGovernanceBase.sol#7) should be immutable \n",
            "filename": "CurveConnector.sol",
            "classification": [],
            "line": 7
        }
    ]
}