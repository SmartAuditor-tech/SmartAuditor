{
    "success": true,
    "finding_length": 27,
    "findings": [
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "BaseConnector._updateTokenInRegistry(address) (contracts/helpers/BaseConnector.sol#158-160) uses a dangerous strict equality:\n\t- _updateTokenInRegistry(token,IERC20(token).balanceOf(address(this)) == 0) (contracts/helpers/BaseConnector.sol#159)\n",
            "filename": "SiloConnector.sol",
            "classification": [],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 159
        },
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "SiloConnector._getPositionTVL(HoldingPI,address) (contracts/connectors/SiloConnector.sol#109-128) uses a dangerous strict equality:\n\t- depositAmount == 0 && borrowAmount == 0 (contracts/connectors/SiloConnector.sol#120)\n",
            "filename": "SiloConnector.sol",
            "classification": [],
            "function": "_getPositionTVL",
            "contract": "SiloConnector",
            "line": 120
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyGovernance() (contracts/governance/NoyaGovernanceBase.sol#85-89) ignores return value by (governer,None,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#86)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyGovernance",
            "contract": "NoyaGovernanceBase",
            "line": 86
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.withdraw(address,address,uint256,bool,bool) (contracts/connectors/SiloConnector.sol#52-69) ignores return value by registry.updateHoldingPosition(vaultId,registry.calculatePositionId(address(this),SILO_LP_ID,abi.encode(siloToken)),,,true) (contracts/connectors/SiloConnector.sol#61-63)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "withdraw",
            "contract": "SiloConnector",
            "line": 61,
            "line_end": 63
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (None,None,None,None,watcherContract,None) = registry.getGovernanceAddresses(vaultId) (contracts/helpers/BaseConnector.sol#91)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 91
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainer() (contracts/governance/NoyaGovernanceBase.sol#75-79) ignores return value by (None,maintainer,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#76)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainer",
            "contract": "NoyaGovernanceBase",
            "line": 76
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergency() (contracts/governance/NoyaGovernanceBase.sol#43-47) ignores return value by (None,None,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#44)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 44
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainerOrEmergency() (contracts/governance/NoyaGovernanceBase.sol#65-69) ignores return value by (None,maintainer,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#66)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainerOrEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 66
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.deposit(address,address,uint256,bool) (contracts/connectors/SiloConnector.sol#33-42) ignores return value by silo.deposit(dToken,amount,oC) (contracts/connectors/SiloConnector.sol#36)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "deposit",
            "contract": "SiloConnector",
            "line": 36
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.addLiquidity(address[],uint256[],bytes) (contracts/helpers/BaseConnector.sol#169-193) ignores return value by ITokenTransferCallBack(msg.sender).sendTokensToTrustedAddress(tokens[i],amounts[i],msg.sender,) (contracts/helpers/BaseConnector.sol#181)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "addLiquidity",
            "contract": "BaseConnector",
            "line": 181
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.deposit(address,address,uint256,bool) (contracts/connectors/SiloConnector.sol#33-42) ignores return value by registry.updateHoldingPosition(vaultId,registry.calculatePositionId(address(this),SILO_LP_ID,abi.encode(siloToken)),,,false) (contracts/connectors/SiloConnector.sol#38-40)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "deposit",
            "contract": "SiloConnector",
            "line": 38,
            "line_end": 40
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.isSiloEmpty(ISilo) (contracts/connectors/SiloConnector.sol#130-141) ignores return value by (None,assetsS) = silo.getAssetsWithState() (contracts/connectors/SiloConnector.sol#131)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "isSiloEmpty",
            "contract": "SiloConnector",
            "line": 131
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by registry.updateHoldingPosition(vaultId,positionId,abi.encode(address(this)),,remove) (contracts/helpers/BaseConnector.sol#144)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 144
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.borrow(address,address,uint256) (contracts/connectors/SiloConnector.sol#85-90) ignores return value by silo.borrow(bToken,amount) (contracts/connectors/SiloConnector.sol#87)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "borrow",
            "contract": "SiloConnector",
            "line": 87
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector._getUnderlyingTokens(uint256,bytes) (contracts/connectors/SiloConnector.sol#143-148) ignores return value by (assets,None) = silo.getAssetsWithState() (contracts/connectors/SiloConnector.sol#146)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_getUnderlyingTokens",
            "contract": "SiloConnector",
            "line": 146
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#89)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 89
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.repay(address,address,uint256) (contracts/connectors/SiloConnector.sol#98-107) ignores return value by silo.repay(rToken,amount) (contracts/connectors/SiloConnector.sol#101)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "repay",
            "contract": "SiloConnector",
            "line": 101
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#136)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 136
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyManager() (contracts/governance/NoyaGovernanceBase.sol#31-37) ignores return value by (None,None,None,keeperContract,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#32)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyManager",
            "contract": "NoyaGovernanceBase",
            "line": 32
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.withdraw(address,address,uint256,bool,bool) (contracts/connectors/SiloConnector.sol#52-69) ignores return value by silo.withdraw(wToken,amount,oC) (contracts/connectors/SiloConnector.sol#58)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "withdraw",
            "contract": "SiloConnector",
            "line": 58
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "SiloConnector.getData(address) (contracts/connectors/SiloConnector.sol#71-77) ignores return value by SolvencyV2.getData(ISilo(siloRepository.getSilo(siloToken)),address(this),minimumHealthFactor) (contracts/connectors/SiloConnector.sol#76)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "getData",
            "contract": "SiloConnector",
            "line": 76
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergencyOrWatcher() (contracts/governance/NoyaGovernanceBase.sol#53-59) ignores return value by (None,None,None,None,watcherContract,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#54)\n",
            "filename": "SiloConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergencyOrWatcher",
            "contract": "NoyaGovernanceBase",
            "line": 54
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.DUST_LEVEL (contracts/helpers/BaseConnector.sol#31) should be constant \n",
            "filename": "SiloConnector.sol",
            "classification": [],
            "line": 31
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "SiloConnector.siloRepository (contracts/connectors/SiloConnector.sol#9) should be immutable \n",
            "filename": "SiloConnector.sol",
            "classification": [],
            "line": 9
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.MINIMUM_HEALTH_FACTOR (contracts/helpers/BaseConnector.sol#28) should be immutable \n",
            "filename": "SiloConnector.sol",
            "classification": [],
            "line": 28
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.vaultId (contracts/governance/NoyaGovernanceBase.sol#8) should be immutable \n",
            "filename": "SiloConnector.sol",
            "classification": [],
            "line": 8
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.registry (contracts/governance/NoyaGovernanceBase.sol#7) should be immutable \n",
            "filename": "SiloConnector.sol",
            "classification": [],
            "line": 7
        }
    ]
}