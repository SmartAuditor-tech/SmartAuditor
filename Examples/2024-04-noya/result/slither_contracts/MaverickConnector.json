{
    "success": true,
    "finding_length": 26,
    "findings": [
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "BaseConnector._updateTokenInRegistry(address) (contracts/helpers/BaseConnector.sol#158-160) uses a dangerous strict equality:\n\t- _updateTokenInRegistry(token,IERC20(token).balanceOf(address(this)) == 0) (contracts/helpers/BaseConnector.sol#159)\n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 159
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyGovernance() (contracts/governance/NoyaGovernanceBase.sol#85-89) ignores return value by (governer,None,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#86)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyGovernance",
            "contract": "NoyaGovernanceBase",
            "line": 86
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (None,None,None,None,watcherContract,None) = registry.getGovernanceAddresses(vaultId) (contracts/helpers/BaseConnector.sol#91)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 91
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainer() (contracts/governance/NoyaGovernanceBase.sol#75-79) ignores return value by (None,maintainer,None,None,None,None) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#76)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainer",
            "contract": "NoyaGovernanceBase",
            "line": 76
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergency() (contracts/governance/NoyaGovernanceBase.sol#43-47) ignores return value by (None,None,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#44)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 44
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyMaintainerOrEmergency() (contracts/governance/NoyaGovernanceBase.sol#65-69) ignores return value by (None,maintainer,None,None,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#66)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyMaintainerOrEmergency",
            "contract": "NoyaGovernanceBase",
            "line": 66
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.addLiquidity(address[],uint256[],bytes) (contracts/helpers/BaseConnector.sol#169-193) ignores return value by ITokenTransferCallBack(msg.sender).sendTokensToTrustedAddress(tokens[i],amounts[i],msg.sender,) (contracts/helpers/BaseConnector.sol#181)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "addLiquidity",
            "contract": "BaseConnector",
            "line": 181
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "MaverickConnector.addLiquidityInMaverickPool(MavericAddLiquidityParams) (contracts/connectors/MaverickConnector.sol#91-108) ignores return value by registry.updateHoldingPosition(vaultId,registry.calculatePositionId(address(this),MAVERICK_LP,abi.encode(p.pool)),,,false) (contracts/connectors/MaverickConnector.sol#102-104)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "addLiquidityInMaverickPool",
            "contract": "MaverickConnector",
            "line": 102,
            "line_end": 104
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by registry.updateHoldingPosition(vaultId,positionId,abi.encode(address(this)),,remove) (contracts/helpers/BaseConnector.sol#144)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 144
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector.sendTokensToTrustedAddress(address,uint256,address,bytes) (contracts/helpers/BaseConnector.sol#84-108) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#89)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "sendTokensToTrustedAddress",
            "contract": "BaseConnector",
            "line": 89
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "MaverickConnector.addLiquidityInMaverickPool(MavericAddLiquidityParams) (contracts/connectors/MaverickConnector.sol#91-108) ignores return value by (tokenId,None,None,None) = IMaverickRouter(maverickRouter).addLiquidityToPool{value: sendEthAmount}(p.pool,0,p.params,p.minTokenAAmount,p.minTokenBAmount,p.deadline) (contracts/connectors/MaverickConnector.sol#98-100)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "addLiquidityInMaverickPool",
            "contract": "MaverickConnector",
            "line": 98,
            "line_end": 100
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "BaseConnector._updateTokenInRegistry(address,bool) (contracts/helpers/BaseConnector.sol#135-146) ignores return value by (accountingManager,None) = registry.getVaultAddresses(vaultId) (contracts/helpers/BaseConnector.sol#136)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "_updateTokenInRegistry",
            "contract": "BaseConnector",
            "line": 136
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "MaverickConnector.removeLiquidityFromMaverickPool(MavericRemoveLiquidityParams) (contracts/connectors/MaverickConnector.sol#115-131) ignores return value by registry.updateHoldingPosition(vaultId,registry.calculatePositionId(address(this),MAVERICK_LP,abi.encode(p.pool)),,,true) (contracts/connectors/MaverickConnector.sol#125-127)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "removeLiquidityFromMaverickPool",
            "contract": "MaverickConnector",
            "line": 125,
            "line_end": 127
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyManager() (contracts/governance/NoyaGovernanceBase.sol#31-37) ignores return value by (None,None,None,keeperContract,None,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#32)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyManager",
            "contract": "NoyaGovernanceBase",
            "line": 32
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "MaverickConnector.claimBoostedPositionRewards(IMaverickReward) (contracts/connectors/MaverickConnector.sol#137-147) ignores return value by rewardContract.getReward(address(this),tokenIndex) (contracts/connectors/MaverickConnector.sol#143)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "claimBoostedPositionRewards",
            "contract": "MaverickConnector",
            "line": 143
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "NoyaGovernanceBase.onlyEmergencyOrWatcher() (contracts/governance/NoyaGovernanceBase.sol#53-59) ignores return value by (None,None,None,None,watcherContract,emergencyManager) = registry.getGovernanceAddresses(vaultId) (contracts/governance/NoyaGovernanceBase.sol#54)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "onlyEmergencyOrWatcher",
            "contract": "NoyaGovernanceBase",
            "line": 54
        },
        {
            "name": "unused-return",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "MaverickConnector.removeLiquidityFromMaverickPool(MavericRemoveLiquidityParams) (contracts/connectors/MaverickConnector.sol#115-131) ignores return value by IMaverickRouter(maverickRouter).removeLiquidity(p.pool,address(this),p.tokenId,p.params,p.minTokenAAmount,p.minTokenBAmount,p.deadline) (contracts/connectors/MaverickConnector.sol#122-124)\n",
            "filename": "MaverickConnector.sol",
            "classification": [
                "SWC-104",
                " DASP-4"
            ],
            "function": "removeLiquidityFromMaverickPool",
            "contract": "MaverickConnector",
            "line": 122,
            "line_end": 124
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "MaverickConnector.MAVERICK_LP (contracts/connectors/MaverickConnector.sol#35) should be constant \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 35
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.DUST_LEVEL (contracts/helpers/BaseConnector.sol#31) should be constant \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 31
        },
        {
            "name": "constable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "BaseConnector.MINIMUM_HEALTH_FACTOR (contracts/helpers/BaseConnector.sol#28) should be constant \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 28
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "MaverickConnector.positionInspector (contracts/connectors/MaverickConnector.sol#33) should be immutable \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 33
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "MaverickConnector.veMav (contracts/connectors/MaverickConnector.sol#31) should be immutable \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 31
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.vaultId (contracts/governance/NoyaGovernanceBase.sol#8) should be immutable \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 8
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "MaverickConnector.maverickRouter (contracts/connectors/MaverickConnector.sol#32) should be immutable \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 32
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "MaverickConnector.mav (contracts/connectors/MaverickConnector.sol#30) should be immutable \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 30
        },
        {
            "name": "immutable-states",
            "impact": "Optimization",
            "confidence": "High",
            "message": "NoyaGovernanceBase.registry (contracts/governance/NoyaGovernanceBase.sol#7) should be immutable \n",
            "filename": "MaverickConnector.sol",
            "classification": [],
            "line": 7
        }
    ]
}