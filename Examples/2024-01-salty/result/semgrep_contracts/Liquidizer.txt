METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                   
                   
┌─────────────────┐
│ 7 Code Findings │
└─────────────────┘
                                   
    /g4b/src/stable/Liquidizer.sol 
       solidity.best-practice.use-ownable2step.use-ownable2step                 
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
          Details: https://sg.run/yBAA                                          
                                                                                
           21┆ contract Liquidizer is ILiquidizer, Ownable
            ⋮┆----------------------------------------
       solidity.performance.inefficient-state-variable-increment.inefficient-sta
  te-variable-increment                                                         
          <x> += <y> costs more gas than <x> = <x> + <y> for state variables.   
          Details: https://sg.run/bp9v                                          
                                                                                
           85┆ usdsThatShouldBeBurned += usdsToBurn;
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           49┆ constructor( IExchangeConfig _exchangeConfig, IPoolsConfig       
  _poolsConfig  )                                                               
           50┆  
  {             
           51┆    poolsConfig =           
  _poolsConfig;                           
           52┆    exchangeConfig =              
  _exchangeConfig;                              
           53┆ 
           54┆    wbtc =                     
  _exchangeConfig.wbtc();                    
           55┆    weth =                     
  _exchangeConfig.weth();                    
           56┆    usds =                     
  _exchangeConfig.usds();                    
           57┆    salt =                     
  _exchangeConfig.salt();                    
           58┆    dai =                    
  _exchangeConfig.dai();                   
             [hid 1 additional lines, adjust with --max-lines-per-finding] 
       solidity.performance.use-custom-error-not-require.use-custom-error-not-re
  quire                                                                         
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
          Details: https://sg.run/ej3L                                          
                                                                                
           83┆ require( msg.sender == address(collateralAndLiquidity),          
  "Liquidizer.incrementBurnableUSDS is only callable from the                   
  CollateralAndLiquidity contract" );                                           
            ⋮┆----------------------------------------
          134┆ require( msg.sender == address(exchangeConfig.upkeep()),         
  "Liquidizer.performUpkeep is only callable from the Upkeep contract" );       
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string.use-short-revert-string     
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
          Details: https://sg.run/E9LB                                          
                                                                                
           83┆ require( msg.sender == address(collateralAndLiquidity),          
  "Liquidizer.incrementBurnableUSDS is only callable from the                   
  CollateralAndLiquidity contract" );                                           
            ⋮┆----------------------------------------
          134┆ require( msg.sender == address(exchangeConfig.upkeep()),         
  "Liquidizer.performUpkeep is only callable from the Upkeep contract" );       

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 7 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
