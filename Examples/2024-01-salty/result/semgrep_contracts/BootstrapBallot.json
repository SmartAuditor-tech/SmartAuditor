{
    "success": true,
    "finding_length": 18,
    "findings": [
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 34
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 35
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 36
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 37
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 38
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 39
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 40
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 41
        },
        {
            "classification": [],
            "name": "non-payable-constructor",
            "category": "performance",
            "message": "Consider making costructor payable to save gas. Details: https://sg.run/wRBd",
            "line": 42
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 36
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 50
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 54
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 71
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 72
        },
        {
            "classification": [],
            "name": "use-prefix-increment-not-postfix",
            "category": "performance",
            "message": "t-not-postfix Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas. Details: https://sg.run/nxLr",
            "line": 57
        },
        {
            "classification": [],
            "name": "use-prefix-increment-not-postfix",
            "category": "performance",
            "message": "t-not-postfix Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas. Details: https://sg.run/nxLr",
            "line": 59
        },
        {
            "classification": [],
            "name": "use-short-revert-string",
            "category": "performance",
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met. Details: https://sg.run/E9LB",
            "line": 54
        },
        {
            "classification": [],
            "name": "use-short-revert-string",
            "category": "performance",
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met. Details: https://sg.run/E9LB",
            "line": 71
        }
    ]
}