{
    "success": true,
    "finding_length": 11,
    "findings": [
        {
            "name": "arbitrary-send-eth",
            "impact": "High",
            "confidence": "Medium",
            "message": "TimelockController._execute(address,uint256,bytes) (contracts/TimelockController.sol#368-371) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success,None) = target.call{value: value}(data) (contracts/TimelockController.sol#369)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "_execute",
            "contract": "TimelockController",
            "line": 369
        },
        {
            "name": "incorrect-exp",
            "impact": "High",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) has bitwise-xor operator ^ instead of the exponentiation operator **: \n\t - inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#116)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 116
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)\n\t- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#120)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 120
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- prod0 = prod0 / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#104)\n\t- result = prod0 * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#131)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 131
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)\n\t- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#122)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 122
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)\n\t- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#125)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 125
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)\n\t- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#124)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 124
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)\n\t- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#123)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 123
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)\n\t- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#121)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 121
        },
        {
            "name": "divide-before-multiply",
            "impact": "Medium",
            "confidence": "Medium",
            "message": "Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#55-134) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#101)\n\t- inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#116)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "mulDiv",
            "contract": "Math",
            "line": 116
        },
        {
            "name": "incorrect-equality",
            "impact": "Medium",
            "confidence": "High",
            "message": "TimelockController.isOperationDone(bytes32) (contracts/TimelockController.sol#176-178) uses a dangerous strict equality:\n\t- getTimestamp(id) == _DONE_TIMESTAMP (contracts/TimelockController.sol#177)\n",
            "filename": "TimelockController.sol",
            "classification": [],
            "function": "isOperationDone",
            "contract": "TimelockController",
            "line": 177
        }
    ]
}