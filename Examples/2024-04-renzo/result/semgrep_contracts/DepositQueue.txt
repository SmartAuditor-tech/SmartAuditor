METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                   
                   
┌─────────────────┐
│ 3 Code Findings │
└─────────────────┘
                                             
    /g4b/contracts/Deposits/DepositQueue.sol 
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           69┆ constructor() {
           70┆     _disableInitializers();
           71┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-nested-if.use-nested-if                         
          Using nested is cheaper than using && multiple check combinations.    
  There are more                                                                
          advantages, such as easier to read code and better coverage reports.  
          Details: https://sg.run/dXw0                                          
                                                                                
          166┆ if (feeAddress != address(0x0) && feeBasisPoints > 0) {
          167┆     feeAmount = (msg.value * feeBasisPoints) / 10000;
          168┆     (bool success, ) = feeAddress.call{ value: feeAmount }("");
          169┆     if (!success) revert TransferFailed();
          170┆ 
          171┆     emit ProtocolFeesPaid(IERC20(address(0x0)), feeAmount,       
  feeAddress);                                                                  
          172┆ }
            ⋮┆----------------------------------------
          260┆ if (feeAddress != address(0x0) && feeBasisPoints > 0) {
          261┆     feeAmount = (balance * feeBasisPoints) / 10000;
          262┆     IERC20(token).safeTransfer(feeAddress, feeAmount);
          263┆ 
          264┆     emit ProtocolFeesPaid(token, feeAmount, feeAddress);
          265┆ }

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 3 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
