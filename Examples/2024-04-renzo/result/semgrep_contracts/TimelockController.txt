METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                    
                    
┌──────────────────┐
│ 31 Code Findings │
└──────────────────┘
                                          
    /g4b/contracts/TimelockController.sol 
       solidity.performance.array-length-outside-loop.array-length-outside-loop 
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
          Details: https://sg.run/r4LJ                                          
                                                                                
          107┆ for (uint256 i = 0; i < proposers.length; ++i) {
            ⋮┆----------------------------------------
          113┆ for (uint256 i = 0; i < executors.length; ++i) {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           87┆ constructor(
           88┆     uint256 minDelay,
           89┆     address[] memory proposers,
           90┆     address[] memory executors,
           91┆     address admin
           92┆ ) {
           93┆     _setRoleAdmin(TIMELOCK_ADMIN_ROLE, TIMELOCK_ADMIN_ROLE);
           94┆     _setRoleAdmin(PROPOSER_ROLE, TIMELOCK_ADMIN_ROLE);
           95┆     _setRoleAdmin(EXECUTOR_ROLE, TIMELOCK_ADMIN_ROLE);
           96┆     _setRoleAdmin(CANCELLER_ROLE, TIMELOCK_ADMIN_ROLE);
             [hid 23 additional lines, adjust with --max-lines-per-finding] 
       solidity.performance.unnecessary-checked-arithmetic-in-loop.unnecessary-c
  hecked-arithmetic-in-loop                                                     
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
          Details: https://sg.run/OvDk                                          
                                                                                
          107┆ for (uint256 i = 0; i < proposers.length; ++i) {
            ⋮┆----------------------------------------
          113┆ for (uint256 i = 0; i < executors.length; ++i) {
            ⋮┆----------------------------------------
          272┆ for (uint256 i = 0; i < targets.length; ++i) {
            ⋮┆----------------------------------------
          355┆ for (uint256 i = 0; i < targets.length; ++i) {
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require.use-custom-error-not-re
  quire                                                                         
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
          Details: https://sg.run/ej3L                                          
                                                                                
          267┆ require(targets.length == values.length, "TimelockController:    
  length mismatch");                                                            
            ⋮┆----------------------------------------
          268┆ require(targets.length == payloads.length, "TimelockController:  
  length mismatch");                                                            
            ⋮┆----------------------------------------
          284┆ require(!isOperation(id), "TimelockController: operation already 
  scheduled");                                                                  
            ⋮┆----------------------------------------
          285┆ require(delay >= getMinDelay(), "TimelockController: insufficient
  delay");                                                                      
            ⋮┆----------------------------------------
          297┆ require(isOperationPending(id), "TimelockController: operation   
  cannot be cancelled");                                                        
            ⋮┆----------------------------------------
          349┆ require(targets.length == values.length, "TimelockController:    
  length mismatch");                                                            
            ⋮┆----------------------------------------
          350┆ require(targets.length == payloads.length, "TimelockController:  
  length mismatch");                                                            
            ⋮┆----------------------------------------
          370┆ require(success, "TimelockController: underlying transaction     
  reverted");                                                                   
            ⋮┆----------------------------------------
          377┆ require(isOperationReady(id), "TimelockController: operation is  
  not ready");                                                                  
            ⋮┆----------------------------------------
          378┆ require(
          379┆     predecessor == bytes32(0) || isOperationDone(predecessor),
          380┆     "TimelockController: missing dependency"
          381┆ );
            ⋮┆----------------------------------------
          388┆ require(isOperationReady(id), "TimelockController: operation is  
  not ready");                                                                  
            ⋮┆----------------------------------------
          403┆ require(msg.sender == address(this), "TimelockController: caller 
  must be timelock");                                                           
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string.use-short-revert-string     
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
          Details: https://sg.run/E9LB                                          
                                                                                
          267┆ require(targets.length == values.length, "TimelockController:    
  length mismatch");                                                            
            ⋮┆----------------------------------------
          268┆ require(targets.length == payloads.length, "TimelockController:  
  length mismatch");                                                            
            ⋮┆----------------------------------------
          284┆ require(!isOperation(id), "TimelockController: operation already 
  scheduled");                                                                  
            ⋮┆----------------------------------------
          285┆ require(delay >= getMinDelay(), "TimelockController: insufficient
  delay");                                                                      
            ⋮┆----------------------------------------
          297┆ require(isOperationPending(id), "TimelockController: operation   
  cannot be cancelled");                                                        
            ⋮┆----------------------------------------
          349┆ require(targets.length == values.length, "TimelockController:    
  length mismatch");                                                            
            ⋮┆----------------------------------------
          350┆ require(targets.length == payloads.length, "TimelockController:  
  length mismatch");                                                            
            ⋮┆----------------------------------------
          370┆ require(success, "TimelockController: underlying transaction     
  reverted");                                                                   
            ⋮┆----------------------------------------
          377┆ require(isOperationReady(id), "TimelockController: operation is  
  not ready");                                                                  
            ⋮┆----------------------------------------
          378┆ require(
          379┆     predecessor == bytes32(0) || isOperationDone(predecessor),
          380┆     "TimelockController: missing dependency"
          381┆ );
            ⋮┆----------------------------------------
          388┆ require(isOperationReady(id), "TimelockController: operation is  
  not ready");                                                                  
            ⋮┆----------------------------------------
          403┆ require(msg.sender == address(this), "TimelockController: caller 
  must be timelock");                                                           

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 31 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
