{
    "success": true,
    "finding_length": 7,
    "findings": [
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 315
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 316
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 317
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 439
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 440
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 441
        },
        {
            "classification": [],
            "name": "use-prefix-decrement-not-postfix",
            "category": "performance",
            "message": "t-not-postfix Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas. Details: https://sg.run/Z024",
            "line": 440
        }
    ]
}