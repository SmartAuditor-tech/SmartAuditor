{
    "success": true,
    "finding_length": 51,
    "findings": [
        {
            "classification": [],
            "name": "inefficient-state-variable-increment",
            "category": "performance",
            "message": "te-variable-increment <x> += <y> costs more gas than <x> = <x> + <y> for state variables. Details: https://sg.run/bp9v",
            "line": 347
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 127
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 148
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 244
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 247
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 248
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 249
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 250
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 251
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 252
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 253
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 254
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 255
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 304
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 357
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 378
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 379
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 380
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 381
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 382
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 385
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 386
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 387
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 388
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 389
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 390
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 391
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 392
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 399
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 424
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 427
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 433
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 438
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 445
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 446
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 447
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 466
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 477
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 478
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 479
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 480
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 485
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 546
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 566
        },
        {
            "classification": [],
            "name": "use-custom-error-not-require",
            "category": "performance",
            "message": "quire Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec. Details: https://sg.run/ej3L",
            "line": 573
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 429
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 430
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 431
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 432
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 433
        },
        {
            "classification": [],
            "name": "use-nested-if",
            "category": "performance",
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports. Details: https://sg.run/dXw0",
            "line": 434
        }
    ]
}