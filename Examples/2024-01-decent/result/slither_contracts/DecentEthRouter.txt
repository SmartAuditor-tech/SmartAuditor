'forge config --json' running
'/Users/tanzezhong/.solc-select/artifacts/solc-0.8.20/solc-0.8.20 --version' running
'/Users/tanzezhong/.solc-select/artifacts/solc-0.8.20/solc-0.8.20 forge-std/=lib/forge-std/src/ solmate/=lib/solmate/src/ @uniswap/v3-periphery/=lib/v3-periphery/ @uniswap/v3-core/=lib/v3-core/ @uniswap/swap-contracts/=lib/swap-router-contracts/contracts/ decent-bridge/=lib/decent-bridge/ better-deployer/=lib/decent-bridge/lib/better-deployer/src/ forge-toolkit/=lib/forge-toolkit/src/ openzeppelin-contracts/=lib/decent-bridge/lib/openzeppelin-contracts/contracts/ @openzeppelin/=lib/decent-bridge/lib/openzeppelin-contracts/ @openzeppelin/contracts/=lib/decent-bridge/lib/openzeppelin-contracts/contracts/ LayerZero/=lib/forge-toolkit/lib/LayerZero/contracts/ ds-test/=lib/forge-std/lib/ds-test/src/ erc4626-tests/=lib/decent-bridge/lib/openzeppelin-contracts/lib/erc4626-tests/ openzeppelin/=lib/decent-bridge/lib/openzeppelin-contracts/contracts/ solidity-examples/=lib/decent-bridge/lib/solidity-examples/contracts/ solidity-stringutils/=lib/decent-bridge/lib/solidity-stringutils/ swap-router-contracts/=lib/swap-router-contracts/contracts/ v3-core/=lib/v3-core/ v3-periphery/=lib/v3-periphery/contracts/ lib/forge-std:ds-test/=lib/decent-bridge/lib/forge-std/lib/ds-test/src/ lib/openzeppelin-contracts:ds-test/=lib/decent-bridge/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/ lib/openzeppelin-contracts:erc4626-tests/=lib/decent-bridge/lib/openzeppelin-contracts/lib/erc4626-tests/ lib/openzeppelin-contracts:forge-std/=lib/decent-bridge/lib/openzeppelin-contracts/lib/forge-std/src/ lib/openzeppelin-contracts:openzeppelin/=lib/decent-bridge/lib/openzeppelin-contracts/contracts/ /Users/tanzezhong/GPT4Bugs-main/Examples/2024-01-decent/lib/decent-bridge/src/DecentEthRouter.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --optimize --optimize-runs 200 --evm-version paris --allow-paths .,/Users/tanzezhong/GPT4Bugs-main/Examples/2024-01-decent/lib/decent-bridge/src' running
Compilation warnings/errors on /Users/tanzezhong/GPT4Bugs-main/Examples/2024-01-decent/lib/decent-bridge/src/DecentEthRouter.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> lib/decent-bridge/src/interfaces/IDcntEth.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> lib/decent-bridge/src/interfaces/IDecentBridgeExecutor.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> lib/decent-bridge/src/interfaces/IDecentEthRouter.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> lib/decent-bridge/src/interfaces/IWETH.sol


INFO:Detectors:
DecentEthRouter.removeLiquidityEth(uint256) (lib/decent-bridge/src/DecentEthRouter.sol#313-319) sends eth to arbitrary user
	Dangerous calls:
	- address(msg.sender).transfer(amount) (lib/decent-bridge/src/DecentEthRouter.sol#318)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
DecentEthRouter._bridgeWithPayload(uint8,uint16,address,uint256,uint64,bytes,bool) (lib/decent-bridge/src/DecentEthRouter.sol#148-194) ignores return value by weth.transferFrom(msg.sender,address(this),_amount) (lib/decent-bridge/src/DecentEthRouter.sol#181)
DecentEthRouter.onOFTReceived(uint16,bytes,uint64,bytes32,uint256,bytes) (lib/decent-bridge/src/DecentEthRouter.sol#237-282) ignores return value by dcntEth.transfer(_to,_amount) (lib/decent-bridge/src/DecentEthRouter.sol#267)
DecentEthRouter.onOFTReceived(uint16,bytes,uint64,bytes32,uint256,bytes) (lib/decent-bridge/src/DecentEthRouter.sol#237-282) ignores return value by weth.transfer(_to,_amount) (lib/decent-bridge/src/DecentEthRouter.sol#273)
DecentEthRouter.redeemEth(uint256) (lib/decent-bridge/src/DecentEthRouter.sol#285-291) ignores return value by dcntEth.transferFrom(msg.sender,address(this),amount) (lib/decent-bridge/src/DecentEthRouter.sol#288)
DecentEthRouter.redeemWeth(uint256) (lib/decent-bridge/src/DecentEthRouter.sol#294-299) ignores return value by dcntEth.transferFrom(msg.sender,address(this),amount) (lib/decent-bridge/src/DecentEthRouter.sol#297)
DecentEthRouter.redeemWeth(uint256) (lib/decent-bridge/src/DecentEthRouter.sol#294-299) ignores return value by weth.transfer(msg.sender,amount) (lib/decent-bridge/src/DecentEthRouter.sol#298)
DecentEthRouter.addLiquidityWeth(uint256) (lib/decent-bridge/src/DecentEthRouter.sol#322-327) ignores return value by weth.transferFrom(msg.sender,address(this),amount) (lib/decent-bridge/src/DecentEthRouter.sol#325)
DecentEthRouter.removeLiquidityWeth(uint256) (lib/decent-bridge/src/DecentEthRouter.sol#330-335) ignores return value by weth.transfer(msg.sender,amount) (lib/decent-bridge/src/DecentEthRouter.sol#334)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
DecentEthRouter.estimateSendAndCallFee(uint8,uint16,address,uint256,uint64,bool,bytes) (lib/decent-bridge/src/DecentEthRouter.sol#113-146) ignores return value by dcntEth.estimateSendAndCallFee(_dstChainId,destinationBridge,_amount,_payload,_dstGasForCall,false,adapterParams) (lib/decent-bridge/src/DecentEthRouter.sol#135-145)
DecentEthRouter.onOFTReceived(uint16,bytes,uint64,bytes32,uint256,bytes) (lib/decent-bridge/src/DecentEthRouter.sol#237-282) ignores return value by weth.approve(address(executor),_amount) (lib/decent-bridge/src/DecentEthRouter.sol#279)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
DecentEthRouter.executor (lib/decent-bridge/src/DecentEthRouter.sol#15) should be immutable 
DecentEthRouter.gasCurrencyIsEth (lib/decent-bridge/src/DecentEthRouter.sol#22) should be immutable 
DecentEthRouter.weth (lib/decent-bridge/src/DecentEthRouter.sol#13) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/Users/tanzezhong/GPT4Bugs-main/Examples/2024-01-decent/lib/decent-bridge/src/DecentEthRouter.sol analyzed (11 contracts with 58 detectors), 14 result(s) found
