{
  "reportUid": "AdwDhLaypmM",
  "labels": [
    {
      "name": "QA (Quality Assurance)",
      "color": "1D76DB"
    }
  ],
  "comment": null,
  "footnote": "## Rubric\nSee [this](https://illilli000.github.io/races/2023-07-lens/scorer.html) link for how to use this rubric:\n```json\n{\"salt\":\"068ed2\",\"hashes\":[\"f3b5277eb7\",\"b9ff477cbd\",\"a8702698f8\",\"bb16a9bd21\",\"8546384792\",\"0856d7315a\",\"aff610d2c0\",\"f3b5277eb7\",\"b9ff477cbd\",\"a8702698f8\",\"bb16a9bd21\",\"8546384792\",\"0856d7315a\",\"aff610d2c0\",\"53575da681\",\"4da5834e8f\",\"eb49768665\",\"023189c86c\",\"8e1fbabba9\",\"4de1aadea6\",\"d98c1fadb0\",\"b65331160c\",\"9d010666a8\",\"9e69351f4d\",\"333f559943\",\"2fd075a726\",\"53e2dcc204\",\"3995a25376\",\"88cbe4e21e\",\"cac3713cc7\",\"a303b99f83\",\"a2cefe3bb2\",\"eaa3890023\",\"de603f9744\",\"cf71a18689\",\"0d964bc896\",\"64b7fe509f\",\"f945665541\",\"2273624531\",\"290fdcb1b5\",\"9fbb46312c\",\"e49ff60090\",\"0529922adc\",\"ad236b030c\",\"cf0ef30ee3\",\"4c3ff98132\",\"356ae4f2f3\",\"5a6da99440\",\"580931d1a4\",\"1e65640afa\",\"6a8db7cd45\",\"2cc08e9049\",\"4e9bd9ed17\",\"34c3e15855\",\"36d1f273ed\",\"5eda2c391d\",\"1e65640afa\",\"6a8db7cd45\",\"2cc08e9049\",\"4e9bd9ed17\",\"34c3e15855\",\"36d1f273ed\",\"5eda2c391d\",\"48b95e2027\",\"5e62ba278d\",\"07c9926f8e\",\"11c519e84e\",\"acdd705b9a\",\"b5ad1ac235\",\"97fefe9b19\",\"7e722ba505\",\"ccda5ccd00\",\"4e4b841447\",\"a193e23b08\",\"655726d06f\",\"4b4e2f231c\",\"a3f4d9cb27\",\"7e722ba505\",\"ccda5ccd00\",\"4e4b841447\",\"a193e23b08\",\"655726d06f\",\"4b4e2f231c\",\"a3f4d9cb27\",\"f5eefd0887\",\"9a9c808566\",\"92b341b9cd\",\"03c0876cd1\",\"f8d01b7adb\",\"698d1e6e05\",\"f47339507b\",\"3265922c8f\",\"eb2cdd8622\",\"8369a92bbb\",\"ab42ad6dc5\",\"9af20c26a8\",\"2fed507f3a\",\"b3d2a83b40\",\"da82497fa8\",\"fc95380ec3\",\"a4524c1cab\",\"9a7ee6e24e\",\"0fa83bab2e\",\"bc94b1e918\",\"f22708fcd5\",\"0bdc60478e\",\"ad4a5741c1\",\"8551b043af\",\"b465e332e1\",\"02d583ffa9\",\"b4c654c6b9\",\"38e01e28bb\",\"da82497fa8\",\"fc95380ec3\",\"a4524c1cab\",\"9a7ee6e24e\",\"0fa83bab2e\",\"bc94b1e918\",\"f22708fcd5\",\"6d34af8a5d\",\"50e243e411\",\"68fd28496f\",\"6857f8a197\",\"dfccff4d36\",\"224e10ade2\",\"36199c75a6\",\"9a3dbaae60\",\"afa00e6189\",\"1918a9fba8\",\"259a8a3b54\",\"4fa62aedbc\",\"e6de926ae9\",\"30073c3c57\",\"772266ab01\",\"c655e58d86\",\"fb921ffaaf\",\"bd0a2bd02d\",\"40642d1fa5\",\"d13e9ed47e\",\"4d2e1f261d\",\"7bb1654b69\",\"5f432e7f97\",\"648115575c\",\"f09d06e529\",\"a196cc617e\",\"e06685e6aa\",\"ec59634f7d\",\"31eda8b98c\",\"f67b3a92d3\",\"28ac65ae04\",\"dbde3e4e9a\",\"b5b9f31d91\",\"ae09d3c992\",\"59f8122214\",\"16c086aceb\",\"d1886b015a\",\"8de2ab8fc4\",\"80713e3ad2\",\"38b00110e6\",\"b2b56a4f4f\",\"457a87d7c8\",\"3b23ff0b21\",\"2d95d98016\",\"9c580d78cb\",\"af5f03be58\",\"270cf89b15\",\"af7f59d296\",\"b6bc6f9fbb\",\"bcca54a5ca\",\"bf52ea7660\",\"806931254e\",\"75122b4fb7\",\"31ac835235\",\"f7943d8abf\",\"110a49b8d0\",\"6d34af8a5d\",\"50e243e411\",\"68fd28496f\",\"6857f8a197\",\"dfccff4d36\",\"224e10ade2\",\"36199c75a6\",\"13b3c1460f\",\"5eace1da8b\",\"29bea6a5f6\",\"af194753ec\",\"bcca151900\",\"ffd22d8173\",\"b434f64487\",\"e67f996951\",\"6273ff2b5a\",\"f1fce3472d\",\"c15a107f9c\",\"5051996cff\",\"6b1183d15b\",\"1e75b878b5\",\"f3081dba62\",\"eb371d98d8\",\"142f823d30\",\"6b3d1ac8a1\",\"4525980006\",\"111e274012\",\"bb6d7e3984\",\"b1485f39cf\",\"defca3215c\",\"eff27180df\",\"71145fff71\",\"10e122efb2\",\"13dc420f4d\",\"d64dedf6d5\",\"78e5a8d101\",\"b02eb4f120\",\"9c2f01070a\",\"27e19fb7fa\",\"998f285ecb\",\"d2701cf78f\",\"0d520cc2c1\",\"008897bbfb\",\"89f60f4868\",\"ae4313bec9\",\"e0e8314e51\",\"4bd4e4ac42\",\"e6f0adf254\",\"a77d32645d\",\"b050bef142\",\"82a7b5bd49\",\"9e44e08233\",\"59ad3f5a2e\",\"06e497cf99\",\"c70bf47ccc\",\"aaabc3bc0f\",\"e67f996951\",\"6273ff2b5a\",\"f1fce3472d\",\"c15a107f9c\",\"5051996cff\",\"6b1183d15b\",\"1e75b878b5\",\"3cec041328\",\"575bfcbc19\",\"e1a53b0f77\",\"d8f92f7f13\",\"1bb2dbad32\",\"0fc1a713b6\",\"5d7db18a0e\",\"e56c712a18\",\"9383aae396\",\"f379f056ce\",\"8023b0bf4c\",\"2db7dfaf68\",\"c81ef7109f\",\"a3acc01124\",\"3cec041328\",\"575bfcbc19\",\"e1a53b0f77\",\"d8f92f7f13\",\"1bb2dbad32\",\"0fc1a713b6\",\"5d7db18a0e\",\"2c7974c9d8\",\"ecd380fbc0\",\"586cafdd02\",\"de10195245\",\"381e8aa2b7\",\"b7bb989fa7\",\"1e7cee1dac\",\"64b1e46f03\",\"974d5e0ac2\",\"57b4c43be5\",\"886c21842c\",\"7272801b39\",\"27a8e11f0c\",\"cb68d1cfdd\",\"513ef9f88c\",\"38f6a66527\",\"51dee249e9\",\"de0434d5cc\",\"fbd1389fa1\",\"a61933be35\",\"8c57d416e8\",\"991c196d32\",\"399afbbc98\",\"5fdcb11fc2\",\"ca752cd6ec\",\"41f15022ea\",\"74414f14c0\",\"d86a864c0c\",\"55ca12ffda\",\"be4597aff5\",\"d9d30d3175\",\"a6867251d4\",\"0462a0b819\",\"c02a54d349\",\"4b7b13029d\",\"31f3334bb0\",\"b8bc4cd4f6\",\"e951a54112\",\"b0109c170d\",\"7f5b779a2e\",\"0cfb5a722b\",\"3b1791bf03\",\"a1f83ce792\",\"566d20c042\",\"a845c662f1\",\"c3cb608963\",\"d6c51a62d2\",\"aa726fd06c\",\"303e862f41\",\"1a03c78c02\",\"46dce967f2\",\"857284e463\",\"7ae51faf5a\",\"7829d7d709\",\"347c42f963\",\"721696363b\",\"1a03c78c02\",\"46dce967f2\",\"857284e463\",\"7ae51faf5a\",\"7829d7d709\",\"347c42f963\",\"721696363b\",\"c140874c92\",\"c3cf68d8ee\",\"b47c0f22ae\",\"e2e77a3817\",\"4fc2db4da1\",\"f66a9557cb\",\"03bac714a2\",\"0caa8e7b5f\",\"8301ea503f\",\"55547299de\",\"dad9f61ab3\",\"27c61ae929\",\"e4d05341ec\",\"e029ef4de4\",\"e23263a868\",\"836671116e\",\"17e0370a6b\",\"d873a5e5bb\",\"673b523e62\",\"4b2199e23f\",\"f7bc68702e\",\"503c3a0888\",\"bb2fdec158\",\"04a304cd21\",\"7b28a2960d\",\"733e35ef6b\",\"75e863c1ff\",\"052ef284b4\",\"8907a2058a\",\"f9abbe70ec\",\"949a904636\",\"95a5ef00e1\",\"a7909fbb59\",\"2ad8adad05\",\"4138d16a03\",\"d50cfcf519\",\"d363b66fc5\",\"3a9f05360c\",\"e9af1f8cdf\",\"de85342414\",\"6f0ecbf00c\",\"84120e0be7\",\"295a4b3d57\",\"9498751027\",\"7ad1b93c62\",\"05ca558ae2\",\"6ef7883a67\",\"bc98d3b801\",\"15f04dc061\",\"8bd9aab9d7\",\"7f1e485572\",\"8e125f2834\",\"9bbe2b5a4e\",\"490a42511e\",\"2c3815ea9c\",\"2780ca9c6e\",\"9e0a94fc3e\",\"a6a267843a\",\"2e02857a58\",\"7e54adb21a\",\"0e8a169703\",\"316c02c450\",\"30231715f6\",\"c5570aae1f\",\"1ce6186c38\",\"f640a70a70\",\"81e3e8783e\",\"66068fcb4c\",\"96d3e87c07\",\"47ddf986b9\",\"d93fe7f814\",\"9e1ffbe13b\",\"66186c55f5\",\"a5d83cb847\",\"391823b341\",\"76c8c55bb9\",\"ad5e0895a3\",\"e91534fac9\",\"9d6aa3e292\",\"480294c478\",\"c487a8d51b\",\"85253ae73b\",\"37e97fe9da\",\"b22370f9a3\",\"0caa8e7b5f\",\"8301ea503f\",\"55547299de\",\"dad9f61ab3\",\"27c61ae929\",\"e4d05341ec\",\"e029ef4de4\",\"4e1d6b4104\",\"000bf6da98\",\"58dc7cb239\",\"3b58e21975\",\"3c876bc3f6\",\"8418025c46\",\"21d8ece287\",\"79002c6e26\",\"b874386750\",\"7555893539\",\"9a42456a64\",\"9d81fad4e3\",\"274a7c51f2\",\"72dd4d26b9\",\"9e8d194321\",\"53fbb5a74b\",\"ca78572185\",\"089cddc9b5\",\"d7c9b2fc71\",\"1a6d9709d0\",\"f55cab253d\",\"10e97e78bf\",\"94efe52e01\",\"120988f3b4\",\"2fcdff20f7\",\"91979f9e7b\",\"e974d73ca3\",\"2c1d410df6\",\"5ce3d729b8\",\"174cf0b171\",\"e50f026712\",\"3f3cbca25c\",\"69ed87e7c0\",\"7622e36b59\",\"54ce969378\",\"683a4abf8f\",\"1cc78c5112\",\"0e98024921\",\"f94d909b63\",\"fa702f9c35\",\"a448922d01\",\"40f67f4acd\",\"ca34372629\",\"72780b68ef\",\"145e72ac6d\",\"2525298ee2\",\"7f9af39a73\",\"d240f7bd14\",\"9bca0513ba\",\"7b3ebb0276\",\"65beebe982\",\"ddef7ed643\",\"daaa5edf06\",\"5448d3329b\",\"0c7c2d27e7\",\"cf603ba156\",\"91b235ac28\",\"3d34069565\",\"3deafb7bd6\",\"5c5fb13c3a\",\"b906c4fcee\",\"07e35d71bd\",\"d6006c7de6\",\"1f06a9204b\",\"5a82b212a7\",\"4dccd6f9b1\",\"96862ce3ac\",\"b110a56456\",\"d8a2fa0ed3\",\"501edfc617\",\"78cb7ad5cb\",\"3c2b07e5b0\",\"ce5db0cd37\",\"2587323a42\",\"6156642f29\",\"c8d57a2dd5\",\"5e98a95932\",\"e4dcf5e451\",\"d6e8b454f2\",\"74182faf71\",\"d03158b22c\",\"deab910696\",\"90b23bb31f\",\"a50fcd2f3c\",\"99e1b57d57\",\"ce31a5461b\",\"289daef5b7\",\"a1af0de47c\",\"4e676f9110\",\"90fd812a35\",\"5a07aa9f53\",\"9ca5fa9b2c\",\"4f8d35c5e6\",\"92a9132f45\",\"1530d9f430\",\"4a020dc507\",\"c14945968c\",\"1ddc5cfdba\",\"3948be40fc\",\"bb303f5edf\",\"b93e09c04d\",\"fa99e44a57\",\"0e437781d2\",\"1d47c7be23\",\"f4a029642a\",\"6d18093ef3\",\"77798ccf9f\",\"54672d21cf\",\"79f161368b\",\"3e2069fbec\",\"ee16196965\",\"60238b09a1\",\"a77e672c70\",\"b4ecf4dcb2\",\"3652453b6e\",\"2418505e28\",\"532e07ac4b\",\"6d5d964410\",\"9a48e3aa9e\",\"a77e672c70\",\"b4ecf4dcb2\",\"3652453b6e\",\"2418505e28\",\"532e07ac4b\",\"6d5d964410\",\"9a48e3aa9e\",\"d9572e247b\",\"9ecf186de2\",\"5fae5de6ab\",\"ff526e0a2c\",\"8479c0260a\",\"bdd5c86b2d\",\"fea7c0dd5b\",\"7ed639bcb4\",\"630085d9d8\",\"7a7dd66a5e\",\"4de88afeb1\",\"1cb6a211a2\",\"1a7b9afb7f\",\"8589b32248\",\"e4d008603e\",\"52b815f7f4\",\"162c58f451\",\"841bea665c\",\"51330546ca\",\"3869265188\",\"ecacd9d9a2\",\"1ac7149733\",\"661c5a6d0c\",\"c67b6168dd\",\"f9aed4374f\",\"0c7d18421b\",\"05a8b29a8b\",\"1988c99e81\",\"eacd20c0db\",\"7d51bef6e8\",\"bf8e4a8e7a\",\"b6a6310b86\",\"84d202f5df\",\"9f839c18f3\",\"a79c6da356\",\"a462abc819\",\"565308ad7e\",\"22741624fd\",\"d54867ca6c\",\"887f1491da\",\"3ee7783539\",\"024f19e9c2\",\"897cc6fe13\",\"5d6e9c5d0f\",\"181d579539\",\"5317507096\",\"97c52c3321\",\"025138bc11\",\"1ae1efeb46\",\"cfae8b48ea\",\"2c837d42d6\",\"b62a028f91\",\"84efda584d\",\"11a297a7c0\",\"d15b3852a8\",\"3398c0e04a\",\"e4d008603e\",\"52b815f7f4\",\"162c58f451\",\"841bea665c\",\"51330546ca\",\"3869265188\",\"ecacd9d9a2\",\"7ed639bcb4\",\"630085d9d8\",\"7a7dd66a5e\",\"4de88afeb1\",\"1cb6a211a2\",\"1a7b9afb7f\",\"8589b32248\",\"6c02c3a087\",\"222809f9ef\",\"4d062ffb39\",\"fd35e789ab\",\"02acde08ee\",\"b3fecf9573\",\"11bff2d8ff\",\"c87fe0417b\",\"8352da46da\",\"5023a683af\",\"21cfbb3617\",\"e372c9aeba\",\"ffe9cca2de\",\"de7e096fc0\",\"ae3f19386e\",\"e85a3e7301\",\"3e6dc671ab\",\"30966fbf2a\",\"94f1d30733\",\"33b8ff41be\",\"515ee325b8\",\"eacd20c0db\",\"7d51bef6e8\",\"bf8e4a8e7a\",\"b6a6310b86\",\"84d202f5df\",\"9f839c18f3\",\"a79c6da356\",\"eacd20c0db\",\"7d51bef6e8\",\"bf8e4a8e7a\",\"b6a6310b86\",\"84d202f5df\",\"9f839c18f3\",\"a79c6da356\",\"61a9c807f4\",\"664124b898\",\"7686346603\",\"62db36be49\",\"318a3e35f3\",\"f15577fe6d\",\"2f690fc6f3\",\"435eda8159\",\"ffce83578c\",\"bf416de876\",\"8a18d961ea\",\"d73b6cb972\",\"008a9aa1e9\",\"89b7f1c8f7\",\"374ba7b6e6\",\"c1cb7059c1\",\"9fca909d6a\",\"848d73d41e\",\"4fc3ae459b\",\"8efe6624d8\",\"4fb8f8f3ed\",\"aa393f6487\",\"e06ea0e4a0\",\"936c8f08ba\",\"d62d9fc796\",\"5c29998754\",\"4643a4efbb\",\"d2ec888418\",\"3420758b53\",\"2e3320eb72\",\"5dfb628913\",\"e5ccbc4202\",\"75b66ebae3\",\"87744e306c\",\"76b8634834\",\"3420758b53\",\"2e3320eb72\",\"5dfb628913\",\"e5ccbc4202\",\"75b66ebae3\",\"87744e306c\",\"76b8634834\",\"bbe6220391\",\"e56db18b15\",\"2b5a2087f3\",\"eb220058eb\",\"054e6220c0\",\"9455bcc90b\",\"3815f04629\",\"584c212968\",\"d6b07a25dc\",\"9704dd9a63\",\"d52b730168\",\"8172e5c4d9\",\"c15e63de57\",\"41f25f3ecd\",\"ac41bfefd6\",\"f2c816dc7e\",\"6608fca728\",\"05e5297e8d\",\"5c13a80b24\",\"293b49d4a0\",\"cf5b18455d\",\"f97dcd97d0\",\"c58d679f6b\",\"21db748b02\",\"b129d5bd88\",\"412eb8df11\",\"0ffaa0501c\",\"424d878f77\",\"6d7fa62b0d\",\"5d8928d05a\",\"c9fb09ae1d\",\"c7a2c0df91\",\"37d829a1db\",\"092061c935\",\"6e945dcdc4\",\"4a1c2f27dc\",\"2a0d6c1345\",\"d0f2bc27a9\",\"0410c8f27f\",\"b4fe96a9c3\",\"a119a46660\",\"77f22a2ed4\",\"0bf03699db\",\"056af55667\",\"84c686e5b6\",\"040f962240\",\"21c6b387af\",\"eaab55eff0\",\"0449f48353\",\"bbe6220391\",\"e56db18b15\",\"2b5a2087f3\",\"eb220058eb\",\"054e6220c0\",\"9455bcc90b\",\"3815f04629\",\"bbe6220391\",\"e56db18b15\",\"2b5a2087f3\",\"eb220058eb\",\"054e6220c0\",\"9455bcc90b\",\"3815f04629\",\"0188ac658d\",\"f4914903b2\",\"afb77fc858\",\"56502456a6\",\"de6cc945d2\",\"8283bba787\",\"d5d46d72f6\",\"9578f060b1\",\"47507fc0ab\",\"81e4202498\",\"f03a4dd046\",\"6aab8f2b89\",\"1c9d5f59a9\",\"f3f05fa683\",\"6fc05a6d40\",\"618a2c0718\",\"961460ae1f\",\"455debf53d\",\"38b5b6a08b\",\"b7352ed1d5\",\"3598d1d563\",\"ecad889b44\",\"ed22d652b0\",\"37d38c7a10\",\"073b31d470\",\"5dad9ed077\",\"41b12ead1b\",\"1791612421\",\"445beac952\",\"fbd6245036\",\"deb6f09081\",\"76252ba74d\",\"7a6b8a61c6\",\"b8a6dc3e60\",\"f24f385cda\",\"445beac952\",\"fbd6245036\",\"deb6f09081\",\"76252ba74d\",\"7a6b8a61c6\",\"b8a6dc3e60\",\"f24f385cda\",\"d9016aba29\",\"d4473e9a5a\",\"52eff01ae7\",\"791159c52c\",\"ae8046b906\",\"48d3c2e566\",\"3235b9d99a\",\"d1c720bff8\",\"8dc948c75c\",\"7ac880df52\",\"9c024259ab\",\"01f4c40cf1\",\"5167da63a0\",\"c112f3d7c2\",\"535d87b700\",\"a3f82fd402\",\"62cda2c3f9\",\"f1654caadc\",\"7c8b045315\",\"1c7dd3a102\",\"8f12b1019d\",\"074fb60d41\",\"bda7ca4a52\",\"87ebfe609c\",\"a84b717d4f\",\"a94e78b781\",\"007baf281a\",\"f6c4c1f9df\",\"4e6a090b08\",\"6be7c799c3\",\"0bae768394\",\"2e0c246337\",\"da8f65297b\",\"00614106f3\",\"683ce60b8e\",\"4fa5afb837\",\"e0a71119e4\",\"42ea4dc149\",\"67bfa5376f\",\"aec3ff37ba\",\"650b10656f\",\"e52d4a8812\",\"8d274ac4ab\",\"40d1a2d7ff\",\"5f1eec79ba\",\"5e11a07e3e\",\"bafb52d5ad\",\"084d15332c\",\"95592de1a8\",\"576f2eb52d\",\"cd6a3c9564\",\"d00aee372a\",\"f7a5905dd5\",\"52cf1b64be\",\"270db14829\",\"22b03d6a7a\",\"a23b33db55\",\"5bdfc7beb3\",\"4d5d2fa689\",\"e962755385\",\"1f0346a5e6\",\"68a60e9edc\",\"56cc53a6a1\",\"fdb9f72f45\",\"e4dd4b6fd5\",\"f7eed33ac5\",\"20143da467\",\"8cb8782fbc\",\"b36f149c3a\",\"20b21159aa\",\"a085e75d19\",\"d7412ace9e\",\"9a1285a6e6\",\"6f5f7f8fbe\",\"99294e5257\",\"fb2cb7e681\",\"190176461e\",\"4fa5afb837\",\"e0a71119e4\",\"42ea4dc149\",\"67bfa5376f\",\"aec3ff37ba\",\"650b10656f\",\"e52d4a8812\",\"4fa5afb837\",\"e0a71119e4\",\"42ea4dc149\",\"67bfa5376f\",\"aec3ff37ba\",\"650b10656f\",\"e52d4a8812\",\"6da652871b\",\"3d63888a3b\",\"c39553d124\",\"c50f5aafe6\",\"6be311de1f\",\"d5fee2bbdf\",\"d38accd711\",\"689ae12fb9\",\"9cf734303f\",\"4c11299c4f\",\"158432314e\",\"36f5f55547\",\"99791d188c\",\"b194e639b3\",\"704f0f86e4\",\"8e6f425e4d\",\"d717efda61\",\"213a7ef46f\",\"33fc1a7481\",\"f1935ba997\",\"770a99133f\",\"22d6ffbe28\",\"0415e11c8d\",\"18aef8fe68\",\"ea71cdf472\",\"43cec0534d\",\"9db98cd1b7\",\"e34681d15d\",\"6d41120a40\",\"7c6d47cdff\",\"d70aec1464\",\"69ad00aa28\",\"71b4d646b5\",\"150a979d68\",\"fc50749d12\",\"92ac702ea6\",\"18c4656b3b\",\"532063cbee\",\"734e4db379\",\"9692f0807a\",\"011b4a85a1\",\"ec29967d36\",\"22ba1f6604\",\"9d6b9da15e\",\"ce37745d0c\",\"16f6a02c82\",\"483212b3dd\",\"8485b78a4b\",\"47084f88be\",\"cd28feed7c\",\"428bb7db8d\",\"69fa25eca9\",\"de856577f2\",\"fd7f81eb38\",\"de60a2b319\",\"ddc35a5175\",\"77262d9a64\",\"8b52bb9c21\",\"b24bbe7400\",\"8e87bff032\",\"aee3491f06\",\"5a11177dc1\",\"99fabce23b\",\"22ba1f6604\",\"9d6b9da15e\",\"ce37745d0c\",\"16f6a02c82\",\"483212b3dd\",\"8485b78a4b\",\"47084f88be\",\"cd28feed7c\",\"428bb7db8d\",\"69fa25eca9\",\"de856577f2\",\"fd7f81eb38\",\"de60a2b319\",\"ddc35a5175\",\"c275e4f215\",\"896d59d9dc\",\"a35735626b\",\"edf480d7d5\",\"fc69169da1\",\"f0895b1176\",\"5aaad3d310\",\"c275e4f215\",\"896d59d9dc\",\"a35735626b\",\"edf480d7d5\",\"fc69169da1\",\"f0895b1176\",\"5aaad3d310\",\"db292b3420\",\"e3bd7a4aec\",\"4c6a7d19f5\",\"473245b9cc\",\"013e9b2798\",\"818a03d015\",\"7f5fc3f8b1\",\"14b3878463\",\"1ce6e870ec\",\"7d0bacec5c\",\"52ffbd192d\",\"0a4e9c1762\",\"16106409b0\",\"cd093537f8\",\"9ed23bd395\",\"26248cae30\",\"739260ef3c\",\"f6bb5e5cb3\",\"738bde0ffe\",\"73e412fcb1\",\"58c8d1fa57\",\"83d30a720a\",\"f16bd6d892\",\"fa533c8de1\",\"6faf66fb3e\",\"c40cde5729\",\"9c3b3801a2\",\"4d9cc3ef79\",\"fd123dd281\",\"3c8d51ccdd\",\"3fef3acb38\",\"d23a12495b\",\"724594837d\",\"dd8b27b0dd\",\"05010fb8d5\",\"37ce407d04\",\"907c9d5919\",\"2716a3f44f\",\"f5a97849f6\",\"103ffaeca2\",\"2c85e97f33\",\"261d5a1636\",\"60c6f385ba\",\"bdcdc2ee3d\",\"4485c9e024\",\"7007251ba6\",\"527e7fcb32\",\"d651a65898\",\"541941bf7e\",\"17602c64c6\",\"e462280f55\",\"a2d1823032\",\"9ff6015b14\",\"dbc1a25d7d\",\"7e3eb5396d\",\"b6c5743723\",\"2d0c765554\",\"2dbcf235cd\",\"115107f981\",\"e539ee70aa\",\"393f84fc1f\",\"7afd33f52d\",\"61df9be048\",\"2d0c765554\",\"2dbcf235cd\",\"115107f981\",\"e539ee70aa\",\"393f84fc1f\",\"7afd33f52d\",\"61df9be048\",\"297f9ac176\",\"bcd3c0c826\",\"fcd09d353e\",\"e10adef4be\",\"4fcccdd7bf\",\"2859ded93a\",\"2e6412e552\",\"79eba67a5d\",\"91f435dd59\",\"69082a2052\",\"659f0ff872\",\"798f55dd6a\",\"cdaf4558af\",\"613937a626\",\"b57afd1c07\",\"17886514b5\",\"92dfa6953f\",\"5c2c40a91a\",\"93f332a01b\",\"8e09b8f083\",\"0b3567fa32\",\"01c33413cb\",\"8aa84e4731\",\"3f0f6da917\",\"0366c3b20f\",\"1b939a48dc\",\"dbf37a1caa\",\"5c4855ec58\",\"6c70c0fe72\",\"696b9b0ca7\",\"820e102149\",\"52a470ffa4\",\"04fdf9790e\",\"0d4ff27c88\",\"7fcb19f0ca\",\"6c70c0fe72\",\"696b9b0ca7\",\"820e102149\",\"52a470ffa4\",\"04fdf9790e\",\"0d4ff27c88\",\"7fcb19f0ca\",\"e616d5a880\",\"ccde487a3c\",\"052aca8ee6\",\"47f5462308\",\"1a449ad0c2\",\"d605d18106\",\"775ae020ff\",\"5001026b1b\",\"af0103d456\",\"98bdb74836\",\"12bce3c893\",\"90be488303\",\"ece9946475\",\"712b582603\",\"36613f7171\",\"ad37b07b4e\",\"ee120300f0\",\"c8e89e29e0\",\"6295e90b86\",\"1abf16f3ce\",\"99fc02005b\",\"95fb314bee\",\"f23a418b9c\",\"3e98622946\",\"830e7437e8\",\"acc1274dbc\",\"22be597a83\",\"859b94eaf9\",\"36613f7171\",\"ad37b07b4e\",\"ee120300f0\",\"c8e89e29e0\",\"6295e90b86\",\"1abf16f3ce\",\"99fc02005b\",\"5001026b1b\",\"af0103d456\",\"98bdb74836\",\"12bce3c893\",\"90be488303\",\"ece9946475\",\"712b582603\",\"b1849fecf4\",\"146b752dc7\",\"20208e9667\",\"f1ffcecb2e\",\"f3263c63f0\",\"a7e5f4e0a0\",\"f2b28aa5b1\",\"5deab2422f\",\"bfdda7442b\",\"72eb2f7e46\",\"175bc4903f\",\"b23c00cfac\",\"76ec037c6f\",\"c3f4b1e89e\",\"5001026b1b\",\"af0103d456\",\"98bdb74836\",\"12bce3c893\",\"90be488303\",\"ece9946475\",\"712b582603\",\"5001026b1b\",\"af0103d456\",\"98bdb74836\",\"12bce3c893\",\"90be488303\",\"ece9946475\",\"712b582603\",\"701eafeae6\",\"34483a8480\",\"0f88800959\",\"7218699fc6\",\"5e19f7a9ab\",\"444df9184c\",\"dc77015a44\",\"66274e8eae\",\"76ab74c61b\",\"23e1386c7f\",\"ce77c7cfbc\",\"aa465edad9\",\"3ec8ab962d\",\"d64772b0fa\",\"03ad222449\",\"5d7d965f1d\",\"860b7a8b61\",\"316d65f9f9\",\"c9607e1ac5\",\"565a2107d2\",\"15d323c238\",\"03ad222449\",\"5d7d965f1d\",\"860b7a8b61\",\"316d65f9f9\",\"c9607e1ac5\",\"565a2107d2\",\"15d323c238\",\"03ad222449\",\"5d7d965f1d\",\"860b7a8b61\",\"316d65f9f9\",\"c9607e1ac5\",\"565a2107d2\",\"15d323c238\",\"279237be9a\",\"7dea888f83\",\"2e1044e71a\",\"ca1b6d8896\",\"1f813bd22a\",\"544373f565\",\"ee3c7e21a9\",\"930b5af1c9\",\"26ffc30995\",\"7643fbe58b\",\"864c406f3c\",\"13e5108517\",\"5d6c43bc4a\",\"20fd3c5f2c\",\"a19f7269d9\",\"213835f968\",\"0a853496bb\",\"10c0d2b49e\",\"7703d76cc9\",\"272f6c2ace\",\"a8f7ecc746\",\"468707481e\",\"0ceeb0deda\",\"88bb02e3ef\",\"6b0d798dc4\",\"08b9bed071\",\"38cdeb10ae\",\"a2f0a3633a\",\"3ac23d1b27\",\"7bb164e3df\",\"ad201e2138\",\"03f88baa38\",\"80992d8d9b\",\"209ee72cc1\",\"84400e4ef4\",\"468707481e\",\"0ceeb0deda\",\"88bb02e3ef\",\"6b0d798dc4\",\"08b9bed071\",\"38cdeb10ae\",\"a2f0a3633a\",\"468707481e\",\"0ceeb0deda\",\"88bb02e3ef\",\"6b0d798dc4\",\"08b9bed071\",\"38cdeb10ae\",\"a2f0a3633a\",\"4bfa539a36\",\"8327368025\",\"0789db3559\",\"a6af8a6bb4\",\"724716bd49\",\"47e28a9c9e\",\"b71745a577\",\"c566d093cd\",\"8955b596b4\",\"d87f1f280e\",\"36f82f7b34\",\"eb543f4d51\",\"fcaf181023\",\"05a09d6ed6\",\"cd958c2bf8\",\"5678d202fa\",\"6736fa9d4d\",\"f5de483a56\",\"fe65e1be6c\",\"d1fd9dee8f\",\"23b9eafbfe\",\"b663494f10\",\"292f5c39d0\",\"0087830084\",\"bdefeed619\",\"a500e6d5a6\",\"542d86a692\",\"27cdeb8538\",\"cd958c2bf8\",\"5678d202fa\",\"6736fa9d4d\",\"f5de483a56\",\"fe65e1be6c\",\"d1fd9dee8f\",\"23b9eafbfe\",\"45750c266a\",\"46261e6f2a\",\"98b0a828fa\",\"5a5371f5f4\",\"8df84f679d\",\"9f3b9f6663\",\"130b431016\",\"19cc817ee9\",\"666a3223c6\",\"6f09a873f5\",\"2a128481cf\",\"fbd236359f\",\"19c2500111\",\"199ecbc3dc\",\"6aed259951\",\"7b4bfe8411\",\"ed9dca1cec\",\"5a0ab16502\",\"2f62eb1fbc\",\"55cd2eacf4\",\"89c4ce7f52\",\"6aed259951\",\"7b4bfe8411\",\"ed9dca1cec\",\"5a0ab16502\",\"2f62eb1fbc\",\"55cd2eacf4\",\"89c4ce7f52\",\"c06e695fd2\",\"c7e1176982\",\"b38e485e48\",\"efd8ea27d0\",\"05f40caaeb\",\"28cc8d4a2b\",\"dbc2f9ec03\",\"a7d6eb42dd\",\"28b8a21356\",\"ef1fe4da15\",\"f05695f141\",\"d44185ece9\",\"7181c5283e\",\"753c528350\",\"9ed6e7e4fb\",\"f187f19be5\",\"c89354d3a5\",\"3c298276e4\",\"39dcb8c49d\",\"7815715a58\",\"3413b41f28\",\"1455603928\",\"93b8cb6082\",\"b0aa4c3bf4\",\"1f6e7757b8\",\"e7d0672128\",\"5e455b1d12\",\"6d3a900205\",\"877ddfeb5f\",\"0ad8e7b1a2\",\"44e63a1e6a\",\"d78251b2ef\",\"2685a321bf\",\"24e67a0df2\",\"1f07d60e7c\",\"276ac550f1\",\"bb9c8dd520\",\"13de225e09\",\"086c1b0f63\",\"0c3f207168\",\"097470d221\",\"311629de84\",\"276ac550f1\",\"bb9c8dd520\",\"13de225e09\",\"086c1b0f63\",\"0c3f207168\",\"097470d221\",\"311629de84\",\"e6ef3c9bf0\",\"cc15f13cf0\",\"7c0d2c7b72\",\"f4ae0d69fa\",\"5cb893e88c\",\"eb679354e0\",\"b6aa9e5944\",\"7509a7e596\",\"ca99c6de6b\",\"f7a99cbaea\",\"92aab9f7d7\",\"cd24a337d1\",\"ce0e489083\",\"ed6dd83359\",\"2c8ee99bff\",\"c859eb0c0b\",\"12a993235d\",\"fa77a1d8fd\",\"21c1cdb224\",\"b00780e456\",\"0f3683c1e8\",\"978ee28729\",\"3cce29a7aa\",\"91bb3dacfc\",\"4270471840\",\"5825ce8f5c\",\"62d9bd2185\",\"0366bdfaaf\",\"6ad84d2ce1\",\"4ea6f8ebc4\",\"389d382ab2\",\"bfc9a318db\",\"3581cb1eae\",\"7e8503a6ef\",\"40dd29f269\",\"5d46c0b25e\",\"652aa0fd3c\",\"d9cf6702e8\",\"94bfa31f09\",\"bdafcb5843\",\"5027357ff2\",\"640b6df008\",\"5d46c0b25e\",\"652aa0fd3c\",\"d9cf6702e8\",\"94bfa31f09\",\"bdafcb5843\",\"5027357ff2\",\"640b6df008\",\"def04bd47a\",\"146954e4ff\",\"a631eae401\",\"d886384bb6\",\"d62620695d\",\"fd5f0845c7\",\"6c44a87888\",\"336f212516\",\"7dd01db551\",\"1065bd6e07\",\"ed7554df8a\",\"87943297b3\",\"9bf1368f0b\",\"343c142089\",\"774cc86e3f\",\"5d470c45e9\",\"9a1ba27403\",\"56a12cd80a\",\"1adfb0f9fb\",\"0005544990\",\"4821fd3df9\",\"04e766166d\",\"17268a3466\",\"10294fc541\",\"88ad999ef0\",\"0b9b7035ce\",\"6b534831a8\",\"364b537eec\",\"4d10b8a33a\",\"9dce011083\",\"a5bea47173\",\"52739788cb\",\"19a3e7feb1\",\"d3f01fe1dd\",\"37c965035e\",\"3abea3d186\",\"77eaa3bb1b\",\"d3fa27b172\",\"20971839ff\",\"448b42b84e\",\"f2bbdcc870\",\"d4e031b24a\",\"3abea3d186\",\"77eaa3bb1b\",\"d3fa27b172\",\"20971839ff\",\"448b42b84e\",\"f2bbdcc870\",\"d4e031b24a\",\"5f3d804c8d\",\"f499206505\",\"99413e4bf2\",\"d767fcf640\",\"d49090d157\",\"04e514b9b2\",\"76e9df0cec\",\"094c103af4\",\"0f388d1cee\",\"9045db04e8\",\"327ca45ac4\",\"e1933b472f\",\"b82764985e\",\"8c5e032fca\",\"dc4f13ad7f\",\"c2af15d58c\",\"1a93bc9be4\",\"0dd03fe2e4\",\"7be67c58ed\",\"59bd34fe7d\",\"04526e2261\",\"11b47debdc\",\"2de1879758\",\"30b4a505d1\",\"6d03dbc234\",\"4b812a078d\",\"4ebcef9b68\",\"5a7ee7adae\",\"f0a7c34b7f\",\"b57d8db8c6\",\"4d999d39aa\",\"c29bcb1420\",\"41d0e51745\",\"e5c0766048\",\"9d85b92321\",\"2aaa7931ed\",\"46d88c516c\",\"4ce296caaf\",\"166ba8656b\",\"a114335815\",\"713a592001\",\"9c2f46a012\",\"5b38de58f1\",\"8301db5109\",\"3ed1d2b1d9\",\"d11ea1a457\",\"0f5695256b\",\"30195a772c\",\"0d9d2d8faa\",\"5b38de58f1\",\"8301db5109\",\"3ed1d2b1d9\",\"d11ea1a457\",\"0f5695256b\",\"30195a772c\",\"0d9d2d8faa\",\"0a3aa498c9\",\"439cb434c0\",\"0f2b3081df\",\"89a85739a4\",\"4010f5a4a7\",\"4709cb3980\",\"215fe8a765\",\"d87d19ceca\",\"a566b30933\",\"5acf362db5\",\"33c15efe8b\",\"e92a2bb71d\",\"19adc61184\",\"b43b2e33d1\",\"8f94834a6d\",\"65af37d1d1\",\"6ea0ad46d2\",\"38bc0d8008\",\"2fb6a46594\",\"f4c2bb24ea\",\"c4258790c4\",\"8f94834a6d\",\"65af37d1d1\",\"6ea0ad46d2\",\"38bc0d8008\",\"2fb6a46594\",\"f4c2bb24ea\",\"c4258790c4\",\"6bfc489413\",\"3637ca4d20\",\"cb1fef893d\",\"caa1997f66\",\"6b07e3f9aa\",\"00f87e4e30\",\"56f45e8698\",\"3350be09ad\",\"50d2a6a8c9\",\"b4d0635c40\",\"bb85798491\",\"b2ca9d6ba7\",\"0df44a3cd6\",\"4c50ed3ab6\",\"1f17d9ef64\",\"82dfadc443\",\"ffdd17a80d\",\"262b73d24f\",\"844870482c\",\"52ab873c32\",\"b5f5691e89\",\"e9b0b369b9\",\"865429b18f\",\"0e9c6c9111\",\"cf803f125a\",\"fb4df656df\",\"63b8ac9a84\",\"4ac2ac8029\",\"ecf0eaf940\",\"3948912b6f\",\"44ca196f03\",\"39285341cd\",\"d4e1be360a\",\"99bf00850c\",\"614943a8da\",\"4ea0a12da8\",\"06804b1f47\",\"456ea582c5\",\"6a5fc02830\",\"b02fdf0a7d\",\"8a05cbff00\",\"19d469799d\",\"4ea0a12da8\",\"06804b1f47\",\"456ea582c5\",\"6a5fc02830\",\"b02fdf0a7d\",\"8a05cbff00\",\"19d469799d\",\"2f65f65d0e\",\"739d352c04\",\"2583d61f4a\",\"2ac76bbcc0\",\"0233633b66\",\"94cdb9cd7c\",\"0cba6ef655\",\"85dc0d5517\",\"c4bcdd0928\",\"cd768be998\",\"99cd2c03e9\",\"6e084fcbed\",\"8a6c2d90a3\",\"a028c9d673\",\"84fa86a66f\",\"ca3e2778ca\",\"e543331d58\",\"2f2fa661fc\",\"1edb58e8ff\",\"6df99c97d5\",\"73c1799a86\",\"aec2885923\",\"986f063b9f\",\"26ef39b4e3\",\"dd329d3545\",\"eedc1050f1\",\"8a555f1329\",\"344d0f63fc\",\"e8771f3e2a\",\"224b930c9b\",\"0064b13799\",\"fe9d8ae7b0\",\"79c22bad99\",\"d2e456f805\",\"714a237773\",\"f93ab440a4\",\"da9f5862e2\",\"af4276cfbf\",\"a078b17eda\",\"8cfaa5b78b\",\"3b0d50a8ed\",\"c4de8bda77\",\"f6a7ac618d\",\"d85066112b\",\"e632c863d0\",\"30e6c38352\",\"30b9cd2e6f\",\"9ee58a81fe\",\"08ce04a77c\",\"87a0bcbb26\",\"4552fbe75c\",\"0ad3cfe88d\",\"bceb319351\",\"0a09f78175\",\"4aaeb7ec6b\",\"55eb0e7b2d\",\"e477696c85\",\"52cf1fd270\",\"4b4f43bc3a\",\"adeae490ff\",\"fc77aa36b8\",\"c8fdb56930\",\"dc6c5ce703\",\"994bca4428\",\"d28380fa38\",\"f5392bb752\",\"2926d3d29e\",\"cafa390e95\",\"854d8244d6\",\"9ee7efebf5\",\"47a51a4b38\",\"f389088a9d\",\"3dfc526b88\",\"37842ef968\",\"3efd2ebe3d\",\"00984fefc6\",\"0921005a38\",\"84fa86a66f\",\"ca3e2778ca\",\"e543331d58\",\"2f2fa661fc\",\"1edb58e8ff\",\"6df99c97d5\",\"73c1799a86\",\"490e6ccccb\",\"0faf78f812\",\"1ded112420\",\"7b8111a7f2\",\"3c4cc06fa4\",\"0c47b561d6\",\"1b555047e0\",\"2b5f2f7a47\",\"ed0a5b48ba\",\"acdedac0da\",\"6a28a11485\",\"d05dfe106e\",\"f86779b50f\",\"adcd6e6747\",\"efeadf2e3d\",\"5f5100c290\",\"44866fa9a7\",\"9a9b5b79ce\",\"43b5c72d23\",\"ad54d0a8c5\",\"4f01bd1ff9\",\"82c489802c\",\"e8a6fa8120\",\"f285f73cbc\",\"0d4a0b6f9b\",\"c6a2553976\",\"7c2bd0cb0b\",\"bcbaaaeb7a\",\"efeadf2e3d\",\"5f5100c290\",\"44866fa9a7\",\"9a9b5b79ce\",\"43b5c72d23\",\"ad54d0a8c5\",\"4f01bd1ff9\",\"2b5f2f7a47\",\"ed0a5b48ba\",\"acdedac0da\",\"6a28a11485\",\"d05dfe106e\",\"f86779b50f\",\"adcd6e6747\",\"2d462dc601\",\"eefbddbcd9\",\"0d273b0aa2\",\"0cac4c9651\",\"c64d96d3b0\",\"8e54eef9e4\",\"cc07806d56\",\"3b3237d411\",\"8496a35958\",\"e4bba3b743\",\"0616de332d\",\"fe5f88b763\",\"0166d29ba4\",\"b05b41d2de\",\"ef919dd55f\",\"e036beceb7\",\"708345173c\",\"87a382a6e4\",\"94d0e923e1\",\"71cfc12f73\",\"106c302a0d\",\"d5914a2e67\",\"ed4f3ee65f\",\"e5fce1c09d\",\"183afcffa5\",\"5621c1de13\",\"00671dd278\",\"4fea3be453\",\"dce855458f\",\"714b0545c2\",\"f754c281b8\",\"378f0063c1\",\"213b83996d\",\"2bed8e0a0a\",\"519d91d497\",\"cbb994f8e8\",\"c46132f313\",\"65fbf19a32\",\"db21e7323e\",\"794bb9caae\",\"1f1fab81d8\",\"dcf09f6148\",\"dce855458f\",\"714b0545c2\",\"f754c281b8\",\"378f0063c1\",\"213b83996d\",\"2bed8e0a0a\",\"519d91d497\",\"121966b324\",\"54473f5d44\",\"d90862f25a\",\"2a4d8610bb\",\"3698ab49f0\",\"f81bf2c449\",\"c9e8a911b9\",\"fc55ce55b3\",\"ce9cc4c389\",\"c4a282c151\",\"4885b6bbca\",\"2c689f9d7b\",\"9da5a30270\",\"898f97bc2c\",\"a5144e2106\",\"ae8e6f806c\",\"69d0eafd36\",\"5755fb6340\",\"2929283a62\",\"2c2551094e\",\"ec4a4c3a79\",\"f719c41912\",\"5a757bba7d\",\"c9571465e4\",\"5634b99cbc\",\"232e11aa54\",\"1f16b562c2\",\"fa9dd65157\",\"12a03ad522\",\"b0821445fa\",\"26692b1f05\",\"32948e1ed6\",\"ea3fde45d8\",\"941b4c570d\",\"461478cb30\",\"c0051d9529\",\"e2b406d433\",\"37a71a124b\",\"345e48df79\",\"e429ff00d3\",\"934d6924d1\",\"f464e4e8c5\",\"8f7bf792a9\",\"3f0ef125c3\",\"3f0908f21c\",\"77b418c069\",\"2bbebd0202\",\"f1c32138dd\",\"caced219b1\",\"da7a8f982b\",\"0b493b38fc\",\"c82b0eef1e\",\"b12701ab79\",\"1e25390020\",\"112e4732df\",\"0c488546fb\",\"6e555cf519\",\"dd26620e91\",\"a2bf5692d3\",\"51e02fedfd\",\"c1d6f91d79\",\"83da5ea77e\",\"227086fb89\",\"24e325e497\",\"92b75f612c\",\"bdc8efc6de\",\"cfc9bad466\",\"529db3b4bb\",\"9198c9847b\",\"dd200415bf\",\"0b3ee6176d\",\"61252433f0\",\"f671a32a46\",\"a0c1d74ce3\",\"3d2a259c52\",\"00ac202e16\",\"d3cb8fb9d2\",\"b7a0607263\",\"5566991c6b\",\"1c89fa7402\",\"e3a2cf0abd\",\"5ea03450b3\",\"816226708e\",\"0dc8c90827\",\"b0034437f2\",\"9a3d24523b\",\"ae48301acb\",\"a40eac6cde\",\"44f35d83dd\",\"ebbdd57b1d\",\"8955d39296\",\"9ddfbd01c0\",\"26f51a0e23\",\"b87def2734\",\"d1ff142260\",\"43846f80ae\",\"104a6ad7e8\",\"dffd02ae07\",\"535307ea89\",\"be5389481e\",\"0241ebbf4f\",\"7a64a960e8\",\"a499d57951\",\"91df11c525\",\"45c37efaa5\",\"3548ed211d\",\"509c7bacf4\",\"ec184f1a68\",\"65b061e19f\",\"29d5dea50b\",\"336601077b\",\"e8cbe67ac6\",\"3548ed211d\",\"509c7bacf4\",\"ec184f1a68\",\"65b061e19f\",\"29d5dea50b\",\"336601077b\",\"e8cbe67ac6\",\"bf738fa328\",\"23febc8f2c\",\"88f728de69\",\"5fff9a9afe\",\"ba922a9a82\",\"d2dda24956\",\"11415fcaee\",\"e77d4f7141\",\"78d905ff2f\",\"131111e63b\",\"c35a1a5bdf\",\"7033215487\",\"63ac1ac574\",\"0d24a34352\",\"e77d4f7141\",\"78d905ff2f\",\"131111e63b\",\"c35a1a5bdf\",\"7033215487\",\"63ac1ac574\",\"0d24a34352\",\"20b92be22e\",\"81aae4aae2\",\"3ec4b58812\",\"cd72cfa7c4\",\"bd0979d53f\",\"9561e89a09\",\"2d531e8c4f\",\"880a666a9e\",\"d6d8ae765e\",\"b96a665fde\",\"f2772557c0\",\"3e4c2726fb\",\"c56a068a2a\",\"3405ae7810\",\"3a8fd92e0b\",\"5ea5a77d4d\",\"a532c74e8c\",\"fa1ed4c1ea\",\"533661a0a3\",\"92def63cb4\",\"b21a2bc6c4\",\"81c4224738\",\"03cc5bdaff\",\"4c54606a8d\",\"4a4467dd92\",\"c0310c1231\",\"7843d69aa7\",\"4b6f1b9dcc\",\"27e07c597c\",\"8e85264845\",\"d2dd82239e\",\"27aa3aff40\",\"229b2d4915\",\"45142eaf67\",\"4ec9d90811\",\"c0590f4327\",\"77a9722a5f\",\"ddfaed988b\",\"45d0259a03\",\"1f449d20fc\",\"6808c7a04f\",\"8c8daa5e94\",\"c0590f4327\",\"77a9722a5f\",\"ddfaed988b\",\"45d0259a03\",\"1f449d20fc\",\"6808c7a04f\",\"8c8daa5e94\",\"0acf7d03f2\",\"427fb965f1\",\"90eda8ae86\",\"df78e5655b\",\"f79420c16a\",\"721011e2aa\",\"a36dba16ad\",\"fd8d1931f7\",\"64381ac339\",\"438f08858d\",\"9daacbfb12\",\"3e1bb02b85\",\"2aa44ad89c\",\"793f6212cf\",\"0acf7d03f2\",\"427fb965f1\",\"90eda8ae86\",\"df78e5655b\",\"f79420c16a\",\"721011e2aa\",\"a36dba16ad\",\"d41b1eb4d3\",\"134e975ff2\",\"71ea80e558\",\"a96618b6bb\",\"47e8357629\",\"06d5442463\",\"670b258672\",\"d41b1eb4d3\",\"134e975ff2\",\"71ea80e558\",\"a96618b6bb\",\"47e8357629\",\"06d5442463\",\"670b258672\",\"8dc551e6d8\",\"24d4889f4f\",\"6456fcbdfa\",\"f0386732a6\",\"90d27bfa0f\",\"e59b79f160\",\"0bd6d2f2b7\",\"2d825dbe21\",\"e020a596b4\",\"0accc9f019\",\"d4c823619d\",\"9a11b7cd11\",\"02ab4ef4a2\",\"e57ab80275\",\"3378486533\",\"1f8085010b\",\"b980f4b973\",\"df70ec9ac4\",\"cea9abdd0c\",\"3a237ee91e\",\"d0e007811b\",\"711f6a1d9c\",\"b13755ea57\",\"5705b49589\",\"f67b63e0a3\",\"6e8415f370\",\"7ea87514ee\",\"d5ca88a032\",\"711f6a1d9c\",\"b13755ea57\",\"5705b49589\",\"f67b63e0a3\",\"6e8415f370\",\"7ea87514ee\",\"d5ca88a032\",\"33ba9aa072\",\"74697e5908\",\"02e25c2a17\",\"78f820cb98\",\"ecb59a9afc\",\"75ebc0bafa\",\"31f40976a3\",\"48099513e9\",\"23f4a4abbf\",\"abadbf5275\",\"b9ae1fdc3f\",\"41dc5625f5\",\"e65112ec1b\",\"9f44d66e50\",\"abf92f2253\",\"413c05469b\",\"d7f1f54059\",\"bfcb76c05d\",\"f12019a4ac\",\"fee445754f\",\"b6abffb31e\",\"abf92f2253\",\"413c05469b\",\"d7f1f54059\",\"bfcb76c05d\",\"f12019a4ac\",\"fee445754f\",\"b6abffb31e\",\"0e5d9f5ef2\",\"f5edff3211\",\"d59f353697\",\"03edce7582\",\"2db6dd5612\",\"3296ee2afa\",\"49e0a2d839\",\"2a56417e79\",\"845964b423\",\"5d7f1f6c5b\",\"ea37ed112e\",\"ace6fe8cef\",\"1aebb16f05\",\"a71143f3ed\",\"562a59b87b\",\"3b8f4c7427\",\"32efcde978\",\"5ad7a1b3f2\",\"128d16795b\",\"ea3885462b\",\"85ccb9685e\",\"be153e330d\",\"794141da61\",\"ffa5fce1f8\",\"2ea77440b0\",\"a86133aa44\",\"cd6d31f417\",\"aa82600943\",\"4bcfe5bc4c\",\"62a4977721\",\"0bbef7ce99\",\"6babcddb40\",\"9d86c16c60\",\"191e465846\",\"21ab00ac95\",\"4bcfe5bc4c\",\"62a4977721\",\"0bbef7ce99\",\"6babcddb40\",\"9d86c16c60\",\"191e465846\",\"21ab00ac95\",\"1549d764b4\",\"390b61a070\",\"00e4f164bf\",\"5da98733c0\",\"504c514617\",\"9f23828366\",\"410a931e3d\",\"1549d764b4\",\"390b61a070\",\"00e4f164bf\",\"5da98733c0\",\"504c514617\",\"9f23828366\",\"410a931e3d\",\"af37379112\",\"4b8ebc9c3c\",\"9e0a45db14\",\"d08d4d1119\",\"dca46c01d9\",\"6816f681e0\",\"ecdb7af3b1\",\"c3014495c0\",\"b8b8b0a62c\",\"93a8b3b225\",\"5cf64b491b\",\"3b15484ef3\",\"bb371bac11\",\"9a8205a48c\",\"55bc345878\",\"858ca6e530\",\"9e0aa5e794\",\"759947507e\",\"021535101f\",\"5d88200508\",\"d0dedfe0be\",\"55bc345878\",\"858ca6e530\",\"9e0aa5e794\",\"759947507e\",\"021535101f\",\"5d88200508\",\"d0dedfe0be\",\"e6f210136a\",\"58a0a703ca\",\"099ab799ea\",\"70940f3444\",\"b1284cbfaf\",\"dbd6c5612c\",\"4d23b9c8c9\",\"7eead0f41e\",\"daa2d8577f\",\"031745c997\",\"c9a4c688f2\",\"888cb44a0c\",\"673a4dda62\",\"e09f5324ad\",\"7eead0f41e\",\"daa2d8577f\",\"031745c997\",\"c9a4c688f2\",\"888cb44a0c\",\"673a4dda62\",\"e09f5324ad\",\"ba1454ef1a\",\"e664ba2641\",\"9e17677040\",\"f4511c9018\",\"eb4fb4dc73\",\"671cc750e9\",\"5e644ecc08\",\"e608a81db0\",\"9bcf5b2767\",\"b81479f750\",\"fd1df24536\",\"dd5bb01465\",\"ea1862e957\",\"88302bd336\",\"486e9b90fa\",\"160fd0bd68\",\"46c869f16d\",\"6fcd6d5114\",\"d3dda02c3c\",\"522b21fc52\",\"4958aba0f3\",\"036b156bcb\",\"ab127bd58f\",\"a8b13da7bd\",\"f454cdc606\",\"dfb8d1c3d0\",\"358e758d55\",\"004c4fb2c6\",\"854f81348a\",\"aa33545682\",\"5d6e9542b3\",\"268ec183fe\",\"59abfd6b20\",\"0e23dc51f8\",\"2379b63e78\",\"731499cccb\",\"729e35fafa\",\"3c8bcedc06\",\"ee1fdb883e\",\"6db257c5fc\",\"2bc08b34a9\",\"f0daa2ae9a\",\"731499cccb\",\"729e35fafa\",\"3c8bcedc06\",\"ee1fdb883e\",\"6db257c5fc\",\"2bc08b34a9\",\"f0daa2ae9a\",\"854f81348a\",\"aa33545682\",\"5d6e9542b3\",\"268ec183fe\",\"59abfd6b20\",\"0e23dc51f8\",\"2379b63e78\",\"8cf0bd1c60\",\"b770d57c16\",\"40e21c9176\",\"2381cfb16a\",\"7866a88cb8\",\"b8637a4af7\",\"33f45aca36\",\"c60c2d8352\",\"c1318f750e\",\"41f301c4a8\",\"1f088a44a3\",\"a9a4d0a2a3\",\"0950086733\",\"4ee322712e\",\"036b156bcb\",\"ab127bd58f\",\"a8b13da7bd\",\"f454cdc606\",\"dfb8d1c3d0\",\"358e758d55\",\"004c4fb2c6\",\"06dea953f6\",\"c60f246b3c\",\"7454642f63\",\"191ac03fa7\",\"fe879a7e4a\",\"9637eed4ea\",\"eda044ba95\",\"06dea953f6\",\"c60f246b3c\",\"7454642f63\",\"191ac03fa7\",\"fe879a7e4a\",\"9637eed4ea\",\"eda044ba95\",\"c1fb50e3bc\",\"58ae56dd4b\",\"525fb54eef\",\"b3b44dcc6e\",\"07d173978f\",\"9820a40633\",\"3d6b779b70\",\"b75e508e0c\",\"925907ad75\",\"de4188f5b6\",\"2b0a8a7e46\",\"aef2f173db\",\"98f088767f\",\"bfd7c65cc2\",\"b75e508e0c\",\"925907ad75\",\"de4188f5b6\",\"2b0a8a7e46\",\"aef2f173db\",\"98f088767f\",\"bfd7c65cc2\",\"9645a6b5bd\",\"2147f098ac\",\"8b0391c498\",\"45aaeaf30c\",\"bf18bc17f1\",\"e95b00d20c\",\"a44be02ae2\",\"e467b58f48\",\"82bb95fce2\",\"953f6bc492\",\"452cc8e3d8\",\"7f4f27a0ba\",\"95e0462e55\",\"1c556ca354\",\"ed62bce008\",\"98fd2dc4d5\",\"45ce73be1b\",\"f96043ad5b\",\"2583f39f47\",\"c46bfc63d3\",\"62b6021113\",\"ed62bce008\",\"98fd2dc4d5\",\"45ce73be1b\",\"f96043ad5b\",\"2583f39f47\",\"c46bfc63d3\",\"62b6021113\",\"d47a3c8f26\",\"1bde685d07\",\"75c8108a40\",\"dee295c02d\",\"9a0251f6ca\",\"67f58eb0af\",\"cc14724e7b\",\"e7134c51e9\",\"392c380a29\",\"6ad3f1fb9b\",\"7f05815997\",\"ce01c14ef6\",\"d6e466be4a\",\"4e2e4bae60\",\"7cd8932d43\",\"1f2a16c97e\",\"cbd278f9ce\",\"3526509307\",\"5b95662be0\",\"edb2abc3f4\",\"82cb95ae13\",\"82b54cb58f\",\"f721a899d8\",\"d2e27a2e1d\",\"0636a2649c\",\"40c3d48138\",\"191bb5900e\",\"7fb592fe62\",\"0e2bf89b8e\",\"d7d0591eb1\",\"d5de5b3994\",\"1e4a856d63\",\"d7f79b0a2d\",\"3c69eda0fa\",\"a208c8dbfb\",\"fbbe084795\",\"77475ac1fc\",\"0106e69153\",\"18f907242c\",\"182e16803a\",\"758770b0b1\",\"742044bb49\",\"0189be7fd3\",\"9c67c0d9f2\",\"659092849c\",\"a6500852b3\",\"fbdebc9b9c\",\"cda7ff046e\",\"f559070cca\",\"d47a3c8f26\",\"1bde685d07\",\"75c8108a40\",\"dee295c02d\",\"9a0251f6ca\",\"67f58eb0af\",\"cc14724e7b\",\"c0993662ef\",\"9acbb184b2\",\"9de22b9084\",\"1420ea7269\",\"ec7556b650\",\"5be89ab05b\",\"3e763e24eb\",\"0486cc76d5\",\"14a635a481\",\"b14e481aa6\",\"303416187b\",\"3259b94a24\",\"21eb75ba6c\",\"0b68b1ed98\",\"0486cc76d5\",\"14a635a481\",\"b14e481aa6\",\"303416187b\",\"3259b94a24\",\"21eb75ba6c\",\"0b68b1ed98\",\"71d67d8f4f\",\"1094180f24\",\"7bdd6e5a6c\",\"6ab72420a5\",\"87646569ca\",\"7d211633bf\",\"839632635f\",\"4e44cf3205\",\"f3cf79c4b0\",\"56bea3aaf1\",\"6cd052f847\",\"14665a4de0\",\"34e11c753f\",\"d37aa0f0be\",\"3386f37887\",\"de42746675\",\"094988646a\",\"583c516ae3\",\"ee51f95e73\",\"dc85a9e1b3\",\"1223f60013\",\"4d25663557\",\"b995b70f1f\",\"220e80c3b8\",\"58625e4988\",\"531aef2309\",\"06c59e9aef\",\"59d89efa85\",\"4d25663557\",\"b995b70f1f\",\"220e80c3b8\",\"58625e4988\",\"531aef2309\",\"06c59e9aef\",\"59d89efa85\",\"0134933936\",\"c9a1e015be\",\"c4fcedc017\",\"7e1b772b31\",\"de956315a6\",\"365ffc76ea\",\"2417c0d549\",\"a4ce5dc9fc\",\"509fa8cc0c\",\"63906b0b36\",\"4d00a998bb\",\"4e887ad9d1\",\"c6986e687b\",\"d46ab09702\",\"332d329a45\",\"b187d2b82e\",\"388e72abd5\",\"4cd52e884a\",\"0ab6e0aacb\",\"e43283ce92\",\"f78ecdfadf\",\"096cd9ea2c\",\"f1fcb41c7b\",\"577b1df804\",\"1f4960e4ea\",\"dde41c762a\",\"2c774ac3d3\",\"92fe705066\",\"e4605d1c50\",\"367e4cf747\",\"1e7bacd831\",\"9a1e7b08ab\",\"becf0eeebd\",\"f91c37b593\",\"799d15a878\",\"273e9a64bf\",\"99319f0b2a\",\"c659ac1e86\",\"c5017fdd7c\",\"d508c3079a\",\"de22041456\",\"b3fb451cb8\",\"e4605d1c50\",\"367e4cf747\",\"1e7bacd831\",\"9a1e7b08ab\",\"becf0eeebd\",\"f91c37b593\",\"799d15a878\",\"e4605d1c50\",\"367e4cf747\",\"1e7bacd831\",\"9a1e7b08ab\",\"becf0eeebd\",\"f91c37b593\",\"799d15a878\",\"be22a606d3\",\"3e8a76048f\",\"fecb3ee3ed\",\"4e6c81626f\",\"0b2db95d9e\",\"82b0a07bd5\",\"87cb51f8bd\",\"7715a5cefd\",\"31652f9e2d\",\"894158af36\",\"88a8026bfd\",\"881cbb2bfa\",\"847867878d\",\"4f0169f61d\",\"ecf86e4e8a\",\"f2b42c4728\",\"028609f949\",\"5f1222cc8f\",\"8783d03763\",\"349a1e2724\",\"a1fc65dd2d\",\"ecf86e4e8a\",\"f2b42c4728\",\"028609f949\",\"5f1222cc8f\",\"8783d03763\",\"349a1e2724\",\"a1fc65dd2d\",\"c051f3ca7b\",\"32ced76bc9\",\"2afbca7d94\",\"1d19857d58\",\"736017bc4d\",\"2bb002f358\",\"1814770c05\",\"c1f1051484\",\"1031e735fb\",\"9397c2ada1\",\"369c68907b\",\"74b3911c81\",\"1954e22f7f\",\"00a285a616\",\"76299a6230\",\"e1039340c1\",\"619b74cb40\",\"a902ff0b2d\",\"57145733f5\",\"0b0bd57d1e\",\"14288d2d9a\",\"404bddf294\",\"5fa2cba33c\",\"f51ab3c484\",\"9b6d672c09\",\"1652e0d3c0\",\"ac0b5ef824\",\"c1a0a3db5e\",\"1c95c10ba3\",\"4b8de93f8d\",\"7e095c406a\",\"519963837a\",\"4226585202\",\"22a006b840\",\"13decabce5\",\"1c95c10ba3\",\"4b8de93f8d\",\"7e095c406a\",\"519963837a\",\"4226585202\",\"22a006b840\",\"13decabce5\",\"c96e2e36b7\",\"95a7f7686e\",\"72ea8f3b12\",\"0e4e7af9cf\",\"e9a334d748\",\"87f74608de\",\"70b8c97355\",\"0348a3a847\",\"8f09c11273\",\"ad56d80ebf\",\"d19efda6e9\",\"a63fc837ae\",\"c32b5e3060\",\"5acd8ec49a\",\"0348a3a847\",\"8f09c11273\",\"ad56d80ebf\",\"d19efda6e9\",\"a63fc837ae\",\"c32b5e3060\",\"5acd8ec49a\",\"f684c0f9b3\",\"e076538373\",\"9792b1a936\",\"63542bd80c\",\"8e3ded2feb\",\"e4e0a8f3b2\",\"948c0f669a\",\"5d1dc6a57f\",\"553bab8b22\",\"84582b19f3\",\"60ba452e88\",\"6932ee1c36\",\"624acdfc32\",\"4693c8366a\",\"8afc3e4d74\",\"14b9bcacf4\",\"6357f21f15\",\"13061b111b\",\"5e9df55697\",\"8a4d844d53\",\"22eb3b515f\",\"39dbf27ef7\",\"1930b2b150\",\"395a5b8f09\",\"4ad5851347\",\"59616772a4\",\"2702c60c2e\",\"43937cb128\",\"14676c339a\",\"7b5810f6ce\",\"3474509a54\",\"7a0efa717e\",\"087964d198\",\"7ca7e38a19\",\"f0a12ed47c\",\"14676c339a\",\"7b5810f6ce\",\"3474509a54\",\"7a0efa717e\",\"087964d198\",\"7ca7e38a19\",\"f0a12ed47c\",\"2166374a31\",\"a7f440faeb\",\"98512d6044\",\"72a228c9d9\",\"3a7c7fc475\",\"f9ac60eaed\",\"8afbf254ac\",\"bd62fe9792\",\"9d3218a23a\",\"ce1e8d0611\",\"bc2efb9aa2\",\"ec725d3c64\",\"b3fffc24df\",\"7d0f8c4213\",\"75dbde7adf\",\"2706060c7f\",\"76475e90d4\",\"5687ec6c5b\",\"d068d42a95\",\"40533e7bf1\",\"d5f78f63de\",\"79a52e327b\",\"f9c0f6cd9f\",\"be2bbd5559\",\"8f75680d28\",\"55b6ffd7cc\",\"8da8ad3f93\",\"89b31f4606\",\"604f8e9ef6\",\"188f0d930f\",\"4a4868495c\",\"ad845f6014\",\"0c828d34fe\",\"603c4d969e\",\"9caf8ef98e\",\"d95ce541f9\",\"e4a977e10d\",\"793e1919d4\",\"d590b7d8c5\",\"e3adc41c6c\",\"aaa52b636e\",\"e1d62d9f1f\",\"6426810d95\",\"7c9d161997\",\"49ec57edfd\",\"e76b74a23b\",\"e1e37b34f6\",\"50c5b19d7f\",\"f157f13d80\",\"2d1c3e5ed5\",\"106a32ecf6\",\"7976dad2b1\",\"0cd44432b5\",\"fb350e1f90\",\"c782eff4d2\",\"8711da1381\",\"9da32dc529\",\"7506f13982\",\"8b7742dfbc\",\"27ccb41c81\",\"fe50ea5164\",\"c46f28fa18\",\"fb2c60d007\",\"75aa892f01\",\"1280e89d80\",\"40f8261632\",\"17cc20e779\",\"dfef2cbdb0\",\"cb5dab77c7\",\"46f91ea378\",\"75aa892f01\",\"1280e89d80\",\"40f8261632\",\"17cc20e779\",\"dfef2cbdb0\",\"cb5dab77c7\",\"46f91ea378\",\"c1f9015c6a\",\"0f88f587ec\",\"6a3c1af765\",\"3bd2d195ee\",\"0143ac7f0e\",\"0ad4c7b1c1\",\"50df52a43a\",\"e41bba6038\",\"26292b6b55\",\"fabd4e9459\",\"0860c7ee99\",\"78fe6cec1d\",\"a214d4c387\",\"f1fc5b2fa2\",\"1477ac202b\",\"9ebe0d29f6\",\"54dcd32b6a\",\"760790cea2\",\"091d13a1b0\",\"fae9407ac8\",\"dd3a1e2297\",\"5228ec544b\",\"f707cd17e7\",\"7a0e1955e0\",\"31dad6728a\",\"4e71dd8f4c\",\"e47ea48167\",\"e86b89d880\",\"5aaa578b24\",\"12459bf397\",\"31f7638f83\",\"11661b2b67\",\"4ca6aae713\",\"8fcbd28dbc\",\"7ce4254463\",\"46dd745a9c\",\"21947b4795\",\"d34b21147d\",\"1bd91eba40\",\"27e9559cd5\",\"30e98ebb98\",\"6d8105fe09\",\"46dd745a9c\",\"21947b4795\",\"d34b21147d\",\"1bd91eba40\",\"27e9559cd5\",\"30e98ebb98\",\"6d8105fe09\",\"bb7d3d66f8\",\"08b5f73166\",\"77a3f1ffde\",\"11f8f7fea4\",\"13d28e747d\",\"4e3dd4daf1\",\"4237b42bfb\",\"688e910427\",\"111d38ea8c\",\"3ed9b30140\",\"284364c02b\",\"c4a614db06\",\"4bdeca4df1\",\"acd5ee1ae0\",\"688e910427\",\"111d38ea8c\",\"3ed9b30140\",\"284364c02b\",\"c4a614db06\",\"4bdeca4df1\",\"acd5ee1ae0\",\"51d1e80538\",\"d9d9b17c36\",\"76cf9f35dd\",\"030beb717e\",\"ad4859798b\",\"94ed1bf0f9\",\"f7e2eebe65\",\"f1b462035e\",\"75136693bb\",\"dd1d7d7ba8\",\"e190df6f07\",\"f28438b742\",\"60422e8542\",\"ca7ba9338f\",\"6e60ceb080\",\"270375567a\",\"109674b704\",\"2f70c83169\",\"949a689cac\",\"ec317956c1\",\"04fd161dc1\",\"3b7369a62c\",\"58e3609f99\",\"9b08b60a52\",\"d5861fb44a\",\"1e98b04fae\",\"683ac38872\",\"5cd9b23505\",\"12bffbb7e3\",\"3985fd02e7\",\"4a48d5304c\",\"a7d1b1c845\",\"ca5407b9e8\",\"412328b630\",\"dc12d9ca14\",\"f7c6339433\",\"f9d519b6e0\",\"bc7d4a2dbe\",\"e99a04ceaa\",\"c734889156\",\"ac5583522f\",\"405d428282\",\"450cb6082e\",\"27fb4634ae\",\"f3ebae2037\",\"a517a8b964\",\"c6c00709a7\",\"17005a6351\",\"0d8b354148\",\"bd0aef91fa\",\"5f9487db91\",\"9df37240c4\",\"56cf7e5c18\",\"f8f49e9d45\",\"e0d5a3f6cc\",\"46e5a3b4cc\",\"b0bbed3e63\",\"48a39ac896\",\"0b33d73b3b\",\"224fd0b669\",\"0881584998\",\"3b803bb324\",\"14c01ef4ee\",\"e85a7fc622\",\"804b53f95a\",\"9bda84b276\",\"a0e6bcbbcd\",\"5d95f68f6a\",\"a517fa45cb\",\"96524d1648\",\"94bb159916\",\"434fd57b13\",\"54b85ff445\",\"2bf7f8b6c6\",\"a86a5df270\",\"3dba85dce2\",\"7114ee265e\",\"3d55824371\",\"270269d899\",\"0ec55b029c\",\"402a54b7eb\",\"2bc1d45000\",\"f5b39fe8d1\",\"ebb8e90d5a\",\"36efe54e23\",\"4172790590\",\"a72af02af8\",\"649ca01500\",\"2246db1e3c\",\"27f0b1331e\",\"1e9f2b774f\",\"36efe54e23\",\"4172790590\",\"a72af02af8\",\"649ca01500\",\"2246db1e3c\",\"27f0b1331e\",\"1e9f2b774f\",\"90091adf4d\",\"0e18aa10bd\",\"60e6fa04b3\",\"1327fca6e6\",\"bd0e1b4be6\",\"47e738aa06\",\"e7f2f2b96b\",\"78438fd217\",\"24dbc38213\",\"a96b5b908e\",\"9ba26947bb\",\"ba08a6ceb6\",\"e6661e6e9c\",\"a8e7e7a871\",\"c510712b5d\",\"4c66512a26\",\"8ca2a0514c\",\"d02af529cb\",\"56a487292f\",\"4b9d3bcb8d\",\"321863b7d1\",\"75ed7b8512\",\"efbdd94c45\",\"19f07e7082\",\"8b180d3098\",\"71aed7848e\",\"e07c8bc3e1\",\"078c414a4e\",\"4220cc4431\",\"59cd88444c\",\"bc62c665c9\",\"adb3f49182\",\"0c64b6e755\",\"5468cb5db4\",\"0398cfdc64\",\"bb5a9658a2\",\"b6be016ccf\",\"02c51a4648\",\"a514ef7764\",\"eb74fe80d8\",\"8490a9d9a1\",\"1e887fe622\",\"c510712b5d\",\"4c66512a26\",\"8ca2a0514c\",\"d02af529cb\",\"56a487292f\",\"4b9d3bcb8d\",\"321863b7d1\",\"90091adf4d\",\"0e18aa10bd\",\"60e6fa04b3\",\"1327fca6e6\",\"bd0e1b4be6\",\"47e738aa06\",\"e7f2f2b96b\",\"f0da944b57\",\"2616c715ee\",\"bb9987d56b\",\"83611c7f78\",\"a2f901849d\",\"b97a0fb3ea\",\"b0fa5d8818\",\"2c157dc4ab\",\"d3b8c3ae1d\",\"ed47f8f350\",\"9b744d7090\",\"b6726a7aea\",\"365032a577\",\"9641170138\",\"c50df06130\",\"f8f6ff96fd\",\"560dbbc242\",\"ca2dbf4553\",\"1a68b79834\",\"1a9be696c0\",\"e725383c27\",\"4220cc4431\",\"59cd88444c\",\"bc62c665c9\",\"adb3f49182\",\"0c64b6e755\",\"5468cb5db4\",\"0398cfdc64\",\"10d7292311\",\"8ecc141dd0\",\"2cca03a702\",\"88cb9d7a05\",\"dfdff5ff27\",\"13a2e1c941\",\"381359ebe0\",\"1b3a1b38a2\",\"374e74786e\",\"8121a55fbc\",\"4e672f6e6a\",\"c14491c7e3\",\"a0d200d6e2\",\"eac0c3d5d2\",\"0d541fde0b\",\"5ffc93a637\",\"f39183cef1\",\"efd3774fbe\",\"6a46e7b7bf\",\"494c200bb6\",\"16121c534f\",\"89aab28177\",\"bb3a1ff7e1\",\"57b0d2ac06\",\"eb91807527\",\"96049d9f0f\",\"891857b6db\",\"a4b5938adb\",\"c3a0a6ce45\",\"053f30161e\",\"ea4b1e4866\",\"f9cb097254\",\"22a9945e07\",\"cc84fa263a\",\"1d46d4fa82\",\"973b2d516c\",\"10fa890661\",\"3d0d629fbb\",\"dd46bc6da6\",\"31e9a3a339\",\"bf6ec67f5c\",\"4b671ae165\",\"28d2183b48\",\"1617ded2e6\",\"531dc0af47\",\"f128fd48a2\",\"81e18039a9\",\"dbc56c8b63\",\"3c3818f026\",\"c3a0a6ce45\",\"053f30161e\",\"ea4b1e4866\",\"f9cb097254\",\"22a9945e07\",\"cc84fa263a\",\"1d46d4fa82\",\"b249327289\",\"3db701b1a1\",\"6a00021d0f\",\"ab5651e6fb\",\"61e39f3d5e\",\"737a9fab0d\",\"fb3540918d\",\"73e4940a90\",\"2bf8f3b210\",\"8f5c5b8cdd\",\"dd879e8621\",\"c89331c4a4\",\"349cf41c50\",\"20f2916765\",\"a84775e6a8\",\"c5ae99d1f1\",\"3a041359a9\",\"ab09472cb9\",\"a0c1dd5955\",\"7ec7cd8da2\",\"8f18f5c9e8\",\"92cf1ed1a8\",\"a988db68fe\",\"710c5b711d\",\"330eba59de\",\"496e75cd58\",\"51f5eec132\",\"81f1480247\",\"00848afb48\",\"5e6f1b94a8\",\"fca2ea403e\",\"5d6f923b90\",\"68bed9a047\",\"6a85b1a6b4\",\"35f799f4a9\",\"440d2b157a\",\"e762290290\",\"2c79a5d3b5\",\"baf739bcfa\",\"c739e4bec5\",\"05e3f6f236\",\"1ad6cafb91\",\"1de8dc3cc4\",\"2be9c56180\",\"cfee8bef6b\",\"fec87c8545\",\"28c0e4f3fa\",\"333ffd8414\",\"ddffd96276\",\"1de8dc3cc4\",\"2be9c56180\",\"cfee8bef6b\",\"fec87c8545\",\"28c0e4f3fa\",\"333ffd8414\",\"ddffd96276\",\"e87c1c64ba\",\"8039054bb2\",\"2eecd7b803\",\"9dab376fbd\",\"db82b0c546\",\"ff8335f76d\",\"3c4464f828\",\"e87c1c64ba\",\"8039054bb2\",\"2eecd7b803\",\"9dab376fbd\",\"db82b0c546\",\"ff8335f76d\",\"3c4464f828\",\"0ab0af3bf8\",\"867ede8b49\",\"6866b96157\",\"ab33047cdf\",\"3fde18174c\",\"bb21994149\",\"fb9d34d173\",\"1db6691670\",\"40811deece\",\"08a88700f6\",\"e4f745c414\",\"ec720570e4\",\"8c1cb0145b\",\"9c5fc0889e\",\"9cc3753bf6\",\"58adb1f20f\",\"85dd98d553\",\"fbd5ab67e8\",\"59be2dde58\",\"808a9ab7bb\",\"d14f8335ce\",\"9cc3753bf6\",\"58adb1f20f\",\"85dd98d553\",\"fbd5ab67e8\",\"59be2dde58\",\"808a9ab7bb\",\"d14f8335ce\",\"cbfd5ed060\",\"07862594f2\",\"3ca0a39633\",\"dbb42c07d7\",\"4e224a5581\",\"522051bbf2\",\"8f82a57209\",\"e416727c5d\",\"af6c1827c8\",\"f789fe47e5\",\"7de25199e2\",\"b94ba317e8\",\"64513bf225\",\"944dd542e5\",\"cee0faad54\",\"e26b320870\",\"75a98ffefc\",\"40481fa5d5\",\"2ac775e373\",\"d4fa77ef15\",\"81c67c10e3\",\"794cb4e28b\",\"baa1db41e8\",\"471aee44bf\",\"c0f1191652\",\"00d9ea321c\",\"d3e461f458\",\"bb06b94d7f\",\"9e8cd02dc1\",\"489d6a712c\",\"30708db94c\",\"39f4c63a17\",\"f4536e6d78\",\"dbb3e5d1c8\",\"bb2077c093\",\"d244a0f250\",\"da8bd28859\",\"fef284e78f\",\"e6c271971e\",\"9c712836c1\",\"2a716bf578\",\"798ef886bc\",\"d76d0fa880\",\"a4ad44b28a\",\"db1b21d74d\",\"ecdaa2ef8b\",\"a356a70461\",\"1935bd2be0\",\"735f4d4d79\",\"16706d473a\",\"ca95efd5a8\",\"0528c5f6ed\",\"73500cbd10\",\"3e2146b6f9\",\"43ae24e123\",\"06c05119bb\",\"849a4e5c59\",\"b9bde4dde9\",\"9c21fd76ae\",\"cd906a1e6b\",\"90f57df759\",\"413016b774\",\"4ec33f20e1\",\"000f738344\",\"0bcbf9cad4\",\"1435ed0a7f\",\"f7538900a1\",\"aab48929ae\",\"b768e8d86b\",\"faeb38574b\",\"9e8cd02dc1\",\"489d6a712c\",\"30708db94c\",\"39f4c63a17\",\"f4536e6d78\",\"dbb3e5d1c8\",\"bb2077c093\",\"8c9cc24640\",\"996402762d\",\"4aaac5f89b\",\"83c02d5041\",\"1b9c331524\",\"eb3346af43\",\"f8775a5e9f\",\"7f4d9fccec\",\"05a6471386\",\"0887c65e7a\",\"1eb6111056\",\"55f39b1c9c\",\"df86b956f8\",\"a95bdfb0c7\",\"03af5d40ae\",\"96692a19ab\",\"7a8926a5b6\",\"b3febce4cf\",\"80d8c9fe53\",\"387323d99a\",\"755de569ad\",\"52802ef8ae\",\"79e3c917ae\",\"6b1517aa2c\",\"99e961052b\",\"0f2f91a5b7\",\"84496dfa19\",\"52c12948e8\",\"2563c63871\",\"50a3d22df5\",\"13835661ff\",\"eb22343ef2\",\"ba4c0c0449\",\"0598dd22b1\",\"2b2c827ff3\",\"bbac8ccbb5\",\"22351715b0\",\"dacc377e2e\",\"d2a560d70b\",\"4624d63640\",\"03e58f0e7b\",\"4d500728c1\",\"36cb8621dc\",\"84c993a611\",\"378090d4c0\",\"75e01bfd61\",\"a902b5337b\",\"69807cc8d2\",\"0740d7dc88\",\"12bbeb05a5\",\"28bc005393\",\"b4e7d68f8f\",\"7fb97d85ce\",\"84378bbf32\",\"7c96095309\",\"9cffa05e26\",\"42b94e9703\",\"0bd8b847dc\",\"804b8a8ba4\",\"39d606a328\",\"3d24ca22a8\",\"a927307109\",\"9622270e13\",\"b422a8d0c0\",\"bb3a159d1f\",\"8e6343a120\",\"493b958702\",\"92e5b28163\",\"c8f961f435\",\"725a5da4c4\",\"b422a8d0c0\",\"bb3a159d1f\",\"8e6343a120\",\"493b958702\",\"92e5b28163\",\"c8f961f435\",\"725a5da4c4\",\"debf8e8552\",\"8cccf872e2\",\"7590acb686\",\"18822f72fc\",\"2cf8723f54\",\"9a97160eb9\",\"a2cda24aca\",\"acd7ee5c5d\",\"d6ba819bc6\",\"cca3c08224\",\"a232609fba\",\"6b8aa4787f\",\"8945db947b\",\"69e14c7a51\",\"d731bcbdd4\",\"f239620130\",\"3a0516147b\",\"1f9b800c51\",\"8f0a8ce72a\",\"9cf19a8bf8\",\"76c1b24e80\",\"b1351d2da9\",\"784f2fcc95\",\"47ad738f3f\",\"e30f17cc0b\",\"a44c82ab12\",\"663186ea34\",\"add5462b7a\",\"acd7ee5c5d\",\"d6ba819bc6\",\"cca3c08224\",\"a232609fba\",\"6b8aa4787f\",\"8945db947b\",\"69e14c7a51\",\"cecffb0963\",\"c0034f6120\",\"c5ee3e08ba\",\"37b2b81c3d\",\"6b56cf6c24\",\"c66a5dfcb7\",\"9eeb82c48c\",\"8005618479\",\"802adb397d\",\"c7c25b48d5\",\"7ad12a1301\",\"fdd96410bf\",\"4210e604bf\",\"76b05d6693\",\"281df136ba\",\"da2609a35d\",\"53a2e8fb4d\",\"3f536a11fc\",\"fddaca242b\",\"d62f782494\",\"c2bce5b99b\",\"50b814b4af\",\"6442eeee10\",\"df138758ec\",\"bd2f734d27\",\"9249fa379e\",\"1221f12740\",\"042159cbc2\",\"7d617ee8be\",\"d56292aff7\",\"f78469dc08\",\"2901e5b1dd\",\"75944ba084\",\"12a5ab920b\",\"c6bce8487d\",\"4f1b5618c4\",\"280d4038f2\",\"74dca2bb56\",\"d82cb7f569\",\"c466f24c88\",\"c3d3c73baa\",\"2ab07cf298\",\"6b5ad650a6\",\"d257a93391\",\"1ab4796a1c\",\"249a2b03e0\",\"e3f1653948\",\"6e2a7a4a42\",\"1fc7594d58\",\"281df136ba\",\"da2609a35d\",\"53a2e8fb4d\",\"3f536a11fc\",\"fddaca242b\",\"d62f782494\",\"c2bce5b99b\",\"281df136ba\",\"da2609a35d\",\"53a2e8fb4d\",\"3f536a11fc\",\"fddaca242b\",\"d62f782494\",\"c2bce5b99b\",\"b8f861064b\",\"703c567b69\",\"1ad06fabb7\",\"a14ed076ef\",\"1aa76bcb1d\",\"36924880e0\",\"9944f13190\",\"ac1414fc1b\",\"b5161eec5a\",\"621dd51b57\",\"3c725e3072\",\"aa8e4ea74d\",\"b766c35bb0\",\"722be5e1a0\",\"5ed9283478\",\"e5a84178ea\",\"4fd5d4cf5b\",\"7b209f6f21\",\"9cc59d1977\",\"94797e5cc1\",\"13373be64a\",\"5ed9283478\",\"e5a84178ea\",\"4fd5d4cf5b\",\"7b209f6f21\",\"9cc59d1977\",\"94797e5cc1\",\"13373be64a\",\"8451c028a7\",\"58e52605e0\",\"e02e6f2935\",\"5b1bae3b62\",\"8f0b7da524\",\"66cad98190\",\"8ffb31ea43\",\"2ca94cd92f\",\"5fa8cd2ecd\",\"cd78b41196\",\"db61150956\",\"2ee5af5c95\",\"72fb797732\",\"4146669e49\",\"d7072eac35\",\"a7e6c99f81\",\"e57b98b32e\",\"23984129f8\",\"3bf33a80c3\",\"c1819bf72e\",\"cbd109b881\",\"21aac917c5\",\"f425e8171e\",\"9b0c2694f0\",\"5f3ec10db4\",\"fab2ef63bb\",\"52f40255f7\",\"7ab1403228\",\"d7072eac35\",\"a7e6c99f81\",\"e57b98b32e\",\"23984129f8\",\"3bf33a80c3\",\"c1819bf72e\",\"cbd109b881\",\"d7072eac35\",\"a7e6c99f81\",\"e57b98b32e\",\"23984129f8\",\"3bf33a80c3\",\"c1819bf72e\",\"cbd109b881\",\"946e590591\",\"c503a37199\",\"786d863b78\",\"9dbc295f9f\",\"ba7214de68\",\"5995f6e316\",\"6c571b4f85\",\"e4a64f8d34\",\"51c96ce768\",\"3e85c956ef\",\"71614b7916\",\"c471f2478d\",\"4f8da8aa34\",\"b85dd7d9fe\",\"2465a84812\",\"dd7d8da774\",\"e6d2ba57a1\",\"43b2115a7a\",\"afed3aea1e\",\"d3bb57a592\",\"e4d28dc900\",\"68ef93ae90\",\"a158e6d4a4\",\"dbaac392f5\",\"40c1345850\",\"893cf5f227\",\"4a005c840c\",\"02ebb7f7c4\",\"1a217f6212\",\"2db184b67d\",\"16da1e0f9d\",\"0ebd132e07\",\"8531f7bc01\",\"90fefe0a42\",\"4162a56d93\",\"136b487781\",\"8c4ca1415e\",\"527a6d4a7c\",\"40ec5b9a0f\",\"f66fc3b424\",\"7d412f2a0b\",\"0693c71712\",\"32f5d79d35\",\"ae17bb1bc8\",\"ae16076742\",\"8e0864455e\",\"7cfb15fdeb\",\"db3694e9fd\",\"1195332592\",\"1a217f6212\",\"2db184b67d\",\"16da1e0f9d\",\"0ebd132e07\",\"8531f7bc01\",\"90fefe0a42\",\"4162a56d93\",\"8c3171849e\",\"2ced4ad555\",\"493057071f\",\"38b8cec372\",\"8ddda6616d\",\"65e0d09e22\",\"59649c0c6e\",\"348049e058\",\"03789f54c8\",\"10ce0b7705\",\"44e185e273\",\"84074db511\",\"57bceb2d34\",\"bc0615e113\",\"71ed42b405\",\"a10706f546\",\"8ac1c85bc3\",\"6f50ac5c67\",\"241d78ea59\",\"66ed98bfde\",\"50a266dad9\",\"8560783f1b\",\"367edd7a69\",\"1efc03f82c\",\"fbdfcccd6c\",\"2ac55dacf0\",\"07c0197d25\",\"f164bc048a\",\"2e2cd92dc2\",\"c88bf5f676\",\"6bab56448f\",\"d8a368b3d4\",\"fa688f89db\",\"57e144d78c\",\"30d3059174\",\"4ebee2c3b3\",\"7acb4a5c33\",\"e96df1dadf\",\"992026cf2b\",\"67ff175eca\",\"a6dd92883f\",\"baa8917d9f\",\"5c6c013cfc\",\"43efda9b97\",\"e47934f8e9\",\"62834fa902\",\"75a1cbdb29\",\"0caf9a4d9d\",\"e8fbfb91f6\",\"c92fc161d3\",\"6e92480a83\",\"d184690299\",\"ead4b81644\",\"919ca3d786\",\"d08c9fc628\",\"71e284ccdb\",\"71ed42b405\",\"a10706f546\",\"8ac1c85bc3\",\"6f50ac5c67\",\"241d78ea59\",\"66ed98bfde\",\"50a266dad9\",\"348049e058\",\"03789f54c8\",\"10ce0b7705\",\"44e185e273\",\"84074db511\",\"57bceb2d34\",\"bc0615e113\",\"5952822a50\",\"359c6b1590\",\"d8534f1a91\",\"362812ad99\",\"258932f7e3\",\"a7ad50cdec\",\"28dbc8da95\",\"9adc348c62\",\"a6f0c21b3c\",\"0b5eb17101\",\"85de3e3a8c\",\"a691dc6911\",\"e2f81e3fa0\",\"3cc9994a90\",\"23a5f60603\",\"86423a9ceb\",\"9a497dab10\",\"4f4b0a7b05\",\"7187ae8f16\",\"269193a4d2\",\"ed2c8ab6a6\",\"abbd2327b1\",\"2f55840159\",\"f6b5e623de\",\"13ecd4030b\",\"d96e389134\",\"d04dc84a93\",\"80069f4b32\",\"2579760e40\",\"791f87d1e6\",\"741328ad6a\",\"dfa66e9b2a\",\"c93794f4d9\",\"cb32cec51e\",\"a00e9027a6\",\"aedd8de0ea\",\"e7080f69d2\",\"205ad645ba\",\"4b1de2753c\",\"e207f8ec8b\",\"f1008775a2\",\"57f35db75f\",\"626cd62cc4\",\"5be896c79f\",\"854ae6ab3e\",\"b5c589c119\",\"faaee9c0e4\",\"7d7acafd58\",\"730595f4a5\",\"ca705e5c0e\",\"cc06a3daac\",\"1191d1f08c\",\"89ea9938ed\",\"a267370644\",\"5e70913109\",\"3af5d22446\",\"abbd2327b1\",\"2f55840159\",\"f6b5e623de\",\"13ecd4030b\",\"d96e389134\",\"d04dc84a93\",\"80069f4b32\",\"9412f722c6\",\"32cf7adc64\",\"b5a14c944e\",\"6511a807b6\",\"eca6e3bfa4\",\"0cb564027a\",\"33b92512ae\",\"059e655ce7\",\"b1ccc1d9cf\",\"37b0c2c3a4\",\"44103f0b0e\",\"c020456e74\",\"eb497d45dc\",\"f815617fb5\",\"27b202f5c6\",\"afc8847c0b\",\"bb9ac703a1\",\"b3e326db90\",\"2dba561e6e\",\"5d48cb1004\",\"83cb100964\",\"0d5cbf1207\",\"ed3642b5fe\",\"95f761b087\",\"7f98c6ea7e\",\"bb7e4d7819\",\"aab3a00b13\",\"4c692e7e6b\",\"4c3aab1035\",\"f32eaeee63\",\"0736d887a5\",\"be50cf483d\",\"4fb0a8dd2d\",\"9419192ebb\",\"b0bfa471c6\",\"9412f722c6\",\"32cf7adc64\",\"b5a14c944e\",\"6511a807b6\",\"eca6e3bfa4\",\"0cb564027a\",\"33b92512ae\",\"bdd63031be\",\"e14a732940\",\"815c872fd6\",\"c358550f19\",\"d8aeadcd8f\",\"00a0ad676f\",\"15f0f67867\",\"911c9d820b\",\"a8d23ed263\",\"7276a796e4\",\"e7f8dc2627\",\"e4ed25368f\",\"73ca3b78c3\",\"506f1d625e\",\"746754d22b\",\"f481983ae2\",\"6ea534355f\",\"009b0cfe1c\",\"3c846f56fa\",\"5950a95dff\",\"26a81f89eb\",\"f4009915c7\",\"9aff9c0154\",\"292a674c46\",\"333db00e3c\",\"20d3409963\",\"c07a2df978\",\"9fe764ec8c\",\"c6690eaa54\",\"bfd2ba05bb\",\"fbe5181d0e\",\"e396d88e08\",\"e41b12a7b4\",\"ffee6472df\",\"d61ab4a616\",\"c6690eaa54\",\"bfd2ba05bb\",\"fbe5181d0e\",\"e396d88e08\",\"e41b12a7b4\",\"ffee6472df\",\"d61ab4a616\",\"82d6c29a97\",\"2c6af83af6\",\"890c019213\",\"2fa682ba3e\",\"462efac201\",\"6232e04881\",\"755592da7b\",\"7916e2e01e\",\"7abf8b4e7f\",\"b9cc046cbb\",\"072c9871ca\",\"f9f048af91\",\"ec4310bcdb\",\"65e6aa086a\",\"893d617085\",\"8d8c1ae3a9\",\"d4ee967fd0\",\"5464fe8e77\",\"f87027a552\",\"4a9caff716\",\"2cb197a306\",\"2e793fa6aa\",\"f116678ede\",\"5e821d2b0a\",\"75f2455d53\",\"0f86567ed4\",\"13716742bc\",\"e429a49ed0\",\"26f8c6ccf6\",\"ebfc5d5812\",\"fc27dd16d9\",\"35b8d244b5\",\"dc01fb4f51\",\"7762a1f80c\",\"858958d9cf\",\"f7c7010856\",\"f97df923ce\",\"447f96fb29\",\"0842508b8d\",\"8262b021a7\",\"f098b69a81\",\"8156580a4e\",\"8e1d77a38b\",\"df54afdd81\",\"53a642157e\",\"c4cf06d602\",\"e40c58b97f\",\"530fadb362\",\"6673b0aa33\",\"5aa8c1ac0e\",\"d68a2b9f00\",\"79257b1238\",\"d1f51ce113\",\"381ee80035\",\"21326c74a0\",\"7cc415b399\",\"5aa8c1ac0e\",\"d68a2b9f00\",\"79257b1238\",\"d1f51ce113\",\"381ee80035\",\"21326c74a0\",\"7cc415b399\",\"d088785787\",\"33b30372dd\",\"93b5faa87f\",\"222fba9a3f\",\"e658362694\",\"74ae4e5e02\",\"ba3ff11736\",\"49c0896958\",\"087fbc7eb2\",\"7807da957c\",\"694d3a60f8\",\"aec0b0ddb0\",\"69a9937efd\",\"803693a78d\",\"9ccf167b30\",\"97b3f0cf93\",\"35cd707564\",\"44dccfad10\",\"959b1a36a4\",\"e57b9d621e\",\"3aa41abf0e\",\"ad006bd379\",\"3ab24cb545\",\"34da3e7d6c\",\"aea506f5ef\",\"7806cd4c50\",\"20a2aaf269\",\"4c91f01c36\",\"5e43b4bbdd\",\"3a9f9032fd\",\"6b343dd535\",\"1ab4226ba4\",\"804807fb79\",\"5fa064da90\",\"94fd0fdecf\",\"5e43b4bbdd\",\"3a9f9032fd\",\"6b343dd535\",\"1ab4226ba4\",\"804807fb79\",\"5fa064da90\",\"94fd0fdecf\",\"f19ac1f558\",\"546cf0a092\",\"14383c2e0c\",\"ba6212cb00\",\"81695ccf0b\",\"81ade12aa2\",\"50c8e009bc\",\"4db39b0108\",\"955f2edfc7\",\"710771d17d\",\"d0c7af1e9e\",\"1af4e98d2b\",\"fbf513c073\",\"33307ae184\",\"edfcc2fac4\",\"6b3e31eeed\",\"c830129173\",\"c9f3a6ca0f\",\"d472093bec\",\"4f18af21cb\",\"67882f7905\",\"f9979258cf\",\"32952b7367\",\"04531f4569\",\"ed59f7c145\",\"eaf2fb7000\",\"fbb8bc40ae\",\"41c9dc34b5\",\"c14ec313a5\",\"c236d294a9\",\"2c64d43ab0\",\"fc24b1bd86\",\"2f3429d2b4\",\"f3c9050c77\",\"2a3f829f9b\",\"9f26522f16\",\"efb0513046\",\"58ee40c893\",\"69744dbaf5\",\"d98f08ce19\",\"2efd59f0ae\",\"e2fa3c3951\",\"edfcc2fac4\",\"6b3e31eeed\",\"c830129173\",\"c9f3a6ca0f\",\"d472093bec\",\"4f18af21cb\",\"67882f7905\",\"258e3a07f1\",\"9d031756fb\",\"e6b9c81d73\",\"a48ab7a6a2\",\"f9a78afb6f\",\"4dc95564a3\",\"9e409d8dee\",\"68aaa1086e\",\"9ccfd674a2\",\"a3551a98cf\",\"0d881c4dfa\",\"ccbd48ad61\",\"00d1a4e567\",\"db81734798\",\"81e852ac60\",\"dba8ea7fae\",\"dcdbbad438\",\"5e25422053\",\"018e51f937\",\"001b436771\",\"6ed63ed0dc\",\"df52ef2b05\",\"0818af50ee\",\"bc6ff6b922\",\"b8abd68380\",\"f4fa6d5f8d\",\"079a807411\",\"2b5b7ff40c\",\"46dbd8ad92\",\"eba99dfcd9\",\"778547ab40\",\"cb75bb4bac\",\"2ea9d373b6\",\"d2369e38f5\",\"9b7b7eaa9c\",\"8742b403d9\",\"940e25bf55\",\"3f205d29a8\",\"542a4ee132\",\"ab73898891\",\"a5ffa9a181\",\"a2b5928d84\",\"3cd840a07e\",\"0c6c2d89c0\",\"b90e00f3e0\",\"e1e4d743e4\",\"5e94f338c1\",\"51d8cc9382\",\"38c02fb350\",\"4db39b0108\",\"955f2edfc7\",\"710771d17d\",\"d0c7af1e9e\",\"1af4e98d2b\",\"fbf513c073\",\"33307ae184\",\"3ee9a3df6d\",\"ddbf9a224a\",\"4032726c2c\",\"a42ce4d07f\",\"c51556e548\",\"5d5135bf70\",\"97ca2af13b\",\"ec3d3c3bf8\",\"31be206777\",\"6196fd59e5\",\"938c139970\",\"917188dff9\",\"368bb1fafc\",\"41339a7cf7\",\"6f76a4a858\",\"a2bf2b09c9\",\"5331bcca40\",\"bbf76b9f11\",\"7fa98d490f\",\"c8e65f4c3b\",\"4c667454b8\",\"574bd66d2e\",\"58625351b1\",\"41781f572c\",\"b10ed50c9d\",\"8b7e0087f0\",\"f9f9562c5f\",\"11f4b76a0d\",\"574bd66d2e\",\"58625351b1\",\"41781f572c\",\"b10ed50c9d\",\"8b7e0087f0\",\"f9f9562c5f\",\"11f4b76a0d\",\"574bd66d2e\",\"58625351b1\",\"41781f572c\",\"b10ed50c9d\",\"8b7e0087f0\",\"f9f9562c5f\",\"11f4b76a0d\",\"c510335b19\",\"41c667d6b0\",\"4a39335319\",\"567c39c8f8\",\"de19b262dd\",\"df71e60cd2\",\"7dc980e22f\",\"fb79173211\",\"a23f3fd501\",\"1aa48ba06e\",\"d15f44d8af\",\"80acf02ee8\",\"c74110f0fb\",\"d8df882c09\",\"fb79173211\",\"a23f3fd501\",\"1aa48ba06e\",\"d15f44d8af\",\"80acf02ee8\",\"c74110f0fb\",\"d8df882c09\",\"60635fa4ae\",\"85fa4e8606\",\"7d8f371a2f\",\"b895a275f1\",\"3cae62c400\",\"18878c5f5d\",\"a1840802c2\",\"125b655e3f\",\"ea34175d33\",\"60d1f90412\",\"c8297f1fee\",\"c933e9416e\",\"2e01eac517\",\"b211b2b358\",\"a59e32db66\",\"42d6fcd254\",\"59574789e9\",\"82aba874cd\",\"3b9b38f6e5\",\"0a27994dd0\",\"e9b233a471\",\"79aaa67d5b\",\"6a090c790a\",\"6f35c013d2\",\"548a66571f\",\"208190ea72\",\"de20d67c78\",\"fbf20d3de5\",\"57836e6a3e\",\"8cd743d638\",\"2a19f01479\",\"315a366607\",\"cb8e3c082b\",\"e715457054\",\"e098d0075d\",\"581040d0d0\",\"70c0e3622a\",\"b3eaf8db65\",\"2f4a21991d\",\"c2cd31b690\",\"428fdba2d1\",\"f8f9151f9c\",\"5104e0edae\",\"59a01ad158\",\"83efe8cd59\",\"6aba1d3e97\",\"268fe265f9\",\"cadcb19846\",\"e1655f888f\",\"f395fac5e7\",\"e5683d86cf\",\"97fecc85f8\",\"ef9b85e06e\",\"d4caf4167c\",\"7d37985075\",\"c3d47fdfa6\",\"bd767ce068\",\"8fa367e090\",\"581d745592\",\"a4a00b8fe5\",\"a7aa3b1fb8\",\"be211fe32c\",\"0fb0d83963\",\"5c9482e323\",\"4501d91db4\",\"c983da0ac3\",\"3b18ed1f5b\",\"30d8cb349e\",\"d9432f9757\",\"a22710d87c\",\"a45aeb839c\",\"e8b740d98b\",\"6c74fe4198\",\"9bda646d0f\",\"24c219f6eb\",\"789088ec1f\",\"8c8d6fb8f0\",\"546c7bf472\",\"8decb33331\",\"4b9e10a45f\",\"d7fcc52aaf\",\"de48824142\",\"3864ddfb72\",\"3831efc5cc\",\"3520c000ad\",\"30fe9fb8fe\",\"1e8bf83070\",\"bdcfa6a213\",\"9cbba1621f\",\"ce65c169c7\",\"f62c535998\",\"3520c000ad\",\"30fe9fb8fe\",\"1e8bf83070\",\"bdcfa6a213\",\"9cbba1621f\",\"ce65c169c7\",\"f62c535998\",\"3ee1829ee6\",\"12d88754a6\",\"d831938253\",\"90ec7a335e\",\"8a33ce2fc8\",\"3c20c0cde0\",\"78b459ef8a\",\"1bc6c7786f\",\"bc3359127e\",\"3bfb12b2ef\",\"fd96cb5ceb\",\"6696f72f2f\",\"69a40295b3\",\"6ba7ddc861\",\"57ad389840\",\"9391960f34\",\"990bec8d78\",\"67ebfcebca\",\"9f77c3790c\",\"7117559179\",\"673e6ab899\",\"7e3cd2c488\",\"1b1076fbc6\",\"3ae6e0c447\",\"f2a24394e5\",\"f78b9425bd\",\"24717c9622\",\"b7d130b34d\",\"5bd09d946f\",\"b6c6b59ff6\",\"b3bdeb94ce\",\"11227416fd\",\"36f32fa86b\",\"d51c46a7ff\",\"9a7035b7ef\",\"2f7580c7d4\",\"1b3e0791db\",\"0db60887cd\",\"c442252aa6\",\"31597ab6d4\",\"7e306402f3\",\"17a5265262\",\"18b8770e2d\",\"64db352c1b\",\"cdd9cfd083\",\"aa81b0a778\",\"86d4ca30e7\",\"56957cb954\",\"ef93b6870e\",\"f7af47ef53\",\"d0c0be649b\",\"89c5aec7e5\",\"820625ddd9\",\"25a5091b3d\",\"c7b24c9410\",\"e6916abdb4\",\"8932ad836b\",\"44f83818be\",\"9b199adfb9\",\"b0f2b89da1\",\"4d71236b50\",\"7ae2e35d59\",\"71e6160aa0\",\"b2da252858\",\"603a4ae5fb\",\"b89513576a\",\"55847dabb0\",\"5e656bac32\",\"0bc6c65ef3\",\"33363af378\",\"2368a9e1ba\",\"38893b717e\",\"5a6a760c06\",\"cd9a189a37\",\"ed46538265\",\"951c892e65\",\"c0ff46ba0a\",\"55aebc0308\",\"a6af9fdadf\",\"16df4bcdc6\",\"b2f01ba1e8\",\"3320f0de68\",\"8142c67069\",\"0b24207cc3\",\"2f7580c7d4\",\"1b3e0791db\",\"0db60887cd\",\"c442252aa6\",\"31597ab6d4\",\"7e306402f3\",\"17a5265262\",\"c929a1166b\",\"87222f4652\",\"85689a6e93\",\"ed05e67512\",\"b50111fcf1\",\"03d7347459\",\"aa5596427a\",\"91e97093d4\",\"f14addce6f\",\"5cf293cef9\",\"01794851f6\",\"afcd8716d3\",\"caf8b7a852\",\"60f7ff62fe\",\"347b4731ea\",\"3b5da49e61\",\"48d0779aa8\",\"4f473e39e9\",\"89dfb328cd\",\"6185d19893\",\"522cbfc27e\",\"045d35796f\",\"0f39858358\",\"9c1e6096e7\",\"59422284c2\",\"2abfc48087\",\"af5a882a10\",\"22931f6620\",\"4d716370ae\",\"65c0e41f5f\",\"4c8a9294ac\",\"44dd723ea8\",\"14d0fd14d4\",\"ec76e7629f\",\"3d202e1ead\",\"4f2b294549\",\"a870118c4a\",\"afa0315bd8\",\"0f3398128d\",\"54f65223e1\",\"b15bb2df8c\",\"d4bf069471\",\"2c71eccc16\",\"813eccbd6a\",\"f8d1a58030\",\"e7c90ac5ab\",\"a0203045a4\",\"392599adf3\",\"12ab2ed85a\",\"4faf97d4da\",\"3ded203e04\",\"d30ff19f1e\",\"ef34371e5e\",\"caf1041a4e\",\"0574314ece\",\"11adc1aa1d\",\"4faf97d4da\",\"3ded203e04\",\"d30ff19f1e\",\"ef34371e5e\",\"caf1041a4e\",\"0574314ece\",\"11adc1aa1d\",\"2ff6099b7a\",\"b023526914\",\"c6c1333ecc\",\"0b9b31122b\",\"94eb1b6a8b\",\"38cf10a010\",\"5ee030adb5\",\"c04775dcc7\",\"3ad3884c1f\",\"dd38cb577d\",\"44519ca633\",\"774d3f7e8f\",\"2ced22462f\",\"0bf66b6d78\",\"563912b2cc\",\"1611aeb519\",\"d783b8f0d5\",\"71b50ed135\",\"39a595d5ce\",\"331ac1b4e5\",\"3fde01da06\",\"9103d7d74f\",\"0b25399527\",\"851f07f5a0\",\"d269f63e49\",\"260839617d\",\"94375d96a2\",\"34a96a82b0\",\"5ad058c8c1\",\"f5d4275e87\",\"d8e6ab8f48\",\"8154c01d40\",\"bb9ce91087\",\"a95d3fd961\",\"a5279ca2d3\",\"3523077bb9\",\"81f1ac4fdd\",\"cb3f84758c\",\"9169784a20\",\"3cac267e8d\",\"3d7895b02b\",\"a910e1082b\",\"ebe922f0cf\",\"1ffe2e633c\",\"6e60f3e5ba\",\"61e2060c13\",\"dc241a41d4\",\"a4cbc910af\",\"ce4904f01e\",\"31d2badb8d\",\"9588f5358d\",\"b2293a386e\",\"991e663fbb\",\"8ab26d1b3e\",\"fe085d8b81\",\"f8ae4f76db\",\"1a1e30400c\",\"13de567fa3\",\"8c392b537a\",\"94238ee1cd\",\"2e3f17b950\",\"da0f8a771b\",\"cfb5ca5bff\",\"d6ea6d8e23\",\"c78b33a9be\",\"1957e28c55\",\"fa62414487\",\"fcdef92409\",\"f73010c266\",\"304961ab59\",\"d6ea6d8e23\",\"c78b33a9be\",\"1957e28c55\",\"fa62414487\",\"fcdef92409\",\"f73010c266\",\"304961ab59\",\"878765464f\",\"a39d29a3b7\",\"433aaeb2b5\",\"47a1f50340\",\"7fce1e79e8\",\"80f2b24371\",\"7fcb2fbe56\",\"fbadd2890f\",\"6ea4c47c56\",\"275ac75cc4\",\"51ea53f070\",\"3e39b40f7a\",\"9527427f27\",\"7d978e9f43\",\"99a3bcefa9\",\"bdadf3a464\",\"a71fe92c6f\",\"9d4121f51a\",\"f19f4ad8b3\",\"f3b80be3bc\",\"5322beab6e\",\"06c70822bb\",\"e6ba8bb978\",\"6c13da8ad4\",\"6e4a4e5b60\",\"f97e9246c8\",\"71c6fc4270\",\"6046a3e7a9\",\"b69e497842\",\"7f3baba6e7\",\"8a34bf44d2\",\"850e51a160\",\"85230ef98f\",\"89363cdb8a\",\"337deb2bb7\",\"5a4a16e810\",\"e4457e96a0\",\"92668de5d7\",\"469d4f040d\",\"b78cf38374\",\"639396bda8\",\"9098b6773d\",\"a67ecd0157\",\"7419a76fb6\",\"aeb0cc6be2\",\"9a15bf9e8a\",\"b777b55d84\",\"7ec6e2fc37\",\"7d7774e0aa\",\"472be29155\",\"9af80b0fe3\",\"7fe095b600\",\"101a2d0462\",\"1651d4d98c\",\"63619dc425\",\"1351736bcf\",\"1c109a0bed\",\"4e24c28ff7\",\"0cbc32953f\",\"2b9fd20fc2\",\"74b6bc1e06\",\"f824665403\",\"27e80578d9\",\"1c109a0bed\",\"4e24c28ff7\",\"0cbc32953f\",\"2b9fd20fc2\",\"74b6bc1e06\",\"f824665403\",\"27e80578d9\",\"1aa43228a2\",\"60e35dffa3\",\"4d34e664f7\",\"644bde8fd5\",\"2be2bfed0a\",\"1e86635355\",\"5c0c3609a8\",\"9574b77a9c\",\"84ee7ab5c4\",\"1d26a6c014\",\"8bbe1dbc81\",\"6727d70447\",\"6135a75d76\",\"c042fc64ec\",\"262577e0e3\",\"f4f85fac7d\",\"e88539053c\",\"f1e6c7c41d\",\"877537eb45\",\"c97ebc5721\",\"93096608ce\",\"37e4b2af74\",\"8eeb5025cb\",\"cacbbb7edf\",\"f4c7a6d02b\",\"c481619d64\",\"bcee1ae220\",\"71718a4e85\",\"9099944027\",\"8f231149f9\",\"f445b5c51b\",\"03d27d3a5b\",\"8889bfc773\",\"91ff38c261\",\"e5192bcdda\",\"d2a9935f99\",\"e6118431ba\",\"73c3ca5524\",\"b8dd9ddf06\",\"d389432fe0\",\"598642b8bd\",\"bb3ce127ef\",\"73ccff7f90\",\"73a593065a\",\"e4133bfb8b\",\"793727185e\",\"636769de71\",\"dfd8cd0f12\",\"285b26ce9a\",\"cb38f05262\",\"6c738c8ee6\",\"3f6785f3de\",\"053c64a648\",\"54b55893d4\",\"ac2c8b11b3\",\"90aa756d65\",\"577d13bb5e\",\"1b4be8ea14\",\"53862b6dbe\",\"ffcfdd602e\",\"e8afb975ce\",\"d26cc08679\",\"74b2a2a1b5\",\"577d13bb5e\",\"1b4be8ea14\",\"53862b6dbe\",\"ffcfdd602e\",\"e8afb975ce\",\"d26cc08679\",\"74b2a2a1b5\",\"d7191ed011\",\"03ad56c2f6\",\"ac4086d8b7\",\"adbde7bfd1\",\"aebf3a1e9d\",\"a4460d9c5f\",\"3c51f0de0e\",\"7006005566\",\"149d92d5d7\",\"d5e8c4aaf1\",\"c4a99b302a\",\"3e717a540b\",\"e770f84d86\",\"20cc829e1f\",\"c12847a28d\",\"00fd506182\",\"42ced06ca3\",\"7714fd3a8a\",\"6d9801b429\",\"9affdd57f0\",\"ac67b88028\",\"c12847a28d\",\"00fd506182\",\"42ced06ca3\",\"7714fd3a8a\",\"6d9801b429\",\"9affdd57f0\",\"ac67b88028\",\"cf4a5a3756\",\"4eea9e6ac2\",\"68a8b40354\",\"25677c0f82\",\"6f459cde16\",\"807a03fb52\",\"291a56e056\",\"4fd82fc04e\",\"f4e68e9b5b\",\"19a3c907d3\",\"34e4c6ba3b\",\"7fa5bb0da0\",\"c57f7f00ab\",\"d94127297f\",\"8ce769866e\",\"942ebd9d6d\",\"3c9769f3dd\",\"8723d97a2d\",\"710ef0aff8\",\"7403d56aa5\",\"2efa7d5087\",\"88573ca1a4\",\"2da3e19984\",\"f45192e52d\",\"9625328c17\",\"83d73d94cd\",\"b69797f854\",\"4d968d580e\",\"cb9cab657b\",\"09179051be\",\"fa2bb691f0\",\"9ce30142bc\",\"8ff0fda2c0\",\"1694eceb0f\",\"3bd7d43de5\",\"fb9bc202c2\",\"5120b84a07\",\"698ba8914f\",\"77b1dd2630\",\"e95d807d01\",\"ed01acc450\",\"1820bb35b6\",\"01835bbdec\",\"d6e2a77b4c\",\"b139283e18\",\"bdda732555\",\"6446f4aeba\",\"285884c201\",\"2dc5cdde55\",\"2c584b192a\",\"43328ee0f7\",\"c6f576921a\",\"8fb08fc261\",\"8818884fbf\",\"195615c0b8\",\"2875fa5b5b\",\"017bb86146\",\"7c56b57236\",\"b4ce85d669\",\"9aae3eb6e9\",\"7de1f5325a\",\"223dba04d9\",\"e0b5106437\",\"73b67b43a7\",\"aae7ff994c\",\"4230b64da1\",\"2ded0ed283\",\"80e6c2c1d9\",\"5de649f73d\",\"29f76a219f\",\"fb9bc202c2\",\"5120b84a07\",\"698ba8914f\",\"77b1dd2630\",\"e95d807d01\",\"ed01acc450\",\"1820bb35b6\",\"fb9bc202c2\",\"5120b84a07\",\"698ba8914f\",\"77b1dd2630\",\"e95d807d01\",\"ed01acc450\",\"1820bb35b6\",\"613ef765ee\",\"5cd3672889\",\"0df50fad81\",\"b2e0953980\",\"c803fa1de4\",\"034f751fee\",\"9181dcf2f4\",\"46adef826b\",\"b1565a2e0a\",\"7c91a3da67\",\"b628bb7746\",\"0133624419\",\"c58c9a19da\",\"94e9769d83\",\"f7b6edbe83\",\"de59a41573\",\"2c59eeb7d4\",\"faf32ece01\",\"000e5899e7\",\"cf26136762\",\"e6d039864a\",\"c26e256131\",\"8ebc725ba1\",\"b8aa27f962\",\"81d690269d\",\"2a69148d5e\",\"7a4a6f6922\",\"343d6a2073\",\"5b17a99e00\",\"6534c5f2be\",\"d54f148f11\",\"311489e602\",\"6b89b8ff42\",\"348ad2d817\",\"329ae82118\",\"f087779470\",\"c38acbe487\",\"ccf577dfb4\",\"988dd949f9\",\"6fde0efe55\",\"f0b4efdd4c\",\"610fb31f6a\",\"0234f06b22\",\"d9e22501d3\",\"dacaba072e\",\"e42bcf0acc\",\"d670819336\",\"cd168554ce\",\"5335367fc9\",\"473dc11723\",\"819f8d2e21\",\"21762d9300\",\"214e304851\",\"6dbbbab5d0\",\"b52616ec00\",\"ed47d76c00\",\"473dc11723\",\"819f8d2e21\",\"21762d9300\",\"214e304851\",\"6dbbbab5d0\",\"b52616ec00\",\"ed47d76c00\",\"da3d3b94ea\",\"46e7263ca2\",\"d1cbcdf8f6\",\"6fad280ebb\",\"c240342133\",\"fc7f36cc1d\",\"3b6d46874d\",\"899e365330\",\"653f5f5197\",\"01e0e24c1f\",\"019b9e3c2a\",\"7a0627afc5\",\"3a3a0e524c\",\"c4b751eb02\",\"c410f46eff\",\"0b1269514f\",\"a3ae927a7f\",\"3502ccec17\",\"47d3ce44e2\",\"2f88280083\",\"c3d7db2900\",\"57cb288631\",\"e738a2b9c8\",\"34673bf982\",\"5827b17bd8\",\"5d7799d7f8\",\"9cee968d6d\",\"876866a10b\",\"57cb288631\",\"e738a2b9c8\",\"34673bf982\",\"5827b17bd8\",\"5d7799d7f8\",\"9cee968d6d\",\"876866a10b\",\"8022c9ccf9\",\"4b569f5c38\",\"67254eb93e\",\"f3c6fa333e\",\"5bae024819\",\"a8964111aa\",\"8e01bf020a\",\"41389bf172\",\"691bed59c2\",\"e9d756a858\",\"1875d1d3d2\",\"9c693b0a9d\",\"2c4cc6ce95\",\"2126942eb9\",\"5f846a6a11\",\"9a03f9b38f\",\"5c475177a9\",\"9299cd8c05\",\"3f3034a701\",\"95b1b8d1cd\",\"3b9e3bdec4\",\"91a6e5ba55\",\"26ae35d601\",\"8bdbe1cef9\",\"ceb7208824\",\"8fa41392c8\",\"72c192ba48\",\"5990c944f3\",\"ea649a2338\",\"2ea3cbcafa\",\"889290e66e\",\"1bd5a7211d\",\"6bccb95c49\",\"50e973ed86\",\"4a8535f729\",\"9834dd078e\",\"ddb44c472e\",\"3f7b52a8b9\",\"c711752c5f\",\"25b7afdfb4\",\"73dadde2b3\",\"969d00b474\",\"38c71788ca\",\"4f0f77761c\",\"9699559669\",\"c843cf2f84\",\"793cb615ab\",\"f56e7849bc\",\"4e42f55955\",\"37886ce575\",\"0e49404541\",\"d0345d1337\",\"fb32b19b58\",\"4868e27870\",\"d8a8cbfe87\",\"04e5e996cb\",\"37886ce575\",\"0e49404541\",\"d0345d1337\",\"fb32b19b58\",\"4868e27870\",\"d8a8cbfe87\",\"04e5e996cb\",\"4fe6cc09da\",\"701593d1f4\",\"80fca20c76\",\"9e57079707\",\"e168352d7e\",\"3c35d0dc4d\",\"aa1ea38f37\",\"7745636284\",\"96a6236c44\",\"d563f655e4\",\"984b157e81\",\"1929ce545d\",\"a212b37e01\",\"4959aff966\",\"0a7754c4c2\",\"e95d8354e7\",\"72798371fd\",\"105a21c71c\",\"36de75ac16\",\"379fa54804\",\"3b88feef42\",\"0a7754c4c2\",\"e95d8354e7\",\"72798371fd\",\"105a21c71c\",\"36de75ac16\",\"379fa54804\",\"3b88feef42\",\"97f572ddfc\",\"66aaf15290\",\"5481707551\",\"df9ecccc15\",\"b05120830f\",\"57bea339ef\",\"f7f36851c4\",\"21c91f6f67\",\"febd53c08d\",\"fa42806176\",\"d2e3c3ecfc\",\"e78d2367c6\",\"afa2925c68\",\"4c3ec06e57\",\"04bcd87246\",\"7ef4563571\",\"b1efd8aa6c\",\"c844f89dd6\",\"ffa2a2091f\",\"20284d598b\",\"933be22add\",\"89454a47bb\",\"93206787a2\",\"e19bce0fb6\",\"f0f7501012\",\"02d2cee4d2\",\"0d2e44a1f7\",\"32586252b2\",\"d3408ed8b8\",\"c17e1233cb\",\"f9a73f6014\",\"dd2f11791c\",\"0630aa906a\",\"33b88389f0\",\"6c7124c500\",\"67407c99d9\",\"04b75b6549\",\"0a4c5a1970\",\"ddb0fcb91b\",\"2561f952d4\",\"568f4910cd\",\"2a784f349e\",\"72cddc1a38\",\"e1d84fa0e9\",\"0c8a9cf4a8\",\"247c7e2d2f\",\"e05fa45275\",\"bff20f6172\",\"9eaf7464cd\",\"34ccd58865\",\"7f5a03ca26\",\"d6e358d941\",\"fbacc1dc81\",\"cce47d4a19\",\"bcce211c20\",\"4bcce19645\",\"f5dba4a4e0\",\"f30d50cf14\",\"7ce872fad1\",\"24804214ec\",\"3479d21880\",\"589d0d257a\",\"fbdb9c989e\",\"d5a59d3d5d\",\"ba2f5bbfb7\",\"bd970b96a4\",\"f6182aa612\",\"59a0e16fdf\",\"55ed114d61\",\"f3a9e23651\",\"67407c99d9\",\"04b75b6549\",\"0a4c5a1970\",\"ddb0fcb91b\",\"2561f952d4\",\"568f4910cd\",\"2a784f349e\",\"c314e6278c\",\"c961aeb808\",\"6df8897775\",\"5b2e94a0dd\",\"d8bb90c1f8\",\"1ce0253780\",\"21ad9d5d07\",\"f334d54591\",\"6a0758b9b3\",\"83c5a90cfb\",\"b3b157a4d5\",\"34edb28b85\",\"ac4353a056\",\"2e75ecb907\",\"4e4c5e0bb9\",\"b0022c214d\",\"104ebc4121\",\"8de6b67ea4\",\"f052764c31\",\"10bde1a468\",\"ce6ab59883\",\"2630e5826d\",\"3747a63fa6\",\"8a9ddf8b8e\",\"7f627781ad\",\"d9c50b69ea\",\"15bb17527f\",\"22ff0e8004\",\"f4cf571400\",\"b5b21cbc03\",\"9c38cb6695\",\"dd95a831ed\",\"8f85e3b077\",\"45fc8ec5b5\",\"874b467af3\",\"f74db3836c\",\"ae35cf6338\",\"87b2be66e1\",\"ec7c9eac1e\",\"7cfcf9e5b9\",\"9645a755bf\",\"10d73914c0\",\"43d2de4bf6\",\"753dc41d04\",\"90b07276c7\",\"c52f3a3506\",\"4b4896c4c8\",\"1e22d428d5\",\"faa40d570d\",\"688b06a3b2\",\"e56d427c3b\",\"b03596647e\",\"451797baf3\",\"6fddeb0e16\",\"6e41caa0e6\",\"65655b6e10\",\"688b06a3b2\",\"e56d427c3b\",\"b03596647e\",\"451797baf3\",\"6fddeb0e16\",\"6e41caa0e6\",\"65655b6e10\",\"640dcdef49\",\"2fd68800ed\",\"7e3582b8fb\",\"a65d5e7b6a\",\"bf260c1b1c\",\"cee821daa9\",\"fa54c80874\",\"4909d1ee94\",\"686beb1891\",\"f2869a8897\",\"f8d6347755\",\"563a13af50\",\"42b09d975b\",\"b7a02f6434\",\"bd850b4b5a\",\"210e587818\",\"c0c4277f11\",\"1c3a4021ab\",\"7fc3f5286b\",\"f1c6a6dcd1\",\"b3fcd416f4\",\"9c5f0cc803\",\"cd49be45f8\",\"eeef404e75\",\"4832bdc693\",\"2efcfd5865\",\"e240012a39\",\"ccff6902f5\",\"8520775312\",\"e867b559cd\",\"5e5f13d1fe\",\"53b6ebf0a7\",\"fa9896d842\",\"1ce7f65d32\",\"32e5f4f9bf\",\"8520775312\",\"e867b559cd\",\"5e5f13d1fe\",\"53b6ebf0a7\",\"fa9896d842\",\"1ce7f65d32\",\"32e5f4f9bf\",\"5b6fc5259f\",\"c0e106a6a0\",\"b801b2e1ea\",\"5d0be398df\",\"db09b487b2\",\"ac044161e9\",\"eadec3f767\",\"c6593dd5dc\",\"854abd410b\",\"8358fea08f\",\"0896fb7077\",\"5b6ef979c7\",\"45e2999733\",\"d18b8d7306\",\"cac05f11e4\",\"834f79efc5\",\"2857d2c064\",\"e7e3c39168\",\"b18efe8ca1\",\"c63f4245d6\",\"254e3cdb00\",\"d2c8904baf\",\"c1dcce2dd1\",\"08ce329611\",\"ae535ec52e\",\"9f6f76e074\",\"3e373fd91e\",\"76b8e668e7\",\"1e186c4c68\",\"b30a649048\",\"0f0fada1f0\",\"ebe0713b00\",\"adc8522d65\",\"3e3d4ed7b0\",\"605213c4ef\",\"3337b6cc12\",\"63ed4dc0ed\",\"4fb1abc7bc\",\"97187bfdb5\",\"01edd87db5\",\"969f26ee51\",\"10228b8198\",\"70f6e099af\",\"66373ebbb5\",\"6d060a630f\",\"b7a47ce8a0\",\"94ce6293cb\",\"84228235b2\",\"2114e25636\",\"e532100e2c\",\"4f3019ef9f\",\"4e7a17e599\",\"adf0da0465\",\"35a52f7524\",\"2bac4e99fe\",\"1f1ba2c04f\",\"11d0f31bb7\",\"6e3caf06ee\",\"db56bb1e37\",\"2ab4aa3661\",\"83b39e6c2e\",\"90e0071fd5\",\"b4e633e18b\",\"3a675ea28f\",\"cc44d8966f\",\"0cda5d48b4\",\"8e085a4000\",\"9a825f9633\",\"8692955c10\",\"65e2f1a6e4\",\"8ebc7560e5\",\"282f76d226\",\"9b8611e573\",\"a4bdbb41c7\",\"21c052f524\",\"920519ba82\",\"aa7718ec6e\",\"3c1c24df87\",\"a219f68a6e\",\"46bdd54905\",\"db4213a991\",\"d9b96d9175\",\"b44e9ad20c\",\"5337501654\",\"07047e204b\",\"bb3573b636\",\"bc4b15816b\",\"56794399da\",\"cc07fde5d0\",\"977423636e\",\"3bcd17bbc4\",\"55b4f4ecdb\",\"7c6211536d\",\"abe59e1582\",\"98676a37f4\",\"5b3a79a234\",\"227ac657a1\",\"d07ae35bef\",\"863281db1b\",\"a3db939519\",\"d209871899\",\"f3d16bcc42\",\"fa07fb02d3\",\"1dfd81a92b\",\"1a02cabfca\",\"fa60f1d655\",\"3fd0148da6\",\"8f75c60d5d\",\"9b04595372\",\"64232da98b\",\"b252a8f273\",\"ae635addad\",\"fa60f1d655\",\"3fd0148da6\",\"8f75c60d5d\",\"9b04595372\",\"64232da98b\",\"b252a8f273\",\"ae635addad\",\"5b1d199616\",\"4b9bcdaed1\",\"08ee4d53a6\",\"d4844a55a8\",\"49f1233903\",\"18ccdecb87\",\"9e207208ed\",\"1e84cead08\",\"e783412c0d\",\"ca0521c0e9\",\"3e867d4ca8\",\"f24a0a1ec3\",\"21696a2b31\",\"c75cfcf173\",\"eef594839f\",\"051f07b1a5\",\"b952f79bfb\",\"e55c24c1f2\",\"7799486ab0\",\"19ad66ccda\",\"e61e194215\",\"922ee1597f\",\"e40e89cd53\",\"5e021d4d58\",\"dccedd0547\",\"c0973d2bbb\",\"c2ef60808d\",\"ca3f213011\",\"fd6aeaacf3\",\"2ca97b012d\",\"3e51938431\",\"58b4e9af73\",\"1641942699\",\"19f80b7fe7\",\"0c44207d7c\",\"fd6aeaacf3\",\"2ca97b012d\",\"3e51938431\",\"58b4e9af73\",\"1641942699\",\"19f80b7fe7\",\"0c44207d7c\",\"0e623524b7\",\"83d638732a\",\"f9e4a97227\",\"ddb5017200\",\"a95b255f5e\",\"118612960f\",\"69cb726a00\",\"98b5bf09b8\",\"ac87369439\",\"75d98ef610\",\"fcf4f4ef94\",\"147e72d478\",\"7ece9ecbe3\",\"1f7f041aeb\",\"fd6aeaacf3\",\"2ca97b012d\",\"3e51938431\",\"58b4e9af73\",\"1641942699\",\"19f80b7fe7\",\"0c44207d7c\",\"b1d26cac14\",\"0df17f9fa6\",\"b6b37d3a81\",\"b2ad4459ee\",\"52f0487986\",\"bff1f7ef1a\",\"3035ccd442\",\"851fbbcfaf\",\"bf840bb80e\",\"30845d0f02\",\"89304de985\",\"b8e6f5fc70\",\"a49e2cf3dc\",\"e1bd9858d5\",\"376b3fe169\",\"c036981f89\",\"13d07aceac\",\"560138e97a\",\"26a1146202\",\"ec6ffe59aa\",\"a1b9e5aed7\",\"fdcb69de52\",\"949b612e05\",\"5bc7d970ed\",\"1c5aa8ea6f\",\"aacffdcdee\",\"ff75befcb6\",\"0d525fa4de\",\"99149029ac\",\"d0fe686500\",\"7a9fa7d53b\",\"6ae15ae158\",\"314f827371\",\"6a2872b14d\",\"abba675ee7\",\"91c000cd61\",\"209031905a\",\"a8c97e78cd\",\"0d3b10f107\",\"80fedc4cbd\",\"61e57fc7ce\",\"17a71d480a\",\"91c000cd61\",\"209031905a\",\"a8c97e78cd\",\"0d3b10f107\",\"80fedc4cbd\",\"61e57fc7ce\",\"17a71d480a\",\"d1d7ae2f01\",\"49f416bab9\",\"e66cebac80\",\"7caa9094ff\",\"5e27bbf1a7\",\"c7e6ec3649\",\"1263fbe0f2\",\"67a5a3a89d\",\"f222c67706\",\"ff969c6f4e\",\"a4df132546\",\"8242fd4f64\",\"be374f5dbc\",\"d1157b2182\",\"20d40b1134\",\"a1a914135e\",\"741c6b6b75\",\"2f5712e21e\",\"563d5a3f4e\",\"c31aef0cfe\",\"e7b4880d15\",\"21f457d820\",\"4643e7193f\",\"fc8a711c5b\",\"ccea4eb482\",\"16a2408eb2\",\"b69352672d\",\"b1de34ae7a\",\"58836e786c\",\"4941519b77\",\"7062ddbe74\",\"01b36825be\",\"9f1cd8b35f\",\"f0585f44bc\",\"f5f0e9282d\",\"f4ed932faa\",\"b8116d1d9b\",\"9532357e32\",\"d06303c94d\",\"0be9a4ab0e\",\"4e04761213\",\"0284e56ff1\",\"536467ae77\",\"71db6456c3\",\"eb5b7373a5\",\"02ab5da3f7\",\"2957a72c59\",\"bcc744f30d\",\"e891d3f21d\",\"3ce3744f53\",\"f1d7c3deea\",\"76c4d458a2\",\"3056a9089a\",\"e3e126f781\",\"ca1b675b17\",\"1111fbf531\",\"e85b891594\",\"d54df66cce\",\"64d856f184\",\"11b383c54f\",\"c6d989e80c\",\"a6b9bbf1ce\",\"5afedb007a\",\"e85b891594\",\"d54df66cce\",\"64d856f184\",\"11b383c54f\",\"c6d989e80c\",\"a6b9bbf1ce\",\"5afedb007a\",\"8741a3cf12\",\"fa59011b9b\",\"8289d27657\",\"7475018501\",\"993cefd12e\",\"bc7edf8cd0\",\"90b2b60f4a\",\"61cb6409e7\",\"6fbc1a4468\",\"1f2da32803\",\"3c58cfdb6e\",\"cf2d48585c\",\"24ba47d5dd\",\"a28b953fb0\",\"c8b0303724\",\"3cc6adfa28\",\"7f56084e89\",\"2edeb0d647\",\"c3bd17e0e7\",\"9c9d2ae440\",\"32124df881\",\"d1b2fceb10\",\"2ce7aa603d\",\"25552264ee\",\"e6fd5acbc7\",\"f38582afd7\",\"b6ed85f216\",\"330c55a002\",\"394730883b\",\"ee496e90ab\",\"c4ccf60347\",\"ccab5e5df7\",\"5bba9b5b01\",\"48ad015542\",\"2022b46a06\",\"5baabf796d\",\"b33fe74b8c\",\"a4aef53b7f\",\"cb5b6d3ab6\",\"7e6bf9e426\",\"53bf4213df\",\"b90e294764\",\"0b81eb0405\",\"fd00cc29d7\",\"ab2db9e002\",\"27fd2aa102\",\"3ff7e691aa\",\"4dd28c035b\",\"908a97c95e\",\"deb877f740\",\"768a6d22e0\",\"83f1f8dd5e\",\"368ec58eac\",\"b1f9083e37\",\"110f9932d4\",\"a1a273e139\",\"3dd9a0ffff\",\"18d55d48a9\",\"b3b20d8734\",\"16d433473d\",\"7239dbcc36\",\"e45d2d33e8\",\"4dbcd19160\",\"3dd9a0ffff\",\"18d55d48a9\",\"b3b20d8734\",\"16d433473d\",\"7239dbcc36\",\"e45d2d33e8\",\"4dbcd19160\",\"ff81bc6598\",\"fdb6ff9178\",\"84e35188d8\",\"bdc1d5c627\",\"54f99e6bfb\",\"0409ab93ab\",\"44efcb7358\",\"2f52e3a19f\",\"4f7d78de31\",\"ee0d354d44\",\"7285c9b85d\",\"09390a39c5\",\"d7d62b0294\",\"716f28ce54\",\"fd9af98b81\",\"48dd85871f\",\"547d7b26c8\",\"66897f6df6\",\"654b10adbb\",\"1cd84926af\",\"a4ece1799c\",\"124fea253b\",\"588efdf2e0\",\"1a4287ce2d\",\"324fdee8d6\",\"e6c3daa5aa\",\"4c491f755b\",\"45a8499838\",\"1ed5a114ee\",\"e1a95d3c6c\",\"132a08f1ce\",\"c49066e9c8\",\"b1ac273734\",\"e60941e068\",\"4b7c13d344\",\"04675a3134\",\"c90a83ff4e\",\"e110cc4af0\",\"8265bdaff8\",\"b8411e6dee\",\"1ccfab2e7c\",\"c303d79d08\",\"6adc1cc1da\",\"e3f84e0f8a\",\"bfb331f9a4\",\"644b01ded8\",\"aa47fcade5\",\"ef01f0d754\",\"76ed8f6d0a\",\"86a1fc5fa9\",\"ce5744cd9c\",\"d674228a5c\",\"8bcd39617c\",\"cb5cc318d9\",\"250bb9dd90\",\"0ed6f5374c\",\"2fe0980367\",\"475809675a\",\"e04305bae0\",\"9a5b2a618c\",\"54d671e7d5\",\"68f48eb58a\",\"4f09fa759c\",\"2fe0980367\",\"475809675a\",\"e04305bae0\",\"9a5b2a618c\",\"54d671e7d5\",\"68f48eb58a\",\"4f09fa759c\",\"45218619c1\",\"2d0b2965dd\",\"01b2626db4\",\"9286165b17\",\"fcc4928ec3\",\"f4d5211bac\",\"8d88d126ae\",\"a259da3099\",\"5e4441b23a\",\"abc44e7a29\",\"dac9000744\",\"75fee08361\",\"6538188f7e\",\"909d465304\",\"c71eb1b9b4\",\"a4726a0a63\",\"5bae390504\",\"0185fc98a1\",\"7bc37b3bba\",\"fcbd24366f\",\"22d3b230f0\",\"6ad2204520\",\"d88b21c7ad\",\"7acbe1b962\",\"e2a230d473\",\"38aa334f2e\",\"25604ddd47\",\"9731366a4b\",\"0810fe5ed0\",\"9c404f3b6c\",\"f5a29ab3e8\",\"442bc27f63\",\"85bae14dc3\",\"c08c9e43a6\",\"3e91018938\",\"4dc69bd1cb\",\"d8fbc9c5ba\",\"9f06784b74\",\"21ef1514f9\",\"2de5d47035\",\"5315eddcfd\",\"696b08b843\",\"f342fffb68\",\"8b457f7fb3\",\"d28581d14e\",\"a4bcffeb53\",\"833a9f9547\",\"5a33decafa\",\"282fc0c565\",\"4dc69bd1cb\",\"d8fbc9c5ba\",\"9f06784b74\",\"21ef1514f9\",\"2de5d47035\",\"5315eddcfd\",\"696b08b843\",\"f0a6ea0b65\",\"dba7ffc28a\",\"0400a0653d\",\"48f9142989\",\"1d02359af6\",\"260ef9a628\",\"cbd960f791\",\"f0a6ea0b65\",\"dba7ffc28a\",\"0400a0653d\",\"48f9142989\",\"1d02359af6\",\"260ef9a628\",\"cbd960f791\",\"0b0833ce94\",\"aaa5090e40\",\"1269c2d614\",\"22388bae32\",\"c8dbd4c82c\",\"c38bc25619\",\"e52cb695be\",\"6621cd685c\",\"355110d495\",\"b6a8cbd3df\",\"893b8b4049\",\"0542dc5916\",\"f649f96e47\",\"b5923869c4\",\"11c074044e\",\"d7c4eebb28\",\"25154782de\",\"73c553a23c\",\"5226bb9241\",\"b090d8db57\",\"9b217ce758\",\"9da028649b\",\"aad8571f82\",\"a387fd9e7d\",\"019d8557ea\",\"405a55851a\",\"1f4ad992dc\",\"f660ea1712\",\"c73932e92d\",\"ff9fc96499\",\"2c57192540\",\"035b28fd79\",\"2859266a65\",\"a337690f73\",\"126287efbf\",\"c73932e92d\",\"ff9fc96499\",\"2c57192540\",\"035b28fd79\",\"2859266a65\",\"a337690f73\",\"126287efbf\",\"e4c3cee158\",\"928b8b33c5\",\"ee71c1d2e9\",\"b8c1c15c9a\",\"f518b2362c\",\"d5e1941f82\",\"30fe006e32\",\"fa227dfaf5\",\"f73c3171f5\",\"5d49cddce6\",\"23afc0a85c\",\"c7e5d8a691\",\"e560f35a92\",\"aafd3b204e\",\"d06d0f8126\",\"3cfa80805a\",\"228d3e5c06\",\"b49070cf45\",\"830d5b1452\",\"b5339120ae\",\"6d7c882eb7\",\"dfefe9f25e\",\"c586c24bcd\",\"e82957603f\",\"e6074a1f56\",\"5bf69fad71\",\"a8c479c2ab\",\"4ea490722e\",\"7ecc19cdd8\",\"891b28d95b\",\"d44ef710a4\",\"2d4e49cc8d\",\"e5e841fccb\",\"d6218d717e\",\"0a4a4da8bb\",\"1996750c48\",\"7b5b084b8d\",\"e64dc36e94\",\"c90b024cd4\",\"151005c08a\",\"b2f82aaef0\",\"306682ab69\",\"8d71257b91\",\"d5838c818d\",\"00ff4c811e\",\"5a6d22c818\",\"65acf86aa1\",\"2ac3d828c1\",\"c9832d1a90\",\"d1943dafd8\",\"7be33961b2\",\"f709d3c300\",\"de714d90b9\",\"8c5c03eda7\",\"671e6a0ef7\",\"887190d293\",\"2b46e1c064\",\"36614b1f69\",\"b20045fa99\",\"b8705df432\",\"3ae362ebb1\",\"80410a1a7a\",\"c8451f9f7a\",\"8d71257b91\",\"d5838c818d\",\"00ff4c811e\",\"5a6d22c818\",\"65acf86aa1\",\"2ac3d828c1\",\"c9832d1a90\",\"c29b4a5c07\",\"0b0f48817d\",\"d959f7daa7\",\"a2ecf202f4\",\"90451278e1\",\"058b07e820\",\"711a5b5c41\",\"66c1fe28f5\",\"d1249e9ea2\",\"1566b5c441\",\"720eab8833\",\"76aed06616\",\"76ae7c7e8b\",\"bebf15e704\",\"1f270a9c9c\",\"a14bb193c5\",\"12c32727e6\",\"1911135ea7\",\"0aafb4ccf4\",\"662e62713f\",\"85f9a29b4e\",\"1f270a9c9c\",\"a14bb193c5\",\"12c32727e6\",\"1911135ea7\",\"0aafb4ccf4\",\"662e62713f\",\"85f9a29b4e\",\"48ddc1e17e\",\"7e0eb50c5e\",\"d4fc3880dc\",\"b6ca62b7f3\",\"5211e70e93\",\"09a833f2f8\",\"c54c43c8f9\",\"e3b6eb513a\",\"ac82911817\",\"25eae7f2a0\",\"04994820ae\",\"c6a9647b63\",\"e6fb6443a7\",\"ae4b723e42\",\"174b6b1286\",\"002bf14ea5\",\"365d51a494\",\"7e1a61ce52\",\"f46a9f798a\",\"e4ebb5d45b\",\"52c18df6fb\",\"c150b75132\",\"e5e4b97728\",\"c5d3f607a6\",\"edbbde5739\",\"6fb787b6fd\",\"7b03bff9f0\",\"33db2ca4b3\",\"4b64a6cf54\",\"b553d054ac\",\"1406d0f7b0\",\"8705c558e5\",\"f3dbba0b17\",\"7e4ff9055e\",\"ac2448e199\",\"4b64a6cf54\",\"b553d054ac\",\"1406d0f7b0\",\"8705c558e5\",\"f3dbba0b17\",\"7e4ff9055e\",\"ac2448e199\",\"6fa1bfb54f\",\"e0bc5364fd\",\"9b5ca4b2de\",\"a899d2dfa6\",\"93d3efea1f\",\"885dd6e255\",\"089d6f5283\",\"01ada1bc08\",\"e0cbc75622\",\"c490491063\",\"bb2a44247a\",\"cf15767d47\",\"0032fcd13f\",\"a47089c0f0\",\"b5ff839344\",\"630ad71532\",\"43e3881a89\",\"391485b498\",\"f95f3fce8a\",\"674b1dbcb5\",\"53ffb6befd\",\"b5ff839344\",\"630ad71532\",\"43e3881a89\",\"391485b498\",\"f95f3fce8a\",\"674b1dbcb5\",\"53ffb6befd\",\"26480654c0\",\"8bbb947341\",\"2f9160e966\",\"9e24c9dadf\",\"b469d849c2\",\"17c2dcb1bf\",\"40b74a5f8f\",\"df3ccbf8be\",\"352f33a363\",\"f72386cff2\",\"ae647bd51a\",\"a1086ee42b\",\"798505403a\",\"f883e04bc1\",\"6d099e4c3a\",\"2c60f822d8\",\"92bc77d239\",\"086d908bd9\",\"e694f7c2de\",\"4821d05b79\",\"7a1e074589\",\"df3ccbf8be\",\"352f33a363\",\"f72386cff2\",\"ae647bd51a\",\"a1086ee42b\",\"798505403a\",\"f883e04bc1\",\"12b6383bf5\",\"d48352a4a5\",\"51ef753bfe\",\"bd77224f8f\",\"4d4c7f648e\",\"256d2aa4a3\",\"6b80f3a152\",\"9cf2eb1ce0\",\"d65332bc81\",\"bcc0c43e0f\",\"9c5c1837c9\",\"46b907c358\",\"9eb247c6cb\",\"c70cab64bc\",\"9cf2eb1ce0\",\"d65332bc81\",\"bcc0c43e0f\",\"9c5c1837c9\",\"46b907c358\",\"9eb247c6cb\",\"c70cab64bc\",\"6da59396a5\",\"4bd4a3a908\",\"a29c3a1bf3\",\"bb8e4fc86c\",\"646073bc03\",\"2d4da962d3\",\"f81eaa5d84\",\"09866bd826\",\"b8fa58a882\",\"4a00c04f14\",\"280a2dbda2\",\"10aa243234\",\"917dd8b2cf\",\"ed6efbbdd2\",\"7668887ca2\",\"0de4fadd84\",\"b4a4267b18\",\"692843c6e9\",\"6f5b12d545\",\"eca87487ad\",\"e0b879570f\",\"42d507f877\",\"28666237b0\",\"09233a552a\",\"a8ef959004\",\"c3cdcd6771\",\"f9d6084bba\",\"08e9f7a2e9\",\"298a6a7b6d\",\"8198e933e7\",\"40abda7901\",\"336fd6fd5f\",\"3da2a7fd88\",\"7ea61974a3\",\"d408bfb890\",\"298a6a7b6d\",\"8198e933e7\",\"40abda7901\",\"336fd6fd5f\",\"3da2a7fd88\",\"7ea61974a3\",\"d408bfb890\",\"6f3f8a25fe\",\"e15305c979\",\"0bff8e1abd\",\"7df82f8728\",\"eeba3acae6\",\"d281cd7656\",\"b5df732784\",\"1d4c7e53d7\",\"c162c8d575\",\"16cfd7e7ed\",\"b3f6e6744e\",\"35400740f3\",\"98325433fc\",\"db4e462526\",\"4ea7947b1b\",\"2aac23d7e1\",\"4a007508a8\",\"600d11cf59\",\"dda016336e\",\"b7a6964528\",\"4cbe731f4e\",\"27af5a5dbc\",\"2747e02a69\",\"0b02efe871\",\"1739af99a6\",\"49323e38be\",\"c1e671234c\",\"dae9831f54\",\"ae0533f3a1\",\"372df3af4a\",\"721930cb01\",\"a401c83f03\",\"b00532fd2c\",\"5acba1bc8d\",\"cb1844bf56\",\"b57d35dc50\",\"df65da021e\",\"e8b5bb5970\",\"aca514fbbe\",\"f8b48783ba\",\"c2676b2125\",\"1f212ce0b1\",\"42fdae8d1b\",\"0a555387f8\",\"63e4ac556a\",\"343eee5e1c\",\"92e0d25b44\",\"78c9777737\",\"440e8b4d0d\",\"c927a1f04e\",\"ad056f6a22\",\"fba802e035\",\"856779051f\",\"ba23e9fc23\",\"e7da3100d5\",\"593bf87361\",\"776074598b\",\"b543edf19f\",\"66dc5b397b\",\"629bc5afa5\",\"05a149a764\",\"2c9df39a24\",\"97c066ee3a\",\"e032173099\",\"b196dd8198\",\"6f32e1a2f4\",\"df860c8881\",\"80330384ba\",\"6b24211c42\",\"1c44914f24\",\"e032173099\",\"b196dd8198\",\"6f32e1a2f4\",\"df860c8881\",\"80330384ba\",\"6b24211c42\",\"1c44914f24\",\"e2cfc0ecb7\",\"fe7ae3fbaa\",\"2ccc86308b\",\"122da32f1d\",\"07af398e50\",\"af5f4a4e3d\",\"ec64369991\",\"e85a7460b7\",\"0d6a31f23b\",\"efdf8f98bc\",\"1a2bec3655\",\"dc2a80b356\",\"e81614e6be\",\"36b5bb6f8c\",\"e627742534\",\"f1756b86e3\",\"7008169e57\",\"d69316ae1c\",\"45e2d2d4af\",\"2288d49a86\",\"acd86cfdad\",\"e627742534\",\"f1756b86e3\",\"7008169e57\",\"d69316ae1c\",\"45e2d2d4af\",\"2288d49a86\",\"acd86cfdad\",\"7047fcf849\",\"19708c425a\",\"6fc105e3aa\",\"74eccf20f4\",\"3858e50e72\",\"40a8db5ffc\",\"0f4d74a86c\",\"62cc5ed23e\",\"03d37203de\",\"05fffd5bee\",\"db1717a8f8\",\"53bde34d58\",\"974198ef5f\",\"94161a73d7\",\"bee3637ca3\",\"fdf8fd4653\",\"28c009d8b0\",\"83645c212a\",\"0daf7c3287\",\"457da00e2c\",\"c62cd74ce0\",\"a56acf5a71\",\"bb91194365\",\"71415b2aa6\",\"99b1868b47\",\"e7162f83b7\",\"036b380fd0\",\"bd0807c313\",\"abd1b69ed5\",\"187f1d95c6\",\"534b98a886\",\"62e5b29fb0\",\"b4fe87b7a1\",\"675e5ca209\",\"fde33acc83\",\"220ef9352a\",\"f8c6c4eb2a\",\"1c8cc5270e\",\"329f3ea827\",\"2d85f334fb\",\"81f372f37a\",\"d30b4e69e2\",\"5416ddc687\",\"d1d8a383b3\",\"31d6a4b735\",\"0a588b61bd\",\"b4f6bb5744\",\"7e435ff1b5\",\"25928ba81b\",\"1604f65409\",\"8187b6eece\",\"14f88718e5\",\"0d58a42a53\",\"ebda90d1a6\",\"02a1836f6c\",\"254e00b891\",\"c1cb7347fc\",\"70ed6ea68a\",\"d1b3da6910\",\"79f6ec5c69\",\"038b3037de\",\"31a4cbe12e\",\"2bb2428197\",\"63ffc601fd\",\"65bf712ebc\",\"6caaa22762\",\"f3c58e3cd4\",\"07035b772c\",\"423d9bf5cc\",\"485f7e9bba\",\"63ffc601fd\",\"65bf712ebc\",\"6caaa22762\",\"f3c58e3cd4\",\"07035b772c\",\"423d9bf5cc\",\"485f7e9bba\",\"e9ebe27ce6\",\"9cfa898e85\",\"1678d00abc\",\"7ab9f5cdec\",\"0662f3eb80\",\"cb043b89aa\",\"bb38e71ccd\",\"fbd95c0b75\",\"584f220f10\",\"73f9b9674b\",\"7938b472da\",\"76842700c2\",\"c67ec94cf7\",\"4cba8567c1\",\"747154980e\",\"81b2cf32f1\",\"b39f76978b\",\"a48b9e58c8\",\"4ad1825795\",\"0aaf9e5f88\",\"3f03a847af\",\"747154980e\",\"81b2cf32f1\",\"b39f76978b\",\"a48b9e58c8\",\"4ad1825795\",\"0aaf9e5f88\",\"3f03a847af\",\"867cc2d267\",\"35a1e4424a\",\"d35068e7c7\",\"8d958007aa\",\"ba81fc8c6a\",\"63231cdbda\",\"0bdc04c80b\",\"ea3d8d17cd\",\"8a823b09bf\",\"3fb46967ce\",\"eb293a40c0\",\"0d924c8485\",\"67a6574a8c\",\"60331218d2\",\"21d3979c16\",\"11d3bf91fd\",\"a596a9087c\",\"e4793baf7e\",\"8e3f3d630c\",\"23bceccade\",\"120f92ea67\",\"0b62f4564f\",\"e9f773f5b1\",\"cc3bb12097\",\"c1cf696db9\",\"e99aacf4c4\",\"ddfcc74ec8\",\"5f716689d5\",\"a2fb69f575\",\"5475511f80\",\"e43b635541\",\"a973004030\",\"e2ec85e622\",\"71c01e1f19\",\"b9d3554d9b\",\"abe4dcad5f\",\"dc7112fe16\",\"6d6976ce64\",\"922abcc899\",\"65b1174c39\",\"b3000ade37\",\"2b206eb938\",\"9f1befe902\",\"bc4f0b1044\",\"c22731c952\",\"814f522859\",\"92bb88bf11\",\"8dfd7fea66\",\"861f866409\",\"a72c97ddd2\",\"59535a4262\",\"1823c59f8a\",\"da58f3a9d0\",\"197b91e090\",\"bcaa934534\",\"cc5b9cc886\",\"a4896c1335\",\"7323a48601\",\"f30be84838\",\"72da309c13\",\"b08dab4765\",\"06b8919a2f\",\"ee77e04409\",\"cc45373936\",\"bc1672f6df\",\"0944c42438\",\"8aaec06fc6\",\"7162a1668f\",\"62e5a33b8e\",\"eed348333c\",\"bc0f6dd463\",\"f4379045c6\",\"62d3904339\",\"4ffc8148f4\",\"3f8a02e440\",\"3bd3104cfa\",\"f21ae2250c\",\"2861684917\",\"88462708eb\",\"e341a2721d\",\"a17c58a8f5\",\"c695c40d87\",\"aad7d7e3ef\",\"81c6ae5011\",\"1da0b9f591\",\"45cc62b0f1\",\"486c4277ae\",\"1932a95a07\",\"fa114a6920\",\"6788fb9acb\",\"fc4acc7850\",\"1da0b9f591\",\"45cc62b0f1\",\"486c4277ae\",\"1932a95a07\",\"fa114a6920\",\"6788fb9acb\",\"fc4acc7850\",\"c5bb48f4bd\",\"1c69b3b46f\",\"0f394e194a\",\"6ab26e8d71\",\"b0d53cdb05\",\"ca811719e4\",\"794742972e\",\"831256d83e\",\"85ac3498f8\",\"1b98b7fe08\",\"372273c7f4\",\"89ee995da1\",\"f1c814ec8e\",\"bd557e0f7c\",\"09a4ded7f1\",\"038e43847e\",\"c1397a24e3\",\"77c1655e58\",\"ca6e290729\",\"9cd2f0b552\",\"00b617ab15\",\"11f7a8c67a\",\"0bacf9c065\",\"2ad356ebc4\",\"ed7a6c689e\",\"3daf1326ec\",\"620d1b0efd\",\"dd00f05eec\",\"daae7e4d1c\",\"a95a49c665\",\"0111cfb0f5\",\"bb88e1f092\",\"3612f9a447\",\"00db5a4725\",\"13cface905\",\"64d062c8a3\",\"e4df8cdc6c\",\"239430fc27\",\"b7201fe08d\",\"d3cd00b5ea\",\"86dcedbe81\",\"0544e8de0b\",\"4f777a1c78\",\"c6c69e75ab\",\"f37cd174e5\",\"2f7e199c61\",\"ca4767c108\",\"ac27482e30\",\"af0c391086\",\"84c1da6c5d\",\"7c5da6e263\",\"89bbd1fb67\",\"cb4f7f09e5\",\"e280fb6745\",\"c0e98d2296\",\"c1accc114c\",\"a79255aeb4\",\"2fcb2d287c\",\"d78fb7237a\",\"eb8bb676ce\",\"92605260f6\",\"161d96b7f5\",\"cad14b6a90\",\"a79255aeb4\",\"2fcb2d287c\",\"d78fb7237a\",\"eb8bb676ce\",\"92605260f6\",\"161d96b7f5\",\"cad14b6a90\",\"17876c1b4c\",\"c2c0e62a40\",\"6b061de06a\",\"11900c7f18\",\"640716bfc2\",\"09fa47afdc\",\"ed14f1d8ee\",\"564215cc84\",\"99b5427f50\",\"b23c87e1bf\",\"e0963fff68\",\"79f5d4aed8\",\"cbfed75036\",\"6e06acd70a\",\"af6ce1aee9\",\"89c96eaf75\",\"3ed993d623\",\"182cabf9ee\",\"5fdfe57d9b\",\"c5086db0c7\",\"915be7a084\",\"c55746252e\",\"c2dc435ed8\",\"12777f3463\",\"5df5bcecc1\",\"123c5f242e\",\"6c7adc6603\",\"49f2f2cd41\",\"07a57251de\",\"011e79b628\",\"53bf885ece\",\"d4fe1cfe8a\",\"9bc4a385dd\",\"3933b737b7\",\"67e3f801ac\",\"158a380ec6\",\"f1eb48cb92\",\"127715533f\",\"7c49cc6d25\",\"e0bdb73d9d\",\"197555e7ba\",\"86f2ac9fe7\",\"cea76d0f66\",\"4fa754b915\",\"497591052a\",\"f910150c2b\",\"af43511259\",\"d7fb639125\",\"269405719a\",\"a24f24d9bb\",\"ede920a2dc\",\"0bde571263\",\"cf3b42eaae\",\"ed62ce5e2a\",\"af0a7af149\",\"e6fdf76774\",\"f71665124b\",\"1b678f308b\",\"c76b7de3eb\",\"0560f897d6\",\"3862c7cab1\",\"8e9fc30d8a\",\"baf20bacdd\",\"99f82231b5\",\"ffa0793853\",\"4e96983c8f\",\"5c626402c3\",\"b8acd16433\",\"c15b28a036\",\"6130632bc6\",\"37f018c229\",\"108970d518\",\"4cad7ef4e8\",\"e9b6ce0994\",\"c839d2bbc9\",\"c372d3cde7\",\"97e0177a0c\",\"5fb9c75a87\",\"decfe706cb\",\"fea339de37\",\"151ce42f05\",\"b5adb4fe32\",\"1238a9fa5e\",\"4a84c5e9bd\",\"421c797d39\",\"682c963dd0\",\"d1fc715096\",\"aa52ffbbaa\",\"d342b78a09\",\"ef400ae256\",\"b38b39b93e\",\"28dae23000\",\"3387da9d2e\",\"5374da4d51\",\"15b67bb3f3\",\"4fb5f2901d\",\"b7d0f94c07\",\"ccf3d784c0\",\"a4d69a7860\",\"5d52a91dcf\",\"ca401170b8\",\"69be969c8b\",\"22ac0cfcc7\",\"bc9fdcc2a3\",\"3f666ec481\",\"c55746252e\",\"c2dc435ed8\",\"12777f3463\",\"5df5bcecc1\",\"123c5f242e\",\"6c7adc6603\",\"49f2f2cd41\",\"c9cc5b04e8\",\"ab5f8aefcb\",\"4e98fad8dd\",\"ea09cdef5b\",\"323fdbe8a6\",\"8d9a54e2e0\",\"aa3a306170\",\"421c797d39\",\"682c963dd0\",\"d1fc715096\",\"aa52ffbbaa\",\"d342b78a09\",\"ef400ae256\",\"b38b39b93e\",\"777810352d\",\"25cab73bc4\",\"c2743612af\",\"aa29dc67b2\",\"45f33b230e\",\"17ded4608c\",\"64c9a6d541\",\"40f2bd91ff\",\"f32c167028\",\"7950eefa24\",\"c8487395d0\",\"5ffbc281c6\",\"b4496b42d0\",\"9717e9e04a\",\"40f2bd91ff\",\"f32c167028\",\"7950eefa24\",\"c8487395d0\",\"5ffbc281c6\",\"b4496b42d0\",\"9717e9e04a\",\"b26764e9f8\",\"74b3483be3\",\"221182ac8f\",\"e8094f9e09\",\"ca5c1acbdd\",\"4b60ef000a\",\"c1b4a75022\",\"fa9afa5afb\",\"610df8090f\",\"7ddd125901\",\"c1281d757f\",\"09f6bb132f\",\"eeae1e165c\",\"fbc2c15329\",\"f64b23901f\",\"333e211dc0\",\"a04a99a4bf\",\"1bdfacb82f\",\"8ecaa2b461\",\"523786cda2\",\"e3261f7475\",\"bf37248353\",\"5b149d570d\",\"dde5a91925\",\"546dfbdeb2\",\"68965e7bbe\",\"00868a2483\",\"fce0232ffc\",\"c6d197f55a\",\"e5b7470410\",\"50eaab5e7b\",\"995d798f14\",\"6e071cfa6c\",\"66c91f0860\",\"eb7dc492e6\",\"99c26217d7\",\"855afa752c\",\"63a75a6e82\",\"9eb94a1662\",\"f3340fc0ad\",\"a78f7c655a\",\"0aacf61620\",\"2e7142cd19\",\"1b6f34fd65\",\"607055aa18\",\"946a82912c\",\"eb7b91171e\",\"d2979d8746\",\"e59357b333\",\"2e7142cd19\",\"1b6f34fd65\",\"607055aa18\",\"946a82912c\",\"eb7b91171e\",\"d2979d8746\",\"e59357b333\",\"b13bca548d\",\"3a4d5e0286\",\"19bb9939dc\",\"eb36ea1c91\",\"2cd83843f4\",\"92b0cf59a5\",\"b6f2e34aab\",\"1d0606115a\",\"b4e41cd7b3\",\"d57c2d32ac\",\"79c965df6b\",\"83118c3084\",\"458710ea11\",\"e4651eed56\",\"2fa7e90962\",\"922568bc75\",\"8cf7516d6c\",\"fa0c656bd2\",\"4e0b29e99c\",\"507492f28a\",\"6e130ebf1b\",\"e920caf3c7\",\"1322d8d218\",\"6bf23e6606\",\"51afdf481b\",\"c049578072\",\"e1ad5cd2c8\",\"446ad3219f\",\"e920caf3c7\",\"1322d8d218\",\"6bf23e6606\",\"51afdf481b\",\"c049578072\",\"e1ad5cd2c8\",\"446ad3219f\",\"7d710e8a76\",\"2a6c113736\",\"bdeca836dd\",\"571ddf31fe\",\"0fa2eeab7b\",\"5e69e648b2\",\"9e12f95a86\",\"247233d74a\",\"ca3af326fa\",\"7dd64a9d6e\",\"56b1080458\",\"9d215c9f04\",\"323776777b\",\"7019452e11\",\"4f0f698693\",\"84e858a58d\",\"1d11137721\",\"13eb2369f7\",\"0cf1279383\",\"b4558dfb49\",\"3bd52ee05d\",\"a7c47e084d\",\"2b4816f90e\",\"f7766c2d31\",\"775fa2bfed\",\"c122b89a61\",\"2e1042951b\",\"55cdcd1975\",\"4f0f698693\",\"84e858a58d\",\"1d11137721\",\"13eb2369f7\",\"0cf1279383\",\"b4558dfb49\",\"3bd52ee05d\",\"385aecf0cb\",\"69b5d6d77e\",\"0865560122\",\"6c2922778e\",\"f156659af4\",\"2dd7d21063\",\"f3732f6ea9\",\"63b64a8628\",\"d05792e641\",\"3a2c8c1caf\",\"8f43a4e24a\",\"dbbad113e2\",\"40abeda0f7\",\"141c0e3a10\",\"c8601b259d\",\"f30ab2e6fe\",\"121550cf41\",\"73951c7fae\",\"14104d842a\",\"6e203bfbd3\",\"71513920ba\",\"8fd102273e\",\"3c12342e0e\",\"40467c427f\",\"097e62ea3f\",\"259889217a\",\"c541cb216a\",\"827f51c227\",\"2fc6f0cbc7\",\"746a025981\",\"a05682de01\",\"bd295f7392\",\"3cc7006f97\",\"e049ec0eba\",\"934c002de0\",\"c3644f1ddf\",\"330c7b270d\",\"2b6f5f37c6\",\"d32ad09399\",\"d822417a39\",\"a4d1a3a255\",\"dff7670ed1\",\"cac406e1a1\",\"8ee339fe1d\",\"0c391aa9b6\",\"fad6645105\",\"ce37961a34\",\"b23041a560\",\"9cc10dd08c\",\"a8c4df785e\",\"559b111cd1\",\"cbcbd39f25\",\"61b2d2a932\",\"2d9c9d7160\",\"cc52140c05\",\"84b0449e5c\",\"25804c2612\",\"61883a5e84\",\"19321e10ac\",\"193d2bf6ca\",\"871368f146\",\"c7e1bd56dd\",\"0aed7188ea\",\"2d264f00c7\",\"693b5f1b94\",\"40158e25fd\",\"8f51b17c7b\",\"87fae2494d\",\"1a584d1f7c\",\"dc8da7bf61\",\"2d264f00c7\",\"693b5f1b94\",\"40158e25fd\",\"8f51b17c7b\",\"87fae2494d\",\"1a584d1f7c\",\"dc8da7bf61\",\"e2f46e21af\",\"ccc3852bfa\",\"782fb18719\",\"5de11b99a7\",\"6637c57217\",\"c2443bd0c9\",\"4aa79bee87\",\"8446febe5a\",\"b0b49b0bef\",\"1953bf352d\",\"909cd0dd85\",\"325c7c7701\",\"e2b472f795\",\"1b85f69276\",\"8446febe5a\",\"b0b49b0bef\",\"1953bf352d\",\"909cd0dd85\",\"325c7c7701\",\"e2b472f795\",\"1b85f69276\",\"05750873d7\",\"618af0fc91\",\"5c2ecc0d69\",\"97486a7971\",\"ab575c0e1d\",\"827d8355ef\",\"9019ef287f\",\"abafb039d7\",\"b0f47c6faf\",\"ca5dc8200f\",\"8d2297d127\",\"874f83d102\",\"c8d3e3cb2d\",\"63c9b56455\",\"b981f58a15\",\"671c40d99d\",\"7280ba5645\",\"4859e5eda9\",\"6a9b995892\",\"c382a58e1e\",\"efb1f4f614\",\"b981f58a15\",\"671c40d99d\",\"7280ba5645\",\"4859e5eda9\",\"6a9b995892\",\"c382a58e1e\",\"efb1f4f614\",\"7f7737d284\",\"d61548cdff\",\"6cbe5e20b4\",\"dd3d619be8\",\"97004fc1a9\",\"5371f72d3e\",\"645c7b5bd9\",\"433db8262a\",\"0e73404c50\",\"829509cdab\",\"bea581a544\",\"2e258e3c0d\",\"b878beb6a6\",\"805484d931\",\"a9ef2331d2\",\"b101087d50\",\"082868fe20\",\"0804dea559\",\"9c48b05869\",\"ca6b8ce8d4\",\"e512b9995f\",\"d4fda20310\",\"5c32ffaa16\",\"50751e1d5b\",\"67fb8cb6a7\",\"e8a68905d8\",\"eb5528f1d3\",\"773ee8fad3\",\"345356adf7\",\"7193d7f767\",\"fabb3d6110\",\"1f75aa7e24\",\"7ec9f93b95\",\"2612873c97\",\"5c85226575\",\"d712399bad\",\"a6899795be\",\"ce0225f9be\",\"1c5ec7c6f4\",\"ebfff977c0\",\"9ed8d4d9df\",\"8fdf1bdfc1\",\"7f7737d284\",\"d61548cdff\",\"6cbe5e20b4\",\"dd3d619be8\",\"97004fc1a9\",\"5371f72d3e\",\"645c7b5bd9\",\"4c4b9c686a\",\"4ed9b6934c\",\"765b072c03\",\"36e078953e\",\"0c8110b973\",\"830a5e92f0\",\"fbfd140352\",\"afcead8b07\",\"dcc452c28b\",\"3dd8034cc2\",\"5fa381e57e\",\"81e6568841\",\"0958409d31\",\"1c8922d273\",\"32b7198f91\",\"e92480d18d\",\"075d9c1696\",\"b58ecc1d07\",\"0dfe37ee18\",\"b981dadb90\",\"bea9f70215\",\"749e7f73bd\",\"86c271bdfb\",\"33f8d4181e\",\"d93ee62620\",\"d20b5b61fe\",\"0a768118ed\",\"52a772104d\",\"48956c39a8\",\"c401592128\",\"ec9d3556f2\",\"3e86c78f0d\",\"efe68f3b2f\",\"c2b8764b7c\",\"187f79bb5f\",\"5d765c8732\",\"62e98ebcf3\",\"fbe0ca20b4\",\"9e24f987a0\",\"2133f7886a\",\"b6cc02522b\",\"2bf561bd60\",\"a63bbc94e3\",\"4ed52cc2fc\",\"2debcb0b56\",\"bd2ae63e38\",\"5f686ecba9\",\"631a71b384\",\"b283a88d5b\",\"9584557e89\",\"3d2b17f660\",\"11389ea961\",\"9bfce26957\",\"88df930c0a\",\"93681e14d5\",\"6e18bf0608\",\"671fd3461c\",\"4e8830a71b\",\"eaa308ec30\",\"62fc64beef\",\"e8810871f4\",\"b2109021ac\",\"714aca4060\",\"671fd3461c\",\"4e8830a71b\",\"eaa308ec30\",\"62fc64beef\",\"e8810871f4\",\"b2109021ac\",\"714aca4060\",\"131a9f1cb2\",\"0a94ee9b21\",\"970d00be1e\",\"4948c94d67\",\"99cd324e30\",\"ed3c26b5e1\",\"04f091faac\",\"8e6bbf5487\",\"e7c2e5b6ea\",\"a1370ebb5b\",\"5d72c7dfac\",\"0ca8111eb0\",\"f9f6db8a74\",\"2fd5ae8cfd\",\"8e6bbf5487\",\"e7c2e5b6ea\",\"a1370ebb5b\",\"5d72c7dfac\",\"0ca8111eb0\",\"f9f6db8a74\",\"2fd5ae8cfd\",\"235065ebf3\",\"0f7119b686\",\"0e11a80efc\",\"e46fb401f8\",\"2e9db194be\",\"4af35450ab\",\"cb6d0e96ec\",\"d437c4edd3\",\"b9d4dea1e9\",\"dccf16b707\",\"30bedfed95\",\"240b25345a\",\"44a510006a\",\"44f6652482\",\"76f60f7d8d\",\"7929c9ee51\",\"e370dac3db\",\"4e96ca5547\",\"46ad6b2c06\",\"a9beaf8447\",\"7cb0384cf4\",\"903816ecb3\",\"25de81e247\",\"37541106b4\",\"1927a1b2cf\",\"c374f297e1\",\"9debb77849\",\"ffcf3a334a\",\"318142931c\",\"83916e1e9f\",\"99f38c8406\",\"6df8411a7a\",\"2f59f73195\",\"b89ccf8105\",\"abc5f5d531\",\"c152ccb36a\",\"21ae748556\",\"3c95ff8f23\",\"95405b9ca6\",\"4db645be30\",\"0c65e6dc22\",\"9ef4ea5080\",\"6c0c9ca3dd\",\"4e6e7b678a\",\"5ee9947cbd\",\"cb0585f98a\",\"008627b92c\",\"bd4783fdd3\",\"dc05d721e9\",\"df60a1c710\",\"14123a6b95\",\"e36c83e702\",\"d00aaa91c5\",\"dceacaddfb\",\"dd5efb8ea9\",\"f4b4bd3279\",\"b8e7232133\",\"3f96b8899d\",\"c83656aa22\",\"2ba83cb7cb\",\"21eba13d98\",\"ec77481c90\",\"65680e3036\",\"235065ebf3\",\"0f7119b686\",\"0e11a80efc\",\"e46fb401f8\",\"2e9db194be\",\"4af35450ab\",\"cb6d0e96ec\",\"ff23aa2727\",\"201e4c1778\",\"f46f7d5eaa\",\"85b8f39b27\",\"00319373d8\",\"2c249d4024\",\"aee8a3bcc3\",\"b613c5e268\",\"6dc54e5770\",\"ecb32f98b0\",\"85304c8305\",\"e95668c30d\",\"acd9d5d41d\",\"29b603e78c\",\"a826b27143\",\"437d4c2f42\",\"0fb2be668e\",\"e3d564e72a\",\"5ca65a0b9e\",\"e0b80feb06\",\"259a7ab4ab\",\"004433990f\",\"d2a60c80c6\",\"56fd901cd6\",\"f13762bd75\",\"d00c25f5f0\",\"85dfef4a4f\",\"110a3a55d0\",\"844558b8ff\",\"78517743af\",\"935359455f\",\"d08ceb55e7\",\"c23514df4e\",\"9a61333827\",\"c0e3988513\",\"58f6e99055\",\"06dc6bd6a3\",\"ddd6543e45\",\"2c6d894569\",\"e17243f4c4\",\"5f9457a181\",\"11f07d9253\",\"183bc43d25\",\"d0a2651818\",\"3ae02c0210\",\"c3f4c079b0\",\"e2ae07df60\",\"e449725810\",\"fdadeed6c5\",\"e42ea66a95\",\"fe1d86c35d\",\"eefe51c5e5\",\"e50036abf7\",\"d838083996\",\"cdf0d3b5d4\",\"ecd892c92f\",\"d6ee7f5389\",\"0a63e9e18b\",\"2d1835ced7\",\"d9a3ac4d79\",\"210099db65\",\"93cdd91cbc\",\"5aec63b75e\",\"0845c6f787\",\"db6bb08b5a\",\"5f87b45738\",\"e2850d809c\",\"0f14e433ff\",\"0dd7e75dcb\",\"0031ae4667\",\"0845c6f787\",\"db6bb08b5a\",\"5f87b45738\",\"e2850d809c\",\"0f14e433ff\",\"0dd7e75dcb\",\"0031ae4667\",\"77909e6806\",\"fda556b382\",\"542c8374d7\",\"e73b5f4696\",\"7267e4c15f\",\"69a98684fb\",\"e0fd7ed5e4\",\"4c5b1546d7\",\"05a1eaafd1\",\"d2dcfd77e3\",\"c45f61736d\",\"74ed1b4653\",\"be72340943\",\"85a2bc1ede\",\"32b289543b\",\"f205c43419\",\"04c055a7a3\",\"30adc26d0f\",\"0c2f5c6a51\",\"c04f942a65\",\"56db406c53\",\"32b289543b\",\"f205c43419\",\"04c055a7a3\",\"30adc26d0f\",\"0c2f5c6a51\",\"c04f942a65\",\"56db406c53\",\"01c2030796\",\"43ed243100\",\"11b65da251\",\"b63f08c8bf\",\"3ad6d3147b\",\"deba5d4a75\",\"44d01d3fe9\",\"97516863cc\",\"7e61c66cd3\",\"98722c28f2\",\"faf8e3f354\",\"277615548a\",\"8e6639bd7d\",\"a41c913676\",\"49cfe30c70\",\"d0d345ae18\",\"b7f865d98a\",\"f8995156eb\",\"98283c5986\",\"3c7cc51e53\",\"433478bc42\",\"cd0e3cd970\",\"4af8e0cd27\",\"2a8132e609\",\"4b5bf57ab6\",\"75464ab06d\",\"ac57b782e6\",\"8720b0de44\",\"a35dbef7aa\",\"bc39dccb0c\",\"9a02ba33b2\",\"d535ae6641\",\"c850412abe\",\"d0de24e66e\",\"22d670f165\",\"a35dbef7aa\",\"bc39dccb0c\",\"9a02ba33b2\",\"d535ae6641\",\"c850412abe\",\"d0de24e66e\",\"22d670f165\",\"6806a2c2bc\",\"29189f5fcb\",\"334dec4456\",\"7e5345e347\",\"e5f1addfde\",\"a7120a97fc\",\"22fef18cd2\",\"b74746a64e\",\"f66e55f276\",\"dee8607178\",\"0340c9603e\",\"b08f6cee11\",\"dc8076dabe\",\"fced884b58\",\"6e92225427\",\"746c196af4\",\"cf26fa6ed5\",\"fec677132c\",\"7f892e66d2\",\"675f20b1ab\",\"bfa54b5869\",\"6e92225427\",\"746c196af4\",\"cf26fa6ed5\",\"fec677132c\",\"7f892e66d2\",\"675f20b1ab\",\"bfa54b5869\",\"5ce247e721\",\"cebdb1137f\",\"ca14aa9ed7\",\"27fb5492ff\",\"fb3cd5da4e\",\"ea41e36925\",\"7370857383\",\"5ce247e721\",\"cebdb1137f\",\"ca14aa9ed7\",\"27fb5492ff\",\"fb3cd5da4e\",\"ea41e36925\",\"7370857383\",\"572ad87b5c\",\"607329bbd8\",\"554234418f\",\"983c4a4ab7\",\"7975ed184c\",\"7c3877c089\",\"3590e2b712\",\"27add2e2dd\",\"b17e3ab211\",\"25c6dd7c51\",\"ea8acd1b87\",\"f4fc926328\",\"f4656e71de\",\"c885e70ac0\",\"73d30541f6\",\"3fea803a0e\",\"a02cea2654\",\"1816ca4201\",\"b43e8bb91c\",\"7382459d4d\",\"23a990e385\",\"41e661f7b7\",\"7890e0bf56\",\"02602aeac4\",\"358aa9ce57\",\"28f15b1f8b\",\"aa73d64e14\",\"30d688b6c0\",\"41e661f7b7\",\"7890e0bf56\",\"02602aeac4\",\"358aa9ce57\",\"28f15b1f8b\",\"aa73d64e14\",\"30d688b6c0\",\"48ff3e0985\",\"457f7dc49e\",\"667c308be7\",\"93a731c7c5\",\"1e9a356480\",\"5b31da89d5\",\"b5da8b3813\",\"780a46b1c2\",\"df9aa4462b\",\"52d9d78af4\",\"d0e4b5bf76\",\"232726a092\",\"bd35be8023\",\"c9446f7dc1\",\"780a46b1c2\",\"df9aa4462b\",\"52d9d78af4\",\"d0e4b5bf76\",\"232726a092\",\"bd35be8023\",\"c9446f7dc1\",\"c828b9736a\",\"bce3b67b69\",\"2b44b57f4f\",\"ddf408c096\",\"ef5526facb\",\"c233ca1933\",\"9ff4e0aaa3\",\"038e012e42\",\"e8052e0b1f\",\"7ec368e511\",\"d9d8e29cbe\",\"d413ed0464\",\"853615104a\",\"79d5f7f943\",\"038e012e42\",\"e8052e0b1f\",\"7ec368e511\",\"d9d8e29cbe\",\"d413ed0464\",\"853615104a\",\"79d5f7f943\",\"d4eca5152e\",\"9a40e43290\",\"998609eea7\",\"5258c5978d\",\"2a40c5b1ec\",\"59b325cebb\",\"f1f6012bf5\",\"d4eca5152e\",\"9a40e43290\",\"998609eea7\",\"5258c5978d\",\"2a40c5b1ec\",\"59b325cebb\",\"f1f6012bf5\",\"977b5df1fb\",\"5b07ac3a05\",\"433f3f4093\",\"fc8e05a448\",\"52dd0168ed\",\"bf8bd22e87\",\"8e12def420\",\"977b5df1fb\",\"5b07ac3a05\",\"433f3f4093\",\"fc8e05a448\",\"52dd0168ed\",\"bf8bd22e87\",\"8e12def420\",\"f47a1860fc\",\"32249247ef\",\"5eb3dce9b2\",\"50cf1b331c\",\"0f0d6826bd\",\"fb49964933\",\"f0d45d7983\",\"b72ff2044d\",\"a563f9ad3c\",\"e13914f2c9\",\"a5c21d0ca2\",\"750659caca\",\"e256275134\",\"9b4294b9e3\",\"86127032ca\",\"2814cac4d3\",\"09e114853f\",\"daeb1b1ba8\",\"aab7eba65f\",\"0f36ba41e2\",\"7b4c93a21d\",\"99b122a43b\",\"7e08b1ecfc\",\"bec9148da8\",\"b81a739e81\",\"28a0369549\",\"ce5ad06cda\",\"219752efbe\",\"be4029f687\",\"cf9d476db6\",\"d7b8f4d2e1\",\"5da6038a89\",\"da85c8a026\",\"5184673137\",\"fc9f2ea348\",\"7aa69ab43e\",\"f8595e4590\",\"710d1644d7\",\"2972850f6d\",\"d512000102\",\"1076907cbc\",\"49128ec1ed\",\"be6b7387a6\",\"4af8afcdc1\",\"e25fa4abc7\",\"1f61c7737b\",\"340e91c78c\",\"c073d1d71c\",\"a1db9cac52\",\"727ee75524\",\"570f911f62\",\"69ff0190ed\",\"a1e1c774bb\",\"bffa7554bf\",\"d56a1a21c6\",\"d9b24238e6\",\"75ca72e1c5\",\"e17a91de03\",\"d91d489d81\",\"9cfa494991\",\"9958633ce3\",\"2ca5b31e3c\",\"feef433194\",\"75ca72e1c5\",\"e17a91de03\",\"d91d489d81\",\"9cfa494991\",\"9958633ce3\",\"2ca5b31e3c\",\"feef433194\",\"cdd5cfb59c\",\"9379ed7e12\",\"6033d502f7\",\"0080a09a9b\",\"ad2359e0fc\",\"3c5a848416\",\"e83cb73471\",\"1d68b5c050\",\"6f2200ef82\",\"3c36fbec4c\",\"697fc06617\",\"020315bb63\",\"70a7ee340c\",\"9d577aec45\",\"d4822a52c7\",\"8ad7092902\",\"36182ea63a\",\"aa6648eb06\",\"aebe092111\",\"eb9d09c1e2\",\"4642f043af\",\"203b2e4562\",\"ea25d8de7f\",\"9e8cb0134a\",\"2ab84f3775\",\"4dc91796ae\",\"112b9d4903\",\"8cd95d1e19\",\"a05efd0741\",\"7ad335e9b0\",\"1560f42740\",\"9050a7f04a\",\"850876df94\",\"9fd6ab70fe\",\"dbdf298626\",\"acf57af14e\",\"2cd508802c\",\"489814fe9a\",\"c36c0f01ca\",\"2234feba85\",\"28b31aeeed\",\"1d51269725\",\"175096c309\",\"9f35cc3036\",\"ca5681945f\",\"3ff10d61a8\",\"25e814b1bc\",\"f941be57ad\",\"1b818de771\",\"175096c309\",\"9f35cc3036\",\"ca5681945f\",\"3ff10d61a8\",\"25e814b1bc\",\"f941be57ad\",\"1b818de771\",\"21ff95aa4d\",\"541812d99e\",\"c6de2d30ab\",\"1fa4397006\",\"0b1a01f1dc\",\"dd00fd02e6\",\"d12fdb76e3\",\"bf5f30860f\",\"899fd5bb0f\",\"b4a9da8974\",\"7d5e6ef7c6\",\"cfe5b27318\",\"db366a7253\",\"b7fbfd6123\",\"bf5f30860f\",\"899fd5bb0f\",\"b4a9da8974\",\"7d5e6ef7c6\",\"cfe5b27318\",\"db366a7253\",\"b7fbfd6123\",\"bf5f30860f\",\"899fd5bb0f\",\"b4a9da8974\",\"7d5e6ef7c6\",\"cfe5b27318\",\"db366a7253\",\"b7fbfd6123\",\"92ae26df05\",\"7c64e1e9bc\",\"28bb6d2b40\",\"fee7d9299a\",\"801f8053b9\",\"e6ea3fc092\",\"a954090e70\",\"a0e2dd79c1\",\"548c097a1d\",\"394bdb5e14\",\"24978394dc\",\"f9935e572f\",\"633f7280c2\",\"e14ae15378\",\"6975c1306e\",\"927c2c77b0\",\"8dc2c8636b\",\"a027afce6f\",\"b8b7437985\",\"c1c6cf9f3c\",\"9312849640\",\"b9a6d69f72\",\"659912e191\",\"22f7408fe7\",\"028b5b23df\",\"3da909cfb8\",\"57670534b7\",\"9d0e8cc215\",\"2a9e935c20\",\"32c763327b\",\"3958243fd5\",\"28a5ef7857\",\"80f368f84e\",\"ce9f7615b9\",\"38ff50cf84\",\"2a9e935c20\",\"32c763327b\",\"3958243fd5\",\"28a5ef7857\",\"80f368f84e\",\"ce9f7615b9\",\"38ff50cf84\",\"c3a057e82f\",\"389bd1fe50\",\"79db7e8334\",\"1695c484dd\",\"15d9aa7324\",\"338b96916d\",\"276c337ebc\",\"f3ae370676\",\"995627f5b1\",\"98802b1e3d\",\"b038c3e175\",\"7d9df17d00\",\"31eb710e08\",\"4fa5953a1a\",\"f3ae370676\",\"995627f5b1\",\"98802b1e3d\",\"b038c3e175\",\"7d9df17d00\",\"31eb710e08\",\"4fa5953a1a\",\"5299b6064f\",\"23e99704ea\",\"941a81a429\",\"06f1434b09\",\"1f5411e75d\",\"c5d51869e6\",\"ce8916c38a\",\"9167a7660d\",\"1218ae7e0b\",\"59b6c7cc6a\",\"ab9f14e4a3\",\"ef8c0afd62\",\"164e20fdf0\",\"af07146f85\",\"eaa512d5a8\",\"db458523d0\",\"6b99a03021\",\"827d7c0956\",\"f1f147c1da\",\"cff5004806\",\"434a058dc3\",\"c69147f5f8\",\"754316e68c\",\"7dc752378c\",\"243194817f\",\"6e86144efc\",\"fcbfcef450\",\"54029f0558\",\"8dd5c302d7\",\"a8cedd9565\",\"f77d443b27\",\"5eeb508b59\",\"e17c78db27\",\"26065e8712\",\"0d83466b41\",\"a92f266247\",\"a1871e80e0\",\"5b94a27a65\",\"3f2f503c5d\",\"8a9c5d2963\",\"2855603856\",\"5038daf656\",\"ac8afdb31d\",\"a95e70e7d3\",\"3ec662ad1e\",\"1f79fb2539\",\"3bc606ab90\",\"34f0ef5652\",\"9e6a295ed5\",\"8dd5c302d7\",\"a8cedd9565\",\"f77d443b27\",\"5eeb508b59\",\"e17c78db27\",\"26065e8712\",\"0d83466b41\",\"df40c70556\",\"4efb518cb6\",\"7308dd005a\",\"5a0ddd4db8\",\"a07e372db9\",\"420f23fd8f\",\"fbba34fac9\",\"0da6b2b19b\",\"fe4b4a7eda\",\"4ea6ba2150\",\"7daa285971\",\"d0434bdafd\",\"01762ce05e\",\"ac1b941946\",\"0da6b2b19b\",\"fe4b4a7eda\",\"4ea6ba2150\",\"7daa285971\",\"d0434bdafd\",\"01762ce05e\",\"ac1b941946\",\"f267ddd638\",\"886650b2d7\",\"a3cc6c1ad2\",\"ce0944f286\",\"9740b7f053\",\"d5e5ab023d\",\"4800ad20a3\",\"2e60863bd5\",\"233ced1045\",\"6709205649\",\"5fbee9769f\",\"814152d33a\",\"a6942010a3\",\"a93811a357\",\"c3ca4a16c7\",\"bd34691ea3\",\"081f0dfcc9\",\"5c532e9087\",\"c6faeb4f3e\",\"94173d41a2\",\"bf73b732c8\",\"8f041bf92c\",\"06cffbad94\",\"97ab82b0f1\",\"3f6d5fd826\",\"e70da8aaf9\",\"e326b5af65\",\"2843b0b767\",\"d1dda6f54e\",\"c4e4fa3109\",\"d3ecb8674f\",\"d132df5c86\",\"9ea2a64428\",\"a0799d4093\",\"483848082f\",\"e985ff805b\",\"ea80dee840\",\"31ac38f60f\",\"09c6d2ebbb\",\"eb064a4369\",\"17950a53d1\",\"8b010f6ac9\",\"0f3eae7c6b\",\"0aee179e64\",\"af53720d60\",\"9acd1e2d56\",\"94127727c3\",\"fcd2b35315\",\"a678bd03b5\",\"cae03b1628\",\"280cbaa3eb\",\"1cc919dbef\",\"3389c761e3\",\"858bfd9e13\",\"f0080b9256\",\"3234a4fd44\",\"cae03b1628\",\"280cbaa3eb\",\"1cc919dbef\",\"3389c761e3\",\"858bfd9e13\",\"f0080b9256\",\"3234a4fd44\",\"470a2f40ec\",\"82f3cd84f1\",\"28681f9464\",\"d15f409441\",\"18772c522c\",\"760910c725\",\"7b2e821d23\",\"d8452fcea6\",\"1634705193\",\"83e66fb3b4\",\"8a4bb973bc\",\"5a9c0ccf35\",\"97e8d08b67\",\"d8ff6575df\",\"83b77d9325\",\"0a1d099db9\",\"8081d2102b\",\"3149b50460\",\"23956ca762\",\"392a675c50\",\"e1c1394ad9\",\"c4119a2e4a\",\"0e2a49cdf4\",\"8c72d7c762\",\"029f312b5c\",\"2f8a5404ec\",\"b3f5192d81\",\"08cd1d75bd\",\"c4119a2e4a\",\"0e2a49cdf4\",\"8c72d7c762\",\"029f312b5c\",\"2f8a5404ec\",\"b3f5192d81\",\"08cd1d75bd\",\"b6e19de521\",\"ea589ccd3a\",\"d517f54682\",\"3210ff95c3\",\"3c7db46343\",\"23cc1a32e2\",\"696ec20f32\",\"cc16766811\",\"818a13faeb\",\"635b38919b\",\"ec142017fc\",\"05014728fd\",\"2e18a30dd5\",\"db46299278\",\"b58a02ae77\",\"c843f4dac8\",\"aaa9f67df6\",\"cf33e6710e\",\"403a1cf85a\",\"498477786e\",\"dbeed4770d\",\"7a1deccdb4\",\"39dc88ff49\",\"0a4b08e6e1\",\"a0f09801d2\",\"d4c82b6e93\",\"49e788f299\",\"00df5159d3\",\"92e9787517\",\"00aa25be91\",\"21ea88aa2b\",\"a47d0ea834\",\"5a9ddb842a\",\"e173142e1d\",\"98d6ca4ccf\",\"92e9787517\",\"00aa25be91\",\"21ea88aa2b\",\"a47d0ea834\",\"5a9ddb842a\",\"e173142e1d\",\"98d6ca4ccf\",\"d7451c96f9\",\"2330193422\",\"2525e17e8a\",\"b3211930a4\",\"3dba126a68\",\"02d3f06c44\",\"0fb3fe46a5\",\"5c49305684\",\"46fdb16c71\",\"ff2eb33485\",\"2313764cd0\",\"b7e886f5cf\",\"97c6685129\",\"5160504039\",\"c70a6ec846\",\"684e580589\",\"0ba44d36c7\",\"6f46486352\",\"f7cdf3db04\",\"9cea61f7bc\",\"f752e592c4\",\"6e795bedc7\",\"9a06bf82d8\",\"c0a8474bf3\",\"a21d6d4b5a\",\"f7d50175e1\",\"381fdd6e69\",\"6fc27d251f\",\"f031659923\",\"02919236a7\",\"d4bc9ee99a\",\"4ec2b8b0df\",\"0655142568\",\"29e4e25f97\",\"13425cbe29\",\"5c49305684\",\"46fdb16c71\",\"ff2eb33485\",\"2313764cd0\",\"b7e886f5cf\",\"97c6685129\",\"5160504039\",\"d7451c96f9\",\"2330193422\",\"2525e17e8a\",\"b3211930a4\",\"3dba126a68\",\"02d3f06c44\",\"0fb3fe46a5\",\"f5d955d351\",\"6050f9ae64\",\"df93020e1b\",\"e5e2578628\",\"61aff8555d\",\"804d42fbf0\",\"a917f09fe7\",\"c052228a8b\",\"ed0054f40a\",\"6834d2b415\",\"718a1e8abb\",\"bcbaabcc99\",\"1e98d850d2\",\"1f28f74957\",\"5c49305684\",\"46fdb16c71\",\"ff2eb33485\",\"2313764cd0\",\"b7e886f5cf\",\"97c6685129\",\"5160504039\",\"5c49305684\",\"46fdb16c71\",\"ff2eb33485\",\"2313764cd0\",\"b7e886f5cf\",\"97c6685129\",\"5160504039\",\"0a49489446\",\"3db2b7ca14\",\"36d2d13c9a\",\"56570ba624\",\"07c43e570c\",\"cf2c23fb0e\",\"7a7333f1b9\",\"e3a8b170b5\",\"90db1bcccb\",\"7934aa1c8a\",\"0a31461f73\",\"e798e2d240\",\"d826dcb988\",\"717da79fdf\",\"53ac32fab7\",\"27d16d0e03\",\"9c66b12ed4\",\"e4701c4df3\",\"66180252e0\",\"0fe93f456f\",\"ce56e9c2e3\",\"426c649657\",\"c337881cf4\",\"3aec79cea8\",\"f412c0c6de\",\"cf71e4b7b3\",\"6d76f36e48\",\"f667eb6fa5\",\"bf55653a33\",\"6603257b66\",\"795526eaf5\",\"cf2bd8aa19\",\"f69e9347fd\",\"95eb00d16d\",\"a30ce1fa40\",\"4d324cfc10\",\"0016f069b9\",\"f7ff54f0df\",\"e852b12145\",\"cb4bbc4115\",\"b1cf8d8023\",\"97b0481331\",\"4d324cfc10\",\"0016f069b9\",\"f7ff54f0df\",\"e852b12145\",\"cb4bbc4115\",\"b1cf8d8023\",\"97b0481331\",\"f9dbdb5ccf\",\"dddafa4bd7\",\"8e0f5334e5\",\"80c31dae9f\",\"2e01f14bee\",\"270f01e192\",\"a01a110e66\",\"931c6eda73\",\"11e3afa9a4\",\"fae66adc3d\",\"446e7889a9\",\"94ee7b133c\",\"95181867f4\",\"5f3a3df450\",\"8c74ca87da\",\"a7bf1767c2\",\"fc71e7e9d2\",\"244c017001\",\"5b268ad935\",\"fb3a69a841\",\"f7de38b287\",\"5aa5146e97\",\"7eefed354b\",\"f2b1b17053\",\"0173c015f0\",\"d18c39924b\",\"b7b8d1ac19\",\"96f4f22159\",\"3845ebcfe5\",\"eda8282816\",\"822a0295e6\",\"6ed380fb2a\",\"7d417e8004\",\"91f0139c25\",\"8824d89de0\",\"5aa5146e97\",\"7eefed354b\",\"f2b1b17053\",\"0173c015f0\",\"d18c39924b\",\"b7b8d1ac19\",\"96f4f22159\",\"e1aa07d6db\",\"b74b8e8e6a\",\"b1255b4a90\",\"53002053d9\",\"2ef30e77ae\",\"c4809cd1dd\",\"112edbcd43\",\"0b435c84dd\",\"6c8726d431\",\"463b4a3127\",\"a0af0b69d7\",\"d8dfcb629a\",\"cbde9a9c67\",\"32d2c7d398\",\"47601d2e1d\",\"96712167b9\",\"7555ece525\",\"ea5abe809c\",\"7fc73718a4\",\"fd46f26b64\",\"efb0a7dc62\",\"e1aa07d6db\",\"b74b8e8e6a\",\"b1255b4a90\",\"53002053d9\",\"2ef30e77ae\",\"c4809cd1dd\",\"112edbcd43\",\"e1aa07d6db\",\"b74b8e8e6a\",\"b1255b4a90\",\"53002053d9\",\"2ef30e77ae\",\"c4809cd1dd\",\"112edbcd43\",\"7699553fed\",\"08e419dc29\",\"755aae432b\",\"567bb56829\",\"ccea836381\",\"5f83d743aa\",\"fd325e403d\",\"58fc0fdf6a\",\"83b2dfc644\",\"10a0b08b57\",\"c72daa67bd\",\"00e887634f\",\"2db2c2e5e8\",\"2cfcf660ac\",\"52a5bffd8c\",\"259c48bba8\",\"73f3a30574\",\"3bfe816bc1\",\"39f4258ddf\",\"2dfbf6c026\",\"2bac9bb27f\",\"c3c91168e0\",\"ca11974de1\",\"2584483329\",\"d6e4310569\",\"e0ce8bb0fa\",\"87aec14f36\",\"1a00935639\",\"c3c91168e0\",\"ca11974de1\",\"2584483329\",\"d6e4310569\",\"e0ce8bb0fa\",\"87aec14f36\",\"1a00935639\",\"906c66c525\",\"edd0cd1142\",\"720ea97543\",\"454aec6671\",\"5e5fd7a718\",\"c0d24382f9\",\"028891fbcf\",\"2be01eca84\",\"7fac6e1386\",\"90d9b09b1d\",\"27ea7fab7a\",\"d4ac77776e\",\"b5ec73f1d1\",\"7dd88d713b\",\"c6aa4cc141\",\"06f17f9a39\",\"f0374b8a0a\",\"1ac9868831\",\"a39fb1d53e\",\"46cc98d933\",\"a356d91aed\",\"c6aa4cc141\",\"06f17f9a39\",\"f0374b8a0a\",\"1ac9868831\",\"a39fb1d53e\",\"46cc98d933\",\"a356d91aed\",\"e6a0b48ee1\",\"5b96645b8d\",\"6f760cfaa4\",\"5b0794750b\",\"99383a08cd\",\"41d29bfcad\",\"1caf56d9e9\",\"e316ba803e\",\"25a1ede130\",\"da5ccca066\",\"c8c288beff\",\"2b72a030a3\",\"66827b56c8\",\"c1ec83b1a5\",\"f3d858e7f2\",\"52272e2d79\",\"e1d4001efe\",\"ff485550d7\",\"ff5ce967f6\",\"7e6ef4fc34\",\"68a3931dae\",\"28efd0c8d1\",\"995fade718\",\"99744c7149\",\"179659ac3c\",\"ab99ae07b8\",\"2bb5e4ce79\",\"2909a0899a\",\"e316ba803e\",\"25a1ede130\",\"da5ccca066\",\"c8c288beff\",\"2b72a030a3\",\"66827b56c8\",\"c1ec83b1a5\",\"f578715fb6\",\"be5bb65a17\",\"56f7d81830\",\"a3682dfa17\",\"421509736b\",\"743246740f\",\"449dd4ecd2\",\"d64aa1a165\",\"380ea77087\",\"c18ba32980\",\"b1649eaefb\",\"210b3d1553\",\"55e9685504\",\"f389c16dc7\",\"0d5009d8b7\",\"139a4d746d\",\"b9704f1dc2\",\"f1c6b35a4b\",\"ff87e3eeb2\",\"fc26ee7c2d\",\"c3cac936b8\",\"c8e333bf2d\",\"46720064ea\",\"0dd7b7210c\",\"4768374c90\",\"d545770101\",\"5e59a5a86a\",\"68cf70639a\",\"7c9b106c4a\",\"b1cf51913f\",\"1061fd0ba0\",\"f18306a78b\",\"72daa5f71a\",\"8f794ca1a9\",\"82a74f8eb3\",\"7c9b106c4a\",\"b1cf51913f\",\"1061fd0ba0\",\"f18306a78b\",\"72daa5f71a\",\"8f794ca1a9\",\"82a74f8eb3\",\"2620e52467\",\"96521a9da4\",\"3a862f654a\",\"70079d376d\",\"f336db49c8\",\"e2e5bb285e\",\"f63fcd5238\",\"eccbec0cda\",\"39b49c3e17\",\"2a34a922c1\",\"cc6edc02eb\",\"f702e9099d\",\"232d8a06b5\",\"ab492338c2\",\"2620e52467\",\"96521a9da4\",\"3a862f654a\",\"70079d376d\",\"f336db49c8\",\"e2e5bb285e\",\"f63fcd5238\",\"c0f344f893\",\"d66e9395fe\",\"7c8fecc725\",\"10a6e4d4e4\",\"812c3094aa\",\"ad0c31a36d\",\"65ec2a6b69\",\"c2480fa8fc\",\"ae10c33582\",\"204f40019c\",\"ef2181536d\",\"1e40565fbd\",\"70aa25af4b\",\"49f84fa051\",\"ff8991e227\",\"89807fc076\",\"5787491b0d\",\"416473b7c6\",\"ff980d15c8\",\"d1595b49ab\",\"984b58b3f0\",\"c04eae7511\",\"a912d278b7\",\"a8360c3644\",\"6c6f2770b2\",\"5db2215bcc\",\"a41ab67d8e\",\"245b1b025a\",\"6241092c86\",\"dcc75fec1a\",\"d23ee30775\",\"a9912b5afe\",\"fef57b5ce2\",\"fc08425de7\",\"dee81340a1\",\"2620e52467\",\"96521a9da4\",\"3a862f654a\",\"70079d376d\",\"f336db49c8\",\"e2e5bb285e\",\"f63fcd5238\",\"667fdc3667\",\"c891ba2b25\",\"90f769b7ed\",\"ce4a3ada7d\",\"af621003fb\",\"9bb691ec94\",\"67d2e9b20e\",\"1041ee78aa\",\"a8859399ad\",\"642f5cb2f4\",\"ea4d49b219\",\"a29a247f5b\",\"5b67e68dbe\",\"78add8540e\",\"632301ac90\",\"30a4a03879\",\"07e29522b8\",\"4c4b57148d\",\"b9d87f327f\",\"94cc3fcb95\",\"375eebf3f0\",\"30e21aaaa2\",\"aa6dc9623c\",\"aac478080b\",\"45f0fa293d\",\"0fb9ca6929\",\"793aaff3bb\",\"6a8b0112aa\",\"da58b2d2e1\",\"a76f975150\",\"979ba018f5\",\"b7d7ecdc3c\",\"4b78db2f00\",\"53f28ec60e\",\"a197ebde84\",\"6338a3623e\",\"a8087d0851\",\"00b62bddd2\",\"f6807a5d38\",\"50882e88cd\",\"bc0f9638cb\",\"9887cbdcc8\",\"6338a3623e\",\"a8087d0851\",\"00b62bddd2\",\"f6807a5d38\",\"50882e88cd\",\"bc0f9638cb\",\"9887cbdcc8\",\"db1f082f9d\",\"9912a84f6f\",\"325799829f\",\"41b9a101d5\",\"5e1328798d\",\"e8c4fc1f63\",\"6646928101\",\"66eaf8b84a\",\"89a4a30a99\",\"6b858bf026\",\"91998c10f0\",\"b34bd3367d\",\"5b0b0687a4\",\"6a6c8093db\",\"40129d458c\",\"0bdbcfb74d\",\"ac792b64b3\",\"423055e49c\",\"6316f37404\",\"ae9bbf244c\",\"cc2bb8c627\",\"40129d458c\",\"0bdbcfb74d\",\"ac792b64b3\",\"423055e49c\",\"6316f37404\",\"ae9bbf244c\",\"cc2bb8c627\",\"17d9652a59\",\"2012f7c7b0\",\"18e74a1c1e\",\"dbb8313a52\",\"56d2e4a680\",\"58a9ecb8c4\",\"51ffe0b011\",\"17d9652a59\",\"2012f7c7b0\",\"18e74a1c1e\",\"dbb8313a52\",\"56d2e4a680\",\"58a9ecb8c4\",\"51ffe0b011\",\"6b7a1b681a\",\"2617538e8d\",\"ed79e5fe40\",\"4842c6f33b\",\"75313c9c26\",\"52079a8509\",\"222093ae55\",\"0d68fc23a8\",\"0f0fa29b2b\",\"81e04ab1f0\",\"d5c71c6785\",\"27a74b6ec6\",\"67ba052696\",\"ad01011670\",\"55d62b9883\",\"9751f671a5\",\"0d939bd20c\",\"f5c37e35e6\",\"12525ff790\",\"a78f79618a\",\"9b3d256ecf\",\"6b7a1b681a\",\"2617538e8d\",\"ed79e5fe40\",\"4842c6f33b\",\"75313c9c26\",\"52079a8509\",\"222093ae55\",\"da30bb109f\",\"6d38ceb8e5\",\"185cdc0623\",\"951ed584cc\",\"8c1e471469\",\"28a1db454a\",\"da4dea0a38\",\"6c9755be26\",\"d20ff495f4\",\"d3b9fca5ff\",\"1eadd38386\",\"bd498d1b26\",\"b42b211748\",\"d00f643e92\",\"b8cea1f1bb\",\"3b56296c07\",\"835f83abfb\",\"2393373607\",\"4dd47bd0cf\",\"98e3a95d3a\",\"64cb06d972\",\"d2b69382a0\",\"1bde8994b5\",\"1792090393\",\"27d242cceb\",\"e1a1434254\",\"4e8edb17c1\",\"493937a3f5\",\"c261c96d99\",\"ab4bd11628\",\"518c9d29ad\",\"6a8b2392ca\",\"508b76d478\",\"3e6c64a534\",\"21d162438f\",\"5f3f6b8557\",\"bde1c41f28\",\"27b156041d\",\"a3f2e5c094\",\"788d3a9385\",\"1a8e15ce92\",\"66cb60190b\",\"5f3f6b8557\",\"bde1c41f28\",\"27b156041d\",\"a3f2e5c094\",\"788d3a9385\",\"1a8e15ce92\",\"66cb60190b\",\"ae4842d7ed\",\"5e5e3b5ae9\",\"773c48b9b1\",\"3e7e1f4633\",\"264000248b\",\"cd27a65c72\",\"8bd28b72fa\",\"2dd305be79\",\"cde1c3df3f\",\"6d22ba4764\",\"ec28d326a1\",\"50c18158dc\",\"a37a92d61f\",\"089f817cb5\",\"8fc5486f10\",\"31c8d1accd\",\"6ec5eb69ed\",\"a26cdc7024\",\"e70f653d0c\",\"96ecc63442\",\"8517eefd8b\",\"28d7a2527b\",\"0d6d0cfe66\",\"99ccf98da4\",\"bbbc67503d\",\"fd14a634ea\",\"ff4b139566\",\"618e8e6113\",\"bdf4ee0187\",\"80e0897575\",\"9cf8c124f7\",\"40339febe5\",\"069bc27017\",\"461cd165b9\",\"dc7660b5e8\",\"bdf4ee0187\",\"80e0897575\",\"9cf8c124f7\",\"40339febe5\",\"069bc27017\",\"461cd165b9\",\"dc7660b5e8\",\"b977cef013\",\"0111bdcb7f\",\"70294190a6\",\"bf91a29cb9\",\"0095474aff\",\"91708e1a91\",\"e43ae80d78\",\"09c1335142\",\"a65d25a2e8\",\"dace7855ab\",\"1faf724528\",\"fdf186d812\",\"db3d6a1dc6\",\"55c517e15e\",\"09c1335142\",\"a65d25a2e8\",\"dace7855ab\",\"1faf724528\",\"fdf186d812\",\"db3d6a1dc6\",\"55c517e15e\",\"22bef7c2a4\",\"11273c475f\",\"d28e63fb75\",\"507d0b557d\",\"c11608ea4e\",\"143ddb551d\",\"b77a219a72\",\"544da05f93\",\"2321270a72\",\"ac2f529214\",\"cf220b5f2c\",\"8e9a60398d\",\"295bd3896f\",\"d8aaa4969e\",\"7a7624c1d5\",\"54503a766e\",\"180b0d866b\",\"e8cb728fe9\",\"80d91d58f9\",\"ad72aaac15\",\"6e5112b989\",\"b620faa0b9\",\"bb68cc89fe\",\"161822195c\",\"7cb5ca2788\",\"c3ddef4d9c\",\"9af21cf5c5\",\"bf941617ea\",\"435f49bcde\",\"7f6cf44d86\",\"d2f3169709\",\"de83a15233\",\"b8726012b8\",\"4f887a3193\",\"0c6f92781a\",\"f3ee898aec\",\"f5b67caa23\",\"d0b2cf6756\",\"95374b5a7a\",\"7da9171915\",\"54d6eca705\",\"9cd3d81799\",\"f3ee898aec\",\"f5b67caa23\",\"d0b2cf6756\",\"95374b5a7a\",\"7da9171915\",\"54d6eca705\",\"9cd3d81799\",\"d6d850acec\",\"a47f7f9a1d\",\"f88328dacd\",\"6b44665d37\",\"1d56e88161\",\"fcc27f661b\",\"329bbae6be\",\"571880b644\",\"972931ab62\",\"614bea83fe\",\"918b5f2916\",\"f6e1577e55\",\"62ec9a52c1\",\"ed7b00b02e\",\"81145ac3d7\",\"1ef02f2aa0\",\"133f323218\",\"edd349fab8\",\"c0304d5f24\",\"548ea644f7\",\"2509aa7b9c\",\"6cdba80272\",\"0abfe25711\",\"9808ebb730\",\"b3fa1980c1\",\"363977e13d\",\"97860c328b\",\"a70b911cb9\",\"7863fb18b9\",\"5e2e929fe0\",\"2798576c37\",\"73fca1164d\",\"2d782e34b5\",\"8e94dcd5a0\",\"f66eef6f1d\",\"f940e76e15\",\"bfe63259ab\",\"bc97aee3ce\",\"d249dcde5d\",\"7e3bbcb219\",\"4fdf85e3ae\",\"2cbca6aad8\",\"dfed6a2edf\",\"6cd36e5154\",\"db5bbc4c0c\",\"1656c23100\",\"0c99400878\",\"787145b271\",\"8ab4fbc52d\",\"e67a78dfcf\",\"c391fd7535\",\"d5769a94e5\",\"8b809cf51a\",\"4b5c5f3026\",\"6edab2ce91\",\"721ac4adbf\",\"e67a78dfcf\",\"c391fd7535\",\"d5769a94e5\",\"8b809cf51a\",\"4b5c5f3026\",\"6edab2ce91\",\"721ac4adbf\",\"7b640d8023\",\"709c0dffa1\",\"edaaa84af1\",\"76b46f0fc1\",\"9dbe00d43c\",\"82bb0def8d\",\"bddc7f0902\",\"42127d3cd3\",\"0aed64fa36\",\"7035d862c5\",\"e31d6edf56\",\"a50eec08a9\",\"8e3f26eae2\",\"8bca74080d\",\"219707f0c5\",\"a4d2310d60\",\"e3d204996d\",\"f4ae0389e4\",\"9cde0721b0\",\"9168083e16\",\"5d6687cf9b\",\"7852640edf\",\"d9a3cc9ebc\",\"0bd3b9b5b2\",\"847ba97204\",\"0068ee3bb6\",\"1ea3280795\",\"f162ee7cef\",\"7852640edf\",\"d9a3cc9ebc\",\"0bd3b9b5b2\",\"847ba97204\",\"0068ee3bb6\",\"1ea3280795\",\"f162ee7cef\",\"57ae2c9f94\",\"efcd35a070\",\"83a36696a8\",\"fc702c3978\",\"af1efd400a\",\"489b7bc8ef\",\"cf2e510f8e\",\"b1edf228aa\",\"6271296e4a\",\"be88437b0d\",\"7bf5b5c619\",\"3d7872c913\",\"4012fb144e\",\"5ce66a0698\",\"b1edf228aa\",\"6271296e4a\",\"be88437b0d\",\"7bf5b5c619\",\"3d7872c913\",\"4012fb144e\",\"5ce66a0698\",\"10daf8c47d\",\"7e7081b627\",\"feb24b0c71\",\"1be97bc892\",\"8a8aaf9042\",\"d127d26153\",\"12be00f58d\",\"25dd2e8863\",\"9ef6589580\",\"b131124c0c\",\"9329daec2f\",\"e4a90a5cec\",\"bfcc5cf04a\",\"d45405a092\",\"62c10e6f85\",\"73c67e13b1\",\"82826cef7d\",\"a3f9d66ead\",\"7fcb6c0850\",\"b71841b09e\",\"2d79f00ecd\",\"5cbddbd3ad\",\"fcc5347ef9\",\"df793cc418\",\"0d3896812d\",\"1b51dca3dd\",\"2c89e4374c\",\"ca9934047a\",\"d9709e0599\",\"76e297e19e\",\"7172d481f4\",\"95330417f0\",\"68f55e61d1\",\"fbb64462dd\",\"66084b555e\",\"9950c5051d\",\"4729f252a9\",\"6f629b934f\",\"399beb5f6a\",\"bc9882562a\",\"3d7b6251d9\",\"2b14751489\",\"75b382b229\",\"32ebef748d\",\"6633490257\",\"1c9251e02b\",\"0fb3b3f06a\",\"10ccbe072c\",\"6756313daa\",\"6402ba61f4\",\"6e0d0b749b\",\"397a18acc1\",\"c16f3ba210\",\"d219836c0e\",\"2090c5336c\",\"e19adf7700\",\"f275b73b6d\",\"ebc4c50ea0\",\"8df4ab071f\",\"074f8d201f\",\"82ff783bc2\",\"bd7bbeb841\",\"948dbfdf12\",\"6b00726cb0\",\"bbc781c5d9\",\"8bd998d799\",\"b3a7355a4d\",\"8057712b79\",\"41ccb835d8\",\"c25535d074\",\"fb6299714a\",\"ee6dcc849e\",\"7374a409c3\",\"9f2135e81e\",\"02afbc2225\",\"906c09927c\",\"c9517929fa\",\"6b00726cb0\",\"bbc781c5d9\",\"8bd998d799\",\"b3a7355a4d\",\"8057712b79\",\"41ccb835d8\",\"c25535d074\",\"57808bbf4e\",\"6ae0ebbf29\",\"e9dd5ff14b\",\"b0f466ee07\",\"09d7eba4e6\",\"b85291d078\",\"2f1340ac1c\",\"57808bbf4e\",\"6ae0ebbf29\",\"e9dd5ff14b\",\"b0f466ee07\",\"09d7eba4e6\",\"b85291d078\",\"2f1340ac1c\",\"613410d82b\",\"38e2316909\",\"c7b75a169c\",\"05c402ea1f\",\"5102a75162\",\"a756d9aaa0\",\"963d4bd50d\",\"31386dd4a8\",\"35f1c908ea\",\"60457aa451\",\"ccb94a5f54\",\"5d6d6eb027\",\"b6daab6a42\",\"d7b6a976aa\",\"d8ea832a34\",\"cc822998e0\",\"04ee6b745a\",\"12acbceede\",\"0b7e1c4992\",\"b1b50d529b\",\"2c4d7f0781\",\"f5113d41ad\",\"18375c20e9\",\"0b86dd7cdd\",\"389b131b2d\",\"741f8d589f\",\"9644e058fb\",\"e1e2638afc\",\"6634e0cbf7\",\"8d0d8230a3\",\"32aea78c9c\",\"db73976716\",\"ba397b6643\",\"6f1363f822\",\"a70ac7be18\",\"329681b80e\",\"9d9574cbc6\",\"f22a4649b8\",\"6dbba33fee\",\"c84204b36c\",\"b2978094ea\",\"b0ae3d39ee\",\"945149071c\",\"b44eee8ff6\",\"18502e0f2e\",\"252680a0f8\",\"8139396929\",\"daa829106f\",\"6a6332ef69\",\"945149071c\",\"b44eee8ff6\",\"18502e0f2e\",\"252680a0f8\",\"8139396929\",\"daa829106f\",\"6a6332ef69\"]}\n```\n",
  "findings": [
    {
      "severity": "Medium",
      "title": "Contracts are vulnerable to fee-on-transfer accounting-related issues",
      "description": "The functions below transfer funds from the caller to the receiver via `transferFrom()`, but do not ensure that the actual number of tokens received is the same as the input amount to the transfer. If the token is a fee-on-transfer token, the balance after the transfer will be smaller than expected, leading to accounting issues. Even if there are checks later, related to a secondary transfer, an attacker may be able to use latent funds (e.g. mistakenly sent by another user) in order to get a free credit. One way to address this problem is to measure the balance before and after the transfer, and use the difference as the amount, rather than the stated amount.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n181:         IERC20(_asset).safeTransferFrom(msg.sender, address(this), assets);\n\n```\n",
          "loc": [
            "[181](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L181-L181)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`payable` function does not transfer Eth",
      "description": "Funds sent along with the call to this function will be lost. Unless this is a gas-saving optimization, the `payable` keyword should be removed",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n77       constructor(\n78           address _logic,\n79           address initialAuthority,\n80           bytes memory _data\n81:      ) payable ERC1967Proxy(_logic, _data) {\n\n```\n",
          "loc": [
            "[77](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L77-L81)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Code does not follow the best practice of check-effects-interaction",
      "description": "Code should follow the best-practice of [check-effects-interaction](https://blockchain-academy.hs-mittweida.de/courses/solidity-coding-beginners-to-intermediate/lessons/solidity-11-coding-patterns/topic/checks-effects-interactions/), where state variables are updated before any external calls are made. Doing so prevents a large class of reentrancy bugs.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n131:         _asset = IERC4626(_ibt).asset();\n\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n132:         duration = _duration;\n\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n133:         expiry = _duration + block.timestamp;\n\n/// @audit symbol() called prior to this assignment in initialize(), via: initialize()\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n141:         _ibtDecimals = IERC4626(_ibt).decimals();\n\n/// @audit decimals() called prior to this assignment in initialize(), via: initialize()\n/// @audit symbol() called prior to this assignment in initialize(), via: initialize()\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n142:         _assetDecimals = PrincipalTokenUtil._tryGetTokenDecimals(_asset);\n\n/// @audit decimals() called prior to this assignment in initialize(), via: initialize()\n/// @audit symbol() called prior to this assignment in initialize(), via: initialize()\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n150:         ibt = _ibt;\n\n/// @audit decimals() called prior to this assignment in initialize(), via: initialize()\n/// @audit symbol() called prior to this assignment in initialize(), via: initialize()\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n151:         ibtUnit = 10 ** _ibtDecimals;\n\n/// @audit decimals() called prior to this assignment in initialize(), via: initialize()\n/// @audit symbol() called prior to this assignment in initialize(), via: initialize()\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n152:         ibtRate = IERC4626(ibt).previewRedeem(ibtUnit).toRay(_assetDecimals);\n\n/// @audit decimals() called prior to this assignment in initialize(), via: initialize()\n/// @audit symbol() called prior to this assignment in initialize(), via: initialize()\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n153:         ptRate = RayMath.RAY_UNIT;\n\n/// @audit decimals() called prior to this assignment in initialize(), via: initialize()\n/// @audit symbol() called prior to this assignment in initialize(), via: initialize()\n/// @audit asset() called prior to this assignment in initialize(), via: initialize()\n/// @audit totalAssets() called prior to this assignment in initialize(), via: initialize()\n154          yt = _deployYT(\n155              NamingUtil.genYTName(_ibtSymbol, expiry),\n156              NamingUtil.genYTSymbol(_ibtSymbol, expiry)\n157:         );\n\n/// @audit getFeeCollector() called prior to this assignment in claimFees(), via: claimFees()\n334:         unclaimedFeesInIBT = 0;\n\n/// @audit totalAssets() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n345:             ibtRateOfUser[_user] = _ibtRate;\n\n/// @audit totalAssets() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n349:             ptRateOfUser[_user] = _ptRate;\n\n/// @audit decimals() called prior to this assignment in updateYield(), via: updateYield(), _computeYield()\n/// @audit totalAssets() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n363:             yieldOfUserInIBT[_user] = updatedUserYieldInIBT;\n\n/// @audit decimals() called prior to this assignment in _claimYield(), via: _claimYield(), updateYield(), _computeYield()\n/// @audit totalAssets() called prior to this assignment in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this assignment in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n853:             yieldOfUserInIBT[msg.sender] = 0;\n\n/// @audit totalAssets() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n888:                 ibtRate = _ibtRate;\n\n/// @audit totalAssets() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this assignment in _updatePTandIBTRates(), via: _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n891:                 ptRate = _ptRate;\n\n```\n",
          "loc": [
            "[142](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L142-L142)",
            "[142](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L142-L142)",
            "[142](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L142-L142)",
            "[142](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L142-L142)",
            "[150](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L150-L150)",
            "[132](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L132-L132)",
            "[131](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L131-L131)",
            "[132](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L132-L132)",
            "[150](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L150-L150)",
            "[150](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L150-L150)",
            "[150](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L150-L150)",
            "[151](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L151-L151)",
            "[151](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L151-L151)",
            "[151](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L151-L151)",
            "[151](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L151-L151)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152-L152)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152-L152)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152-L152)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152-L152)",
            "[153](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L153-L153)",
            "[153](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L153-L153)",
            "[153](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L153-L153)",
            "[153](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L153-L153)",
            "[154](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L154-L157)",
            "[154](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L154-L157)",
            "[154](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L154-L157)",
            "[154](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L154-L157)",
            "[334](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L334-L334)",
            "[345](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L345-L345)",
            "[345](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L345-L345)",
            "[345](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L345-L345)",
            "[345](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L345-L345)",
            "[349](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L349-L349)",
            "[349](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L349-L349)",
            "[349](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L349-L349)",
            "[349](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L349-L349)",
            "[363](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L363-L363)",
            "[363](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L363-L363)",
            "[363](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L363-L363)",
            "[363](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L363-L363)",
            "[363](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L363-L363)",
            "[853](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L853-L853)",
            "[853](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L853-L853)",
            "[853](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L853-L853)",
            "[853](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L853-L853)",
            "[853](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L853-L853)",
            "[888](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L888-L888)",
            "[888](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L888-L888)",
            "[888](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L888-L888)",
            "[888](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L888-L888)",
            "[891](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L891-L891)",
            "[891](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L891-L891)",
            "[891](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L891-L891)",
            "[891](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L891-L891)",
            "[141](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L141-L141)",
            "[141](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L141-L141)",
            "[133](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L133-L133)",
            "[141](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L141-L141)",
            "[133](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L133-L133)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Consider implementing two-step procedure for updating protocol addresses",
      "description": "A copy-paste error or a typo may end up bricking protocol functionality, or sending tokens to an address with no known private key. Consider implementing a two-step procedure for updating protocol addresses, where the recipient is set as pending, and must 'accept' the assignment by making an affirmative call. A straight forward way of doing this would be to have the target contracts implement [EIP-165](https://eips.ethereum.org/EIPS/eip-165), and to have the 'set' functions ensure that the recipient is of the right interface type.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit _implementation:  _setImplementation(), upgradeTo()\n75       function _setImplementation(address newImplementation) private {\n76           if (newImplementation.code.length == 0) {\n77               revert BeaconInvalidImplementation(newImplementation);\n78           }\n79           _implementation = newImplementation;\n80           emit Upgraded(newImplementation);\n81:      }\n\n```\n",
          "loc": [
            "[75](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L75-L81)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit rewardsProxy:  setRewardsProxy()\n420      function setRewardsProxy(address _rewardsProxy) external restricted {\n421          // Note: address zero is allowed in order to disable the claim proxy\n422          emit RewardsProxyChange(rewardsProxy, _rewardsProxy);\n423          rewardsProxy = _rewardsProxy;\n424:     }\n\n```\n",
          "loc": [
            "[420](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L420-L424)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Events may be emitted out of order due to reentrancy",
      "description": "Ensure that events follow the best practice of check-effects-interaction, and are emitted before external calls",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit redeem() called prior to this emission in redeem(), via: redeem()\n/// @audit totalAssets() called prior to this emission in redeem(), via: redeem(), _convertSharesToIBTs(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeem(), via: redeem(), _convertSharesToIBTs(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit burnWithoutUpdate() called prior to this emission in redeem(), via: redeem(), _beforeRedeem()\n/// @audit balanceOf() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), _maxBurnable()\n/// @audit decimals() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), updateYield(), _computeYield()\n/// @audit totalAssets() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeem(), via: redeem(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n236:         emit Redeem(owner, receiver, shares);\n\n/// @audit transfer() called prior to this emission in redeemForIBT(), via: redeemForIBT(), safeTransfer()\n/// @audit totalAssets() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _convertSharesToIBTs(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _convertSharesToIBTs(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit burnWithoutUpdate() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem()\n/// @audit balanceOf() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), _maxBurnable()\n/// @audit decimals() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), updateYield(), _computeYield()\n/// @audit totalAssets() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in redeemForIBT(), via: redeemForIBT(), _beforeRedeem(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n261:         emit Redeem(owner, receiver, shares);\n\n/// @audit redeem() called prior to this emission in claimFees(), via: claimFees()\n/// @audit getFeeCollector() called prior to this emission in claimFees(), via: claimFees()\n336:         emit FeeClaimed(msg.sender, ibts, assets);\n\n/// @audit decimals() called prior to this emission in updateYield(), via: updateYield(), _computeYield()\n/// @audit totalAssets() called prior to this emission in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in updateYield(), via: updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this emission in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in updateYield(), via: updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n364:             emit YieldUpdated(_user, updatedUserYieldInIBT);\n\n/// @audit totalAssets() called prior to this emission in storeRatesAtExpiry(), via: storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in storeRatesAtExpiry(), via: storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n416:         emit RatesStoredAtExpiry(ibtRate, ptRate);\n\n/// @audit getYTBeacon() called prior to this emission in _deployYT(), via: _deployYT()\n740:         emit YTDeployed(_yt);\n\n/// @audit totalAssets() called prior to this emission in _depositIBT(), via: _depositIBT(), _convertIBTsToShares(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in _depositIBT(), via: _depositIBT(), _convertIBTsToShares(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit getFeeReduction() called prior to this emission in _depositIBT(), via: _depositIBT(), _computeTokenizationFee()\n/// @audit decimals() called prior to this emission in _depositIBT(), via: _depositIBT(), updateYield(), _computeYield()\n/// @audit totalAssets() called prior to this emission in _depositIBT(), via: _depositIBT(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in _depositIBT(), via: _depositIBT(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this emission in _depositIBT(), via: _depositIBT(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in _depositIBT(), via: _depositIBT(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n767:         emit Mint(msg.sender, _ptReceiver, shares);\n\n/// @audit burnWithoutUpdate() called prior to this emission in _withdrawShares(), via: _withdrawShares()\n797:         emit Redeem(_owner, _receiver, shares);\n\n/// @audit getYieldFee() called prior to this emission in _claimYield(), via: _claimYield(), _computeYieldFee()\n/// @audit decimals() called prior to this emission in _claimYield(), via: _claimYield(), updateYield(), _computeYield()\n/// @audit totalAssets() called prior to this emission in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), _getPTandIBTRates(), _getCurrentPTandIBTRates()\n/// @audit totalAssets() called prior to this emission in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n/// @audit totalSupply() called prior to this emission in _claimYield(), via: _claimYield(), updateYield(), _updatePTandIBTRates(), storeRatesAtExpiry(), _getCurrentPTandIBTRates()\n857:             emit YieldClaimed(msg.sender, msg.sender, yieldInIBT);\n\n```\n",
          "loc": [
            "[416](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L416-L416)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[336](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L336-L336)",
            "[336](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L336-L336)",
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L364)",
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L364)",
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L364)",
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L364)",
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L364)",
            "[416](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L416-L416)",
            "[740](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L740-L740)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)",
            "[797](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L797-L797)",
            "[857](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L857-L857)",
            "[857](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L857-L857)",
            "[857](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L857-L857)",
            "[857](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L857-L857)",
            "[857](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L857-L857)",
            "[857](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L857-L857)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "File allows a version of solidity that is susceptible to `.selector`-related optimizer bug",
      "description": "In solidity versions prior to 0.8.21, there is a legacy code generation [bug](https://soliditylang.org/blog/2023/07/19/missing-side-effects-on-selector-access-bug/) where if `foo().selector` is called, `foo()` doesn't actually get evaluated. It is listed as low-severity, because projects usually use the contract name rather than a function call to look up the selector. I've flagged all files using `.selector` where the version is vulnerable.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n4:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[4](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L4-L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n3:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[3](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L3-L3)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Functions calling tokens with transfer hooks are missing reentrancy guards",
      "description": "Even if the function follows the best practice of check-effects-interaction, not using a reentrancy guard when there may be transfer hooks will open the users of this protocol up to [read-only reentrancies](https://chainsecurity.com/curve-lp-oracle-manipulation-post-mortem/) with no way to protect against it, except by block-listing the whole protocol.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit safeTransferFrom() :  deposit()\n176      function deposit(\n177          uint256 assets,\n178          address ptReceiver,\n179          address ytReceiver\n180:     ) public override returns (uint256 shares) {\n\n```\n",
          "loc": [
            "[176](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L176-L180)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Initialization can be front-run",
      "description": "The `initialize()` functions below are not called by another contract atomically after the contract is deployed, so it's possible for a malicious user to call `initialize()` which, if it's noticed in time, would require the project to re-deploy the contract in order to properly initialize. Consider creating a factory contract, which will `new` and `initialize()` each contract atomically.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n120      function initialize(\n121          address _ibt,\n122          uint256 _duration,\n123          address _initialAuthority\n124:     ) external initializer {\n\n```\n",
          "loc": [
            "[120](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L120-L124)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n31       function initialize(\n32           string calldata _name,\n33           string calldata _symbol,\n34           address _pt\n35:      ) external initializer {\n\n```\n",
          "loc": [
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L31-L35)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0x0)` in the initializer",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit _pt\n31       function initialize(\n32           string calldata _name,\n33           string calldata _symbol,\n34           address _pt\n35:      ) external initializer {\n\n```\n",
          "loc": [
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L34-L34)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0x0)` when updating `address` state variables",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit setRewardsProxy(_rewardsProxy)\n423:         rewardsProxy = _rewardsProxy;\n\n```\n",
          "loc": [
            "[423](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L420-L420)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit initialize(_pt)\n38:          pt = _pt;\n\n```\n",
          "loc": [
            "[38](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L34-L34)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing contract-existence checks before low-level calls",
      "description": "Low-level calls return success if there is no code present at the specified address. In addition to the zero-address checks, add a check to verify that `<address>.code.length > 0`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n394      function claimRewards(bytes memory _data) external restricted {\n395          if (rewardsProxy == address(0)) {\n396              revert NoRewardsProxySet();\n397          }\n398          _data = abi.encodeWithSelector(IRewardsProxy(rewardsProxy).claimRewards.selector, _data);\n399:         (bool success, ) = rewardsProxy.delegatecall(_data);\n\n```\n",
          "loc": [
            "[394](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L394-L399)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Solidity version 0.8.20 may not work on other chains due to `PUSH0`",
      "description": "The compiler for Solidity 0.8.20 switches the default target EVM version to [Shanghai](https://blog.soliditylang.org/2023/05/10/solidity-0.8.20-release-announcement/#important-note), which includes the new `PUSH0` op code. This op code may not yet be implemented on all L2s, so deployment on these chains will fail. To work around this issue, use an earlier [EVM](https://docs.soliditylang.org/en/v0.8.20/using-the-compiler.html?ref=zaryabs.com#setting-the-evm-version-to-target) [version](https://book.getfoundry.sh/reference/config/solidity-compiler#evm_version). While the project itself may or may not compile with 0.8.20, other projects with which it integrates, or which extend this project may, and those projects will have problems deploying these contracts/libraries.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n3:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[3](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L3-L3)"
          ]
        },
        {
          "content": "```solidity\nFile: src/libraries/RayMath.sol\n\n2:   pragma solidity =0.8.20;\n\n```\n",
          "loc": [
            "[2](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L2-L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n5:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[5](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L5-L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n5:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[5](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L5-L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n4:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[4](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L4-L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n3:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[3](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L3-L3)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n3:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[3](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L3-L3)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "State variables not capped at reasonable values",
      "description": "Consider adding minimum/maximum value checks to ensure that the state variables below can never be used to excessively harm users, including via griefing",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit _duration\n132:         duration = _duration;\n\n```\n",
          "loc": [
            "[132](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L122-L122)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "The `owner` is a single point of failure and a centralization risk",
      "description": "Having a single EOA as the only owner of contracts is a large centralization risk and a single point of failure. A single private key may be taken in a hack, or the sole holder of the key may become unable to retrieve the key when necessary, or the single owner can become malicious and perform a rug-pull. Consider changing to a multi-signature setup, and or having a role-based authorization model.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n385:     function beforeYtTransfer(address _from, address _to) external override {\n\n```\n",
          "loc": [
            "[385](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L385-L385)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n42:      function burnWithoutUpdate(address from, uint256 amount) external override {\n\n50:      function mint(address to, uint256 amount) external override {\n\n```\n",
          "loc": [
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L42-L42)",
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L50-L50)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Unsafe downcast",
      "description": "When a type is downcast to a smaller type, the higher order bits are truncated, effectively applying a modulo to the original value. Without any other checks, this wrapping will lead to unexpected behavior and bugs",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit uint256 returnedDecimals -> uint8\n144:                  return uint8(returnedDecimals);\n\n```\n",
          "loc": [
            "[144](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L144)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Upgradeable contract is missing a `__gap[50]` storage variable to allow for new storage variables in later versions",
      "description": "See [this](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps) link for a description of this storage variable. While some contracts may not currently be sub-classed, adding the variable now protects against forgetting to add it in the future.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Upgradeable contract uses non-upgradeable version of the OpenZeppelin libraries/contracts",
      "description": "OpenZeppelin has an [Upgradeable](https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/tree/master/contracts/utils) variants of each of its libraries and contracts, and upgradeable contracts should use those variants.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n5:   import \"openzeppelin-contracts/token/ERC20/utils/SafeERC20.sol\";\n\n9:   import \"openzeppelin-math/Math.sol\";\n\n11:  import \"openzeppelin-contracts/proxy/beacon/BeaconProxy.sol\";\n\n12:  import \"openzeppelin-contracts/interfaces/IERC3156FlashBorrower.sol\";\n\n13:  import \"openzeppelin-contracts/interfaces/IERC4626.sol\";\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L12-L12)",
            "[13](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L13-L13)",
            "[9](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L9-L9)",
            "[11](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L11-L11)",
            "[5](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L5-L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n5:   import \"openzeppelin-math/Math.sol\";\n\n7:   import \"openzeppelin-erc20-basic/extensions/IERC20Metadata.sol\";\n\n```\n",
          "loc": [
            "[5](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L5-L5)",
            "[7](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L7-L7)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`constant`s should be defined rather than using magic numbers",
      "description": "Even [assembly](https://github.com/code-423n4/2022-05-opensea-seaport/blob/9d7ce4d08bf3c3010304a0476a785c70c0e90ae7/contracts/lib/TokenTransferrer.sol#L35-L39) can benefit from using readable constants instead of hex/numeric literals",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit 32\n141:         if (success && encodedDecimals.length >= 32) {\n\n```\n",
          "loc": [
            "[141](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L141-L141)"
          ]
        },
        {
          "content": "```solidity\nFile: src/libraries/RayMath.sol\n\n/// @audit 27\n21:          uint256 decimals_ratio = 10 ** (27 - _decimals);\n\n/// @audit 27\n40:          uint256 decimals_ratio = 10 ** (27 - _decimals);\n\n/// @audit 27\n58:          uint256 decimals_ratio = 10 ** (27 - _decimals);\n\n```\n",
          "loc": [
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L58-L58)",
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L40-L40)",
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L21-L21)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n/// @audit 4\n121:         (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n\n```\n",
          "loc": [
            "[121](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L121-L121)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`constant`s/`immutable`s redefined elsewhere",
      "description": "Consider defining each of these in only one contract so that values cannot become out of sync when only one location is updated (i.e. having `ContA.X`,`ContB.Y` is fine since they're different constant names in different files, but `ContA.X`, `ContB.X` is not since it's the same constant defined in multiple files with the same value). Even things like `decimals` and `VERSION` can employ file-level constants such as `PREFERRED_DECIMALS = 18` and `INITIAL_VERSION = \"1.0.0\"`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit Seen in Registry\n19:      uint256 private constant FEE_DIVISOR = 1e18; // equivalent to 100% fees\n\n```\n",
          "loc": [
            "[19](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L19-L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n/// @audit Seen in ProxyAdmin\n23:      string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n```\n",
          "loc": [
            "[23](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L23-L23)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit Seen in Router\n42:      bytes32 private constant ON_FLASH_LOAN = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n```\n",
          "loc": [
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L42-L42)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`else`-block not required",
      "description": "One level of nesting can be removed by not having an `else` block when the `if`-block returns, and `if (foo) { return 1; } else { return 2; }` becomes `if (foo) { return 1; } return 2;`. A following `else if` can become `if`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n103              if (msg.sig != IAMTransparentUpgradeableProxy.upgradeToAndCall.selector) {\n104                  revert ProxyDeniedAdminAccess();\n105              } else {\n106:                 _dispatchUpgradeToAndCall();\n\n```\n",
          "loc": [
            "[103](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L103-L110)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n850          if (yieldInIBT == 0) {\n851              return 0;\n852          } else {\n853:             yieldOfUserInIBT[msg.sender] = 0;\n\n```\n",
          "loc": [
            "[850](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L850-L861)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`if`-statement can be converted to a ternary",
      "description": "The code can be made more compact while also increasing readability by converting the following `if`-statements to ternaries (e.g. `foo += (x > y) ? a : b`)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n922          if (ratesAtExpiryStored) {\n923              return (ptRate, ibtRate);\n924          } else {\n925              return _getCurrentPTandIBTRates(roundUpPTRate);\n926:         }\n\n```\n",
          "loc": [
            "[922](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L922-L926)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`public` functions not called by the contract should be declared `external` instead",
      "description": "Contracts [are allowed](https://docs.soliditylang.org/en/latest/contracts.html#function-overriding) to override their parents' functions and change the visibility from `external` to `public`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n46:       function implementation() public view virtual returns (address) {\n\n63:       function upgradeTo(address newImplementation) public virtual restricted {\n\n```\n",
          "loc": [
            "[46](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L46)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n40        function upgradeAndCall(\n41            IAMTransparentUpgradeableProxy proxy,\n42            address implementation,\n43            bytes memory data\n44:       ) public payable virtual restricted {\n\n```\n",
          "loc": [
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L40-L44)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n369:      function claimYield(address _receiver) public override returns (uint256 yieldInAsset) {\n\n377:      function claimYieldInIBT(address _receiver) public override returns (uint256 yieldInIBT) {\n\n430:      function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n466:      function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n\n471:      function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n483:      function maxRedeem(address owner) public view override returns (uint256) {\n\n498:      function totalAssets() public view override returns (uint256) {\n\n503:      function decimals() public view override(IERC20Metadata, ERC20Upgradeable) returns (uint8) {\n\n602:      function getTokenizationFee() public view override returns (uint256) {\n\n```\n",
          "loc": [
            "[430](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L430)",
            "[369](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L369)",
            "[377](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L377)",
            "[466](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L466)",
            "[471](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L471)",
            "[483](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L483)",
            "[498](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L498)",
            "[503](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L503)",
            "[602](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L602)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n58:       function burn(uint256 amount) public override {\n\n71        function transfer(\n72            address to,\n73            uint256 amount\n74:       ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n95        function transferFrom(\n96            address from,\n97            address to,\n98            uint256 amount\n99:       ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n105       function decimals()\n106           public\n107           view\n108           virtual\n109           override(IYieldToken, ERC20Upgradeable)\n110:          returns (uint8)\n\n116:      function getPT() public view virtual override returns (address) {\n\n128:      function actualBalanceOf(address account) public view override returns (uint256) {\n\n```\n",
          "loc": [
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L71-L74)",
            "[95](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L95-L99)",
            "[105](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L105-L110)",
            "[116](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L116)",
            "[128](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L128)",
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L58)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Add inline comments for unnamed variables",
      "description": "`function foo(address x, address)` -> `function foo(address x, address /* y */)`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n16         * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n17         * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n18         * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n19:        * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n\n```\n",
          "loc": [
            "[16](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L16-L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n17    interface IAMTransparentUpgradeableProxy is IERC1967 {\n18:       function upgradeToAndCall(address, bytes calldata) external payable;\n\n```\n",
          "loc": [
            "[17](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L17-L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n440       /** @dev See {IPrincipalToken-maxDeposit}. */\n441:      function maxDeposit(address) external pure override returns (uint256) {\n\n```\n",
          "loc": [
            "[440](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L440-L441)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Assembly blocks should have extensive comments",
      "description": "Assembly blocks take a lot more time to audit than normal Solidity code, and often have gotchas and side-effects that the Solidity versions of the same code do not. Consider adding more comments explaining what is being done in every step of the assembly code, and describe why assembly is being used instead of Solidity.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/RayMath.sol\n\n22            assembly {\n23                b := div(_a, decimals_ratio)\n24:           }\n\n41            assembly {\n42                b := div(_a, decimals_ratio)\n43    \n44                if and(eq(_roundUp, 1), gt(mod(_a, decimals_ratio), 0)) {\n45                    b := add(b, 1)\n46                }\n47:           }\n\n60            assembly {\n61                b := mul(_a, decimals_ratio)\n62    \n63                if iszero(eq(div(b, decimals_ratio), _a)) {\n64                    revert(0, 0)\n65                }\n66:           }\n\n```\n",
          "loc": [
            "[22](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L22-L24)",
            "[41](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L41-L47)",
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L60-L66)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Avoid mutating `function`/`modifier` parameters of non-utility functions",
      "description": "Use a local variable instead",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n398:         _data = abi.encodeWithSelector(IRewardsProxy(rewardsProxy).claimRewards.selector, _data);\n\n```\n",
          "loc": [
            "[398](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L394-L394)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Common functions should be refactored to a common base contract",
      "description": "The functions below have the same implementation as is seen in other files. The functions should be refactored into functions of a common base contract",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n46       function implementation() public view virtual returns (address) {\n47           return _implementation;\n48:      }\n\n75       function _setImplementation(address newImplementation) private {\n76           if (newImplementation.code.length == 0) {\n77               revert BeaconInvalidImplementation(newImplementation);\n78           }\n79           _implementation = newImplementation;\n80           emit Upgraded(newImplementation);\n81:      }\n\n```\n",
          "loc": [
            "[46](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L46-L48)",
            "[75](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L75-L81)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n94       function _proxyAdmin() internal virtual returns (address) {\n95           return _admin;\n96:      }\n\n120      function _dispatchUpgradeToAndCall() private {\n121          (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n122          ERC1967Utils.upgradeToAndCall(newImplementation, data);\n123:     }\n\n```\n",
          "loc": [
            "[94](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L94-L96)",
            "[120](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L120-L123)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding a block/deny-list",
      "description": "Doing so will significantly increase centralization, but will help to prevent hackers from using stolen tokens",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit ERC20PermitUpgradeable handles tokens\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit IERC20 handles tokens\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding emergency-stop functionality",
      "description": "Adding a way to quickly halt protocol functionality in an emergency, rather than having to pause individual contracts one-by-one, will make in-progress hack mitigation faster and much less stressful.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding formal verification proofs",
      "description": "Consider using formal verification to mathematically prove that your code does what is intended, and does not have any edge cases with unexpected behavior. The solidity compiler itself has this functionality [built in](https://docs.soliditylang.org/en/latest/smtchecker.html#smtchecker-and-formal-verification)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding validation of user inputs",
      "description": "There are no validations done on the arguments below. Consider that the Solidity [documentation](https://docs.soliditylang.org/en/latest/control-structures.html#panic-via-assert-and-error-via-require) states that `Properly functioning code should never create a Panic, not even on invalid external input. If this happens, then there is a bug in your contract which you should fix`. This means that there should be explicit checks for expected ranges of inputs. Underflows/overflows result in panics should not be used as range checks, and allowing funds to be sent to  `0x0`, which is the default value of address variables and has many gotchas, should be avoided.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit receiver\n171      function deposit(uint256 assets, address receiver) external override returns (uint256 shares) {\n172          shares = deposit(assets, receiver, receiver);\n173:     }\n\n/// @audit ptReceiver\n/// @audit ytReceiver\n176      function deposit(\n177          uint256 assets,\n178          address ptReceiver,\n179          address ytReceiver\n180      ) public override returns (uint256 shares) {\n181          IERC20(_asset).safeTransferFrom(msg.sender, address(this), assets);\n182          IERC20(_asset).safeIncreaseAllowance(ibt, assets);\n183          uint256 ibts = IERC4626(ibt).deposit(assets, address(this));\n184          shares = _depositIBT(ibts, ptReceiver, ytReceiver);\n185:     }\n\n/// @audit ptReceiver\n/// @audit ytReceiver\n188      function deposit(\n189          uint256 assets,\n190          address ptReceiver,\n191          address ytReceiver,\n192          uint256 minShares\n193      ) external override returns (uint256 shares) {\n194          shares = deposit(assets, ptReceiver, ytReceiver);\n195          if (shares < minShares) {\n196              revert ERC5143SlippageProtectionFailed();\n197          }\n198:     }\n\n/// @audit receiver\n201      function depositIBT(uint256 ibts, address receiver) external override returns (uint256 shares) {\n202          shares = depositIBT(ibts, receiver, receiver);\n203:     }\n\n/// @audit ptReceiver\n/// @audit ytReceiver\n206      function depositIBT(\n207          uint256 ibts,\n208          address ptReceiver,\n209          address ytReceiver\n210      ) public override returns (uint256 shares) {\n211          IERC20(ibt).safeTransferFrom(msg.sender, address(this), ibts);\n212          shares = _depositIBT(ibts, ptReceiver, ytReceiver);\n213:     }\n\n/// @audit ptReceiver\n/// @audit ytReceiver\n216      function depositIBT(\n217          uint256 ibts,\n218          address ptReceiver,\n219          address ytReceiver,\n220          uint256 minShares\n221      ) external override returns (uint256 shares) {\n222          shares = depositIBT(ibts, ptReceiver, ytReceiver);\n223          if (shares < minShares) {\n224              revert ERC5143SlippageProtectionFailed();\n225          }\n226:     }\n\n/// @audit receiver\n/// @audit owner\n229      function redeem(\n230          uint256 shares,\n231          address receiver,\n232          address owner\n233      ) public override returns (uint256 assets) {\n234          _beforeRedeem(shares, owner);\n235          assets = IERC4626(ibt).redeem(_convertSharesToIBTs(shares, false), receiver, address(this));\n236          emit Redeem(owner, receiver, shares);\n237:     }\n\n/// @audit receiver\n/// @audit owner\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243          address owner,\n244          uint256 minAssets\n245      ) external override returns (uint256 assets) {\n246          assets = redeem(shares, receiver, owner);\n247          if (assets < minAssets) {\n248              revert ERC5143SlippageProtectionFailed();\n249          }\n250:     }\n\n/// @audit receiver\n/// @audit owner\n253      function redeemForIBT(\n254          uint256 shares,\n255          address receiver,\n256          address owner\n257      ) public override returns (uint256 ibts) {\n258          _beforeRedeem(shares, owner);\n259          ibts = _convertSharesToIBTs(shares, false);\n260          IERC20(ibt).safeTransfer(receiver, ibts);\n261          emit Redeem(owner, receiver, shares);\n262:     }\n\n/// @audit receiver\n/// @audit owner\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268          address owner,\n269          uint256 minIbts\n270      ) external override returns (uint256 ibts) {\n271          ibts = redeemForIBT(shares, receiver, owner);\n272          if (ibts < minIbts) {\n273              revert ERC5143SlippageProtectionFailed();\n274          }\n275:     }\n\n/// @audit receiver\n/// @audit owner\n278      function withdraw(\n279          uint256 assets,\n280          address receiver,\n281          address owner\n282      ) public override returns (uint256 shares) {\n283          _beforeWithdraw(assets, owner);\n284          (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n285          uint256 ibts = IERC4626(ibt).withdraw(assets, receiver, address(this));\n286          shares = _withdrawShares(ibts, receiver, owner, _ptRate, _ibtRate);\n287:     }\n\n/// @audit receiver\n/// @audit owner\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293          address owner,\n294          uint256 maxShares\n295      ) external override returns (uint256 shares) {\n296          shares = withdraw(assets, receiver, owner);\n297          if (shares > maxShares) {\n298              revert ERC5143SlippageProtectionFailed();\n299          }\n300:     }\n\n/// @audit receiver\n/// @audit owner\n303      function withdrawIBT(\n304          uint256 ibts,\n305          address receiver,\n306          address owner\n307      ) public override returns (uint256 shares) {\n308          _beforeWithdraw(IERC4626(ibt).previewRedeem(ibts), owner);\n309          (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n310          shares = _withdrawShares(ibts, receiver, owner, _ptRate, _ibtRate);\n311          // send IBTs from this contract to receiver\n312          IERC20(ibt).safeTransfer(receiver, ibts);\n313:     }\n\n/// @audit receiver\n/// @audit owner\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319          address owner,\n320          uint256 maxShares\n321      ) external override returns (uint256 shares) {\n322          shares = withdrawIBT(ibts, receiver, owner);\n323          if (shares > maxShares) {\n324              revert ERC5143SlippageProtectionFailed();\n325          }\n326:     }\n\n/// @audit _user\n340      function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n341          (uint256 _ptRate, uint256 _ibtRate) = _updatePTandIBTRates();\n342  \n343          uint256 _oldIBTRateUser = ibtRateOfUser[_user];\n344          if (_oldIBTRateUser != _ibtRate) {\n345              ibtRateOfUser[_user] = _ibtRate;\n346          }\n347          uint256 _oldPTRateUser = ptRateOfUser[_user];\n348          if (_oldPTRateUser != _ptRate) {\n349              ptRateOfUser[_user] = _ptRate;\n350          }\n351  \n352          // Check for skipping yield update when the user deposits for the first time or rates decreased to 0.\n353          if (_oldIBTRateUser != 0) {\n354              updatedUserYieldInIBT = PrincipalTokenUtil._computeYield(\n355                  _user,\n356                  yieldOfUserInIBT[_user],\n357                  _oldIBTRateUser,\n358                  _ibtRate,\n359                  _oldPTRateUser,\n360                  _ptRate,\n361                  yt\n362              );\n363              yieldOfUserInIBT[_user] = updatedUserYieldInIBT;\n364              emit YieldUpdated(_user, updatedUserYieldInIBT);\n365          }\n366:     }\n\n/// @audit _receiver\n369      function claimYield(address _receiver) public override returns (uint256 yieldInAsset) {\n370          uint256 yieldInIBT = _claimYield();\n371          if (yieldInIBT != 0) {\n372              yieldInAsset = IERC4626(ibt).redeem(yieldInIBT, _receiver, address(this));\n373          }\n374:     }\n\n/// @audit _receiver\n377      function claimYieldInIBT(address _receiver) public override returns (uint256 yieldInIBT) {\n378          yieldInIBT = _claimYield();\n379          if (yieldInIBT != 0) {\n380              IERC20(ibt).safeTransfer(_receiver, yieldInIBT);\n381          }\n382:     }\n\n/// @audit _to\n/// @audit _from\n385      function beforeYtTransfer(address _from, address _to) external override {\n386          if (msg.sender != yt) {\n387              revert UnauthorizedCaller();\n388          }\n389          updateYield(_from);\n390          updateYield(_to);\n391:     }\n\n/// @audit _data\n394      function claimRewards(bytes memory _data) external restricted {\n395          if (rewardsProxy == address(0)) {\n396              revert NoRewardsProxySet();\n397          }\n398          _data = abi.encodeWithSelector(IRewardsProxy(rewardsProxy).claimRewards.selector, _data);\n399          (bool success, ) = rewardsProxy.delegatecall(_data);\n400          if (!success) {\n401              revert ClaimRewardsFailed();\n402          }\n403:     }\n\n/// @audit _rewardsProxy\n420      function setRewardsProxy(address _rewardsProxy) external restricted {\n421          // Note: address zero is allowed in order to disable the claim proxy\n422          emit RewardsProxyChange(rewardsProxy, _rewardsProxy);\n423          rewardsProxy = _rewardsProxy;\n424:     }\n\n/// @audit owner\n460      function maxWithdraw(address owner) public view override whenNotPaused returns (uint256) {\n461          return convertToUnderlying(_maxBurnable(owner));\n462:     }\n\n/// @audit owner\n466      function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n467          return _convertSharesToIBTs(_maxBurnable(owner), false);\n468:     }\n\n/// @audit owner\n483      function maxRedeem(address owner) public view override returns (uint256) {\n484          return _maxBurnable(owner);\n485:     }\n\n/// @audit _user\n560      function getCurrentYieldOfUserInIBT(\n561          address _user\n562      ) external view override returns (uint256 _yieldOfUserInIBT) {\n563          (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n564          uint256 _oldIBTRate = ibtRateOfUser[_user];\n565          uint256 _oldPTRate = ptRateOfUser[_user];\n566          if (_oldIBTRate != 0) {\n567              _yieldOfUserInIBT = PrincipalTokenUtil._computeYield(\n568                  _user,\n569                  yieldOfUserInIBT[_user],\n570                  _oldIBTRate,\n571                  _ibtRate,\n572                  _oldPTRate,\n573                  _ptRate,\n574                  yt\n575              );\n576              _yieldOfUserInIBT -= PrincipalTokenUtil._computeYieldFee(_yieldOfUserInIBT, registry);\n577          }\n578:     }\n\n/// @audit _token\n583      function maxFlashLoan(address _token) public view override returns (uint256) {\n584          if (_token != ibt) {\n585              return 0;\n586          }\n587          // Entire IBT balance of the contract can be borrowed\n588          return IERC4626(ibt).balanceOf(address(this));\n589:     }\n\n```\n",
          "loc": [
            "[303](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L303-L313)",
            "[171](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L171-L173)",
            "[176](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L176-L185)",
            "[176](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L176-L185)",
            "[188](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L188-L198)",
            "[188](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L188-L198)",
            "[201](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L201-L203)",
            "[206](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L206-L213)",
            "[206](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L206-L213)",
            "[216](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L216-L226)",
            "[216](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L216-L226)",
            "[229](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L229-L237)",
            "[229](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L229-L237)",
            "[240](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L240-L250)",
            "[240](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L240-L250)",
            "[253](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L253-L262)",
            "[253](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L253-L262)",
            "[265](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L265-L275)",
            "[265](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L265-L275)",
            "[278](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L278-L287)",
            "[278](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L278-L287)",
            "[290](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L290-L300)",
            "[290](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L290-L300)",
            "[303](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L303-L313)",
            "[316](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L316-L326)",
            "[316](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L316-L326)",
            "[340](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L340-L366)",
            "[369](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L369-L374)",
            "[377](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L377-L382)",
            "[385](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L385-L391)",
            "[385](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L385-L391)",
            "[394](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L394-L403)",
            "[420](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L420-L424)",
            "[460](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L460-L462)",
            "[466](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L466-L468)",
            "[483](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L483-L485)",
            "[560](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L560-L578)",
            "[583](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L583-L589)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit from\n42       function burnWithoutUpdate(address from, uint256 amount) external override {\n43           if (msg.sender != pt) {\n44               revert CallerIsNotPtContract();\n45           }\n46           _burn(from, amount);\n47:      }\n\n/// @audit to\n50       function mint(address to, uint256 amount) external override {\n51           if (msg.sender != pt) {\n52               revert CallerIsNotPtContract();\n53           }\n54           _mint(to, amount);\n55:      }\n\n/// @audit to\n71       function transfer(\n72           address to,\n73           uint256 amount\n74       ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n75           IPrincipalToken(pt).beforeYtTransfer(msg.sender, to);\n76           return super.transfer(to, amount);\n77:      }\n\n/// @audit from\n/// @audit to\n95       function transferFrom(\n96           address from,\n97           address to,\n98           uint256 amount\n99       ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n100          IPrincipalToken(pt).beforeYtTransfer(from, to);\n101          return super.transferFrom(from, to, amount);\n102:     }\n\n/// @audit account\n121      function balanceOf(\n122          address account\n123      ) public view override(IYieldToken, ERC20Upgradeable) returns (uint256) {\n124          return (block.timestamp < IPrincipalToken(pt).maturity()) ? super.balanceOf(account) : 0;\n125:     }\n\n/// @audit account\n128      function actualBalanceOf(address account) public view override returns (uint256) {\n129          return super.balanceOf(account);\n130:     }\n\n```\n",
          "loc": [
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L50-L55)",
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L71-L77)",
            "[95](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L95-L102)",
            "[95](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L95-L102)",
            "[121](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L121-L125)",
            "[128](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L128-L130)",
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L42-L47)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider allowing users access to their funds at all times",
      "description": "Users should always have access to their funds. Consider whether withdrawal functionality really must be disabled when the contract is paused.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n446      function previewWithdraw(\n447          uint256 assets\n448      ) external view override whenNotPaused returns (uint256) {\n449          uint256 ibts = IERC4626(ibt).previewWithdraw(assets);\n450          return previewWithdrawIBT(ibts);\n451:     }\n\n454      function previewWithdrawIBT(uint256 ibts) public view override whenNotPaused returns (uint256) {\n455          return _convertIBTsToShares(ibts, true);\n456:     }\n\n460      function maxWithdraw(address owner) public view override whenNotPaused returns (uint256) {\n461          return convertToUnderlying(_maxBurnable(owner));\n462:     }\n\n466      function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n467          return _convertSharesToIBTs(_maxBurnable(owner), false);\n468:     }\n\n828      function _beforeWithdraw(uint256 _assets, address _owner) internal whenNotPaused nonReentrant {\n829          if (_owner != msg.sender) {\n830              revert UnauthorizedCaller();\n831          }\n832          if (block.timestamp >= expiry) {\n833              if (!ratesAtExpiryStored) {\n834                  storeRatesAtExpiry();\n835              }\n836          } else {\n837              updateYield(_owner);\n838          }\n839          if (maxWithdraw(_owner) < _assets) {\n840              revert UnsufficientBalance();\n841          }\n842:     }\n\n```\n",
          "loc": [
            "[454](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L454-L456)",
            "[460](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L460-L462)",
            "[466](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L466-L468)",
            "[828](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L828-L842)",
            "[446](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L446-L451)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider defining system-wide constants in a single file",
      "description": "`ContA.X = 0`, `ContB.Y = 1`, `ContC.Z = 2` -> `ContConstants.X = 0`, `ContConstants.Y = 1`, `ContConstants.Z = 2`; `ContA.X = X`, `ContB.Y = Y`, `ContC.Z = Z`,",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n23:      string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n```\n",
          "loc": [
            "[23](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L23-L23)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n40:      uint256 private constant MIN_DECIMALS = 6;\n\n41:      uint256 private constant MAX_DECIMALS = 18;\n\n```\n",
          "loc": [
            "[41](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L41-L41)",
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L40-L40)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider disallowing transfers to `address(this)`",
      "description": "Consider preventing a contract's tokens from being transferred/minted to the contract itself",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n50:      function mint(address to, uint256 amount) external override {\n\n71       function transfer(\n72           address to,\n73           uint256 amount\n74:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n95       function transferFrom(\n96           address from,\n97           address to,\n98           uint256 amount\n99:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n```\n",
          "loc": [
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L71-L74)",
            "[95](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L95-L99)",
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L50-L50)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider emitting an event at the end of the constructor",
      "description": "This will allow users to easily exactly pinpoint when and by whom a contract was constructed",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n39:      constructor(address implementation_, address initialAuthority) AccessManaged(initialAuthority) {\n\n```\n",
          "loc": [
            "[39](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L39-L39)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n28:      constructor(address initialAuthority) AccessManaged(initialAuthority) {}\n\n```\n",
          "loc": [
            "[28](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L28-L28)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n77       constructor(\n78           address _logic,\n79           address initialAuthority,\n80           bytes memory _data\n81:      ) payable ERC1967Proxy(_logic, _data) {\n\n```\n",
          "loc": [
            "[77](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L77-L81)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n102:     constructor(address _registry) {\n\n```\n",
          "loc": [
            "[102](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L102-L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n21:      constructor() {\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L21-L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider making contracts `Upgradeable`",
      "description": "This allows for bugs to be fixed in production, at the expense of _significantly_ increasing centralization.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n20:  contract AMBeacon is IBeacon, AccessManaged {\n\n```\n",
          "loc": [
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L20-L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n14   contract AMProxyAdmin is AccessManaged {\n15       /**\n16        * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n17        * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n18        * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n19        * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n20        * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n21        * during an upgrade.\n22:       */\n\n```\n",
          "loc": [
            "[14](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L14-L22)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider moving `msg.sender` checks to common `modifier`s",
      "description": "Note that these may not be specifically checks against the _address_ of `msg.sender`, but may also be checks against behavior of the address, such as ERC165 checks.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n330          if (msg.sender != IRegistry(registry).getFeeCollector()) {\n331              revert UnauthorizedCaller();\n332:         }\n\n386          if (msg.sender != yt) {\n387              revert UnauthorizedCaller();\n388:         }\n\n806          if (_owner != msg.sender) {\n807              revert UnauthorizedCaller();\n808:         }\n\n829          if (_owner != msg.sender) {\n830              revert UnauthorizedCaller();\n831:         }\n\n```\n",
          "loc": [
            "[386](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L386-L388)",
            "[806](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L806-L808)",
            "[829](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L829-L831)",
            "[330](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L330-L332)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n43           if (msg.sender != pt) {\n44               revert CallerIsNotPtContract();\n45:          }\n\n51           if (msg.sender != pt) {\n52               revert CallerIsNotPtContract();\n53:          }\n\n```\n",
          "loc": [
            "[51](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L51-L53)",
            "[43](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L43-L45)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider moving duplicated strings to constants",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n23:      string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n```\n",
          "loc": [
            "[23](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L23-L23)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n42:      bytes32 private constant ON_FLASH_LOAN = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n```\n",
          "loc": [
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L42-L42)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using `delete` rather than assigning zero/false to clear values",
      "description": "The `delete` keyword more closely matches the semantics of what is being done, and draws more attention to the changing of state, which may lead to a more thorough audit of its associated logic",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n108                      yieldInAssetRay = expectedNegativeYieldInAssetRay >\n109                          actualNegativeYieldInAssetRay\n110                          ? 0\n111:                         : actualNegativeYieldInAssetRay - expectedNegativeYieldInAssetRay;\n\n112                      yieldInAssetRay = yieldInAssetRay.fromRay(\n113                          IERC4626(IPrincipalToken(IYieldToken(_yt).getPT()).underlying()).decimals()\n114                      ) < SAFETY_BOUND\n115                          ? 0\n116:                         : yieldInAssetRay;\n\n```\n",
          "loc": [
            "[112](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L112-L116)",
            "[108](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L108-L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n334:         unclaimedFeesInIBT = 0;\n\n853:             yieldOfUserInIBT[msg.sender] = 0;\n\n904:             currentIBTRate = 0;\n\n```\n",
          "loc": [
            "[853](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L853-L853)",
            "[904](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L904-L904)",
            "[334](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L334-L334)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using a `struct` rather than having many function input parameters",
      "description": "Often times, a subset of the parameters would be more clear if they were passed as a struct",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n55       function _computeYield(\n56           address _user,\n57           uint256 _userYieldIBT,\n58           uint256 _oldIBTRate,\n59           uint256 _ibtRate,\n60           uint256 _oldPTRate,\n61           uint256 _ptRate,\n62           address _yt\n63:      ) external view returns (uint256) {\n\n```\n",
          "loc": [
            "[55](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L55-L63)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n780      function _withdrawShares(\n781          uint256 _ibts,\n782          address _receiver,\n783          address _owner,\n784          uint256 _ptRate,\n785          uint256 _ibtRate\n786:     ) internal returns (uint256 shares) {\n\n```\n",
          "loc": [
            "[780](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L780-L786)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named function arguments",
      "description": "When calling functions in external contracts with multiple arguments, consider using [named](https://docs.soliditylang.org/en/latest/control-structures.html#function-calls-with-named-parameters) function parameters, rather than positional ones.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n166:                     FEE_DIVISOR - IRegistry(_registry).getFeeReduction(_pt, msg.sender),\n\n```\n",
          "loc": [
            "[166](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L166-L166)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n183:         uint256 ibts = IERC4626(ibt).deposit(assets, address(this));\n\n235:         assets = IERC4626(ibt).redeem(_convertSharesToIBTs(shares, false), receiver, address(this));\n\n285:         uint256 ibts = IERC4626(ibt).withdraw(assets, receiver, address(this));\n\n335:         assets = IERC4626(ibt).redeem(ibts, msg.sender, address(this));\n\n372:             yieldInAsset = IERC4626(ibt).redeem(yieldInIBT, _receiver, address(this));\n\n624:         if (_receiver.onFlashLoan(msg.sender, _token, _amount, fee, _data) != ON_FLASH_LOAN)\n\n768:         IYieldToken(yt).mint(_ytReceiver, shares);\n\n794:             IYieldToken(yt).burnWithoutUpdate(_owner, shares);\n\n818:             IYieldToken(yt).burnWithoutUpdate(_owner, _shares);\n\n```\n",
          "loc": [
            "[235](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L235-L235)",
            "[285](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L285-L285)",
            "[335](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L335-L335)",
            "[372](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L372-L372)",
            "[624](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L624-L624)",
            "[768](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L768-L768)",
            "[794](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L794-L794)",
            "[818](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L818-L818)",
            "[183](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L183-L183)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named mappings",
      "description": "Consider moving to solidity version 0.8.18 or later, and using [named mappings](https://ethereum.stackexchange.com/a/145555) to make it easier to understand the purpose of each mapping",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n62:      mapping(address => uint256) private ibtRateOfUser; // stores each user's IBT rate (in Ray)\n\n63:      mapping(address => uint256) private ptRateOfUser; // stores each user's PT rate (in Ray)\n\n64:      mapping(address => uint256) private yieldOfUserInIBT; // stores each user's yield generated from YTs\n\n```\n",
          "loc": [
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L63-L63)",
            "[62](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L62-L62)",
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L64-L64)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named returns",
      "description": "Using named returns makes the code more self-documenting, makes it easier to fill out NatSpec, and in some cases can save gas. The cases below are where there currently is at most one return statement, which is ideal for named returns.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n137:     function _tryGetTokenDecimals(address _token) external view returns (uint8) {\n\n157      function _computeTokenizationFee(\n158          uint256 _amount,\n159          address _pt,\n160          address _registry\n161:     ) internal view returns (uint256) {\n\n178:     function _computeYieldFee(uint256 _amount, address _registry) internal view returns (uint256) {\n\n188      function _computeFlashloanFee(\n189          uint256 _amount,\n190          address _registry\n191:     ) internal view returns (uint256) {\n\n```\n",
          "loc": [
            "[178](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L178-L178)",
            "[157](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L157-L161)",
            "[137](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L137-L137)",
            "[188](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L188-L191)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n46:      function implementation() public view virtual returns (address) {\n\n```\n",
          "loc": [
            "[46](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L46-L46)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n94:      function _proxyAdmin() internal virtual returns (address) {\n\n```\n",
          "loc": [
            "[94](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L94-L94)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n430:     function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n436:     function previewDepositIBT(uint256 ibts) external view override returns (uint256) {\n\n441:     function maxDeposit(address) external pure override returns (uint256) {\n\n446      function previewWithdraw(\n447          uint256 assets\n448:     ) external view override whenNotPaused returns (uint256) {\n\n454:     function previewWithdrawIBT(uint256 ibts) public view override whenNotPaused returns (uint256) {\n\n460:     function maxWithdraw(address owner) public view override whenNotPaused returns (uint256) {\n\n466:     function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n\n471:     function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n476      function previewRedeemForIBT(\n477          uint256 shares\n478:     ) public view override whenNotPaused returns (uint256) {\n\n483:     function maxRedeem(address owner) public view override returns (uint256) {\n\n488:     function convertToPrincipal(uint256 underlyingAmount) external view override returns (uint256) {\n\n493:     function convertToUnderlying(uint256 principalAmount) public view override returns (uint256) {\n\n498:     function totalAssets() public view override returns (uint256) {\n\n503:     function decimals() public view override(IERC20Metadata, ERC20Upgradeable) returns (uint8) {\n\n508:     function underlying() external view override returns (address) {\n\n513:     function maturity() external view override returns (uint256) {\n\n518:     function getDuration() external view override returns (uint256) {\n\n523:     function getIBT() external view override returns (address) {\n\n528:     function getYT() external view override returns (address) {\n\n533:     function getIBTRate() external view override returns (uint256) {\n\n539:     function getPTRate() external view override returns (uint256) {\n\n545:     function getIBTUnit() external view override returns (uint256) {\n\n550:     function getUnclaimedFeesInIBT() external view override returns (uint256) {\n\n555:     function getTotalFeesInIBT() external view override returns (uint256) {\n\n594:     function flashFee(address _token, uint256 _amount) public view override returns (uint256) {\n\n602:     function getTokenizationFee() public view override returns (uint256) {\n\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612          uint256 _amount,\n613          bytes calldata _data\n614:     ) external override returns (bool) {\n\n641      function _previewDepositIBT(\n642          uint256 _ibts\n643:     ) internal view notExpired whenNotPaused returns (uint256) {\n\n901:     function _getCurrentPTandIBTRates(bool roundUpPTRate) internal view returns (uint256, uint256) {\n\n```\n",
          "loc": [
            "[609](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L609-L614)",
            "[641](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L641-L643)",
            "[901](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L901-L901)",
            "[550](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L550-L550)",
            "[430](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L430-L430)",
            "[436](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L436-L436)",
            "[441](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L441-L441)",
            "[446](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L446-L448)",
            "[454](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L454-L454)",
            "[460](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L460-L460)",
            "[466](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L466-L466)",
            "[471](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L471-L471)",
            "[476](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L476-L478)",
            "[483](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L483-L483)",
            "[488](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L488-L488)",
            "[493](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L493-L493)",
            "[498](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L498-L498)",
            "[503](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L503-L503)",
            "[508](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L508-L508)",
            "[513](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L513-L513)",
            "[518](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L518-L518)",
            "[523](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L523-L523)",
            "[528](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L528-L528)",
            "[533](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L533-L533)",
            "[539](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L539-L539)",
            "[545](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L545-L545)",
            "[555](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L555-L555)",
            "[594](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L594-L594)",
            "[602](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L602-L602)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n105      function decimals()\n106          public\n107          view\n108          virtual\n109          override(IYieldToken, ERC20Upgradeable)\n110          returns (uint8)\n111:     {\n\n116:     function getPT() public view virtual override returns (address) {\n\n121      function balanceOf(\n122          address account\n123:     ) public view override(IYieldToken, ERC20Upgradeable) returns (uint256) {\n\n128:     function actualBalanceOf(address account) public view override returns (uint256) {\n\n```\n",
          "loc": [
            "[105](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L105-L111)",
            "[121](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L121-L123)",
            "[128](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L128-L128)",
            "[116](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L116-L116)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using the `using`-`for` syntax",
      "description": "The `using`-`for` [syntax](https://docs.soliditylang.org/en/latest/contracts.html#using-for) is the more common way of calling library functions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n104                      uint256 expectedNegativeYieldInAssetRay = Math.ceilDiv(\n105                          ibtOfPTInRay * (_oldIBTRate - _ibtRate),\n106                          RayMath.RAY_UNIT\n107:                     );\n\n```\n",
          "loc": [
            "[104](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L104-L107)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n88:          ERC1967Utils.changeAdmin(_proxyAdmin());\n\n122:         ERC1967Utils.upgradeToAndCall(newImplementation, data);\n\n```\n",
          "loc": [
            "[122](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L122-L122)",
            "[88](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L88-L88)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n135:         string memory name = NamingUtil.genPTName(_ibtSymbol, expiry);\n\n136:         __ERC20_init(name, NamingUtil.genPTSymbol(_ibtSymbol, expiry));\n\n142:         _assetDecimals = PrincipalTokenUtil._tryGetTokenDecimals(_asset);\n\n155:             NamingUtil.genYTName(_ibtSymbol, expiry),\n\n156:             NamingUtil.genYTSymbol(_ibtSymbol, expiry)\n\n354              updatedUserYieldInIBT = PrincipalTokenUtil._computeYield(\n355                  _user,\n356                  yieldOfUserInIBT[_user],\n357                  _oldIBTRateUser,\n358                  _ibtRate,\n359                  _oldPTRateUser,\n360                  _ptRate,\n361                  yt\n362:             );\n\n567              _yieldOfUserInIBT = PrincipalTokenUtil._computeYield(\n568                  _user,\n569                  yieldOfUserInIBT[_user],\n570                  _oldIBTRate,\n571                  _ibtRate,\n572                  _oldPTRate,\n573                  _ptRate,\n574                  yt\n575:             );\n\n576:             _yieldOfUserInIBT -= PrincipalTokenUtil._computeYieldFee(_yieldOfUserInIBT, registry);\n\n596:         return PrincipalTokenUtil._computeFlashloanFee(_amount, registry);\n\n644          uint256 tokenizationFee = PrincipalTokenUtil._computeTokenizationFee(\n645              _ibts,\n646              address(this),\n647              registry\n648:         );\n\n756          uint256 tokenizationFee = PrincipalTokenUtil._computeTokenizationFee(\n757              _ibts,\n758              address(this),\n759              registry\n760:         );\n\n854:             uint256 yieldFeeInIBT = PrincipalTokenUtil._computeYieldFee(yieldInIBT, registry);\n\n```\n",
          "loc": [
            "[142](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L142-L142)",
            "[135](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L135-L135)",
            "[136](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L136-L136)",
            "[155](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L155-L155)",
            "[156](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L156-L156)",
            "[354](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L354-L362)",
            "[567](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L567-L575)",
            "[576](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L576-L576)",
            "[596](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L596-L596)",
            "[644](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L644-L648)",
            "[756](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L756-L760)",
            "[854](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L854-L854)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Constants in comparisons should appear on the left side",
      "description": "Doing so will prevent [typo bugs](https://www.moserware.com/2008/01/constants-on-left-are-better-but-this.html) where the first '!', '>', '<', or '=' at the beginning of the operator is missing.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n28:          if (_rate == 0) {\n\n112                      yieldInAssetRay = yieldInAssetRay.fromRay(\n113                          IERC4626(IPrincipalToken(IYieldToken(_yt).getPT()).underlying()).decimals()\n114:                     ) < SAFETY_BOUND\n\n141:         if (success && encodedDecimals.length >= 32) {\n\n```\n",
          "loc": [
            "[28](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L28-L28)",
            "[141](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L141-L141)",
            "[112](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L112-L114)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n76:          if (newImplementation.code.length == 0) {\n\n```\n",
          "loc": [
            "[76](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L76-L76)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n128:         if (IERC4626(_ibt).totalAssets() == 0) {\n\n144:             _assetDecimals < MIN_DECIMALS ||\n\n146:             _ibtDecimals > MAX_DECIMALS\n\n353:         if (_oldIBTRateUser != 0) {\n\n371:         if (yieldInIBT != 0) {\n\n379:         if (yieldInIBT != 0) {\n\n566:         if (_oldIBTRate != 0) {\n\n624:         if (_receiver.onFlashLoan(msg.sender, _token, _amount, fee, _data) != ON_FLASH_LOAN)\n\n664:         if (_ibtRate == 0) {\n\n685:         if (_ptRate == 0) {\n\n703:         if (_ptRate == 0) {\n\n763:         if (shares == 0) {\n\n787:         if (_ptRate == 0) {\n\n850:         if (yieldInIBT == 0) {\n\n903:         if (IERC4626(ibt).totalAssets() == 0 && IERC4626(ibt).totalSupply() != 0) {\n\n903:         if (IERC4626(ibt).totalAssets() == 0 && IERC4626(ibt).totalSupply() != 0) {\n\n```\n",
          "loc": [
            "[353](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L353-L353)",
            "[371](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L371-L371)",
            "[379](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L379-L379)",
            "[566](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L566-L566)",
            "[624](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L624-L624)",
            "[664](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L664-L664)",
            "[685](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L685-L685)",
            "[703](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L703-L703)",
            "[787](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L787-L787)",
            "[850](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L850-L850)",
            "[903](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L903-L903)",
            "[903](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L903-L903)",
            "[763](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L763-L763)",
            "[128](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L128-L128)",
            "[144](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L144-L144)",
            "[146](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L146-L146)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contract uses both `require()`/`revert()` as well as custom errors",
      "description": "Consider using just one method in a single file",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n60   contract AMTransparentUpgradeableProxy is ERC1967Proxy {\n61       // An immutable address for the admin to avoid unnecessary SLOADs before each call\n62       // at the expense of removing the ability to change the admin once it's set.\n63       // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n64:      // with its own ability to transfer the permissions to another account.\n\n```\n",
          "loc": [
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L60-L64)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts should have all `public`/`external` functions exposed by `interface`s",
      "description": "The `contract`s should expose an `interface` so that other projects can more easily integrate with it, without having to develop their own non-standard variants.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit  upgradeTo()\n20:  contract AMBeacon is IBeacon, AccessManaged {\n\n```\n",
          "loc": [
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L20-L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n/// @audit  UPGRADE_INTERFACE_VERSION(), upgradeAndCall()\n14   contract AMProxyAdmin is AccessManaged {\n15       /**\n16        * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n17        * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n18        * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n19        * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n20        * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n21        * during an upgrade.\n22:       */\n\n```\n",
          "loc": [
            "[14](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L14-L22)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts should have full test coverage",
      "description": "While 100% code coverage does not guarantee that there are no bugs, it often will catch easy-to-find bugs, and will ensure that there are fewer regressions when the code invariably has to be modified. Furthermore, in order to get full coverage, code authors will often have to re-organize their code so that it is more modular, so that each component can be tested separately, which reduces interdependencies between modules and layers, and makes for code that is easier to reason about and audit.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts/libraries/interfaces should each be defined in separate files",
      "description": "This helps to make tracking changes across commits easier, among other reasons. They can be combined into a single file later by importing multiple contracts, and using that file as the common import.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n/// @audit IAMTransparentUpgradeableProxy,AMTransparentUpgradeableProxy\n17:  interface IAMTransparentUpgradeableProxy is IERC1967 {\n\n/// @audit IAMTransparentUpgradeableProxy,AMTransparentUpgradeableProxy\n60   contract AMTransparentUpgradeableProxy is ERC1967Proxy {\n61       // An immutable address for the admin to avoid unnecessary SLOADs before each call\n62       // at the expense of removing the ability to change the admin once it's set.\n63       // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n64:      // with its own ability to transfer the permissions to another account.\n\n```\n",
          "loc": [
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L60-L64)",
            "[17](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L17-L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Critical system parameter changes should be behind a timelock",
      "description": "From the point of view of a user, the changing of the owner of a contract is a high risk operation that may have outcomes ranging from an attacker gaining control over the protocol, to the function no longer functioning due to a typo in the destination address. To give users plenty of warning so that they can validate any ownership or other critical parameter changes, these changes should be behind a timelock.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n63       function upgradeTo(address newImplementation) public virtual restricted {\n64           _setImplementation(newImplementation);\n65:      }\n\n```\n",
          "loc": [
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L63-L65)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n40       function upgradeAndCall(\n41           IAMTransparentUpgradeableProxy proxy,\n42           address implementation,\n43           bytes memory data\n44       ) public payable virtual restricted {\n45           proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n46:      }\n\n```\n",
          "loc": [
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L40-L46)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n340      function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n341          (uint256 _ptRate, uint256 _ibtRate) = _updatePTandIBTRates();\n342  \n343          uint256 _oldIBTRateUser = ibtRateOfUser[_user];\n344          if (_oldIBTRateUser != _ibtRate) {\n345              ibtRateOfUser[_user] = _ibtRate;\n346          }\n347          uint256 _oldPTRateUser = ptRateOfUser[_user];\n348          if (_oldPTRateUser != _ptRate) {\n349              ptRateOfUser[_user] = _ptRate;\n350          }\n351  \n352          // Check for skipping yield update when the user deposits for the first time or rates decreased to 0.\n353          if (_oldIBTRateUser != 0) {\n354              updatedUserYieldInIBT = PrincipalTokenUtil._computeYield(\n355                  _user,\n356                  yieldOfUserInIBT[_user],\n357                  _oldIBTRateUser,\n358                  _ibtRate,\n359                  _oldPTRateUser,\n360                  _ptRate,\n361                  yt\n362              );\n363              yieldOfUserInIBT[_user] = updatedUserYieldInIBT;\n364              emit YieldUpdated(_user, updatedUserYieldInIBT);\n365          }\n366:     }\n\n420      function setRewardsProxy(address _rewardsProxy) external restricted {\n421          // Note: address zero is allowed in order to disable the claim proxy\n422          emit RewardsProxyChange(rewardsProxy, _rewardsProxy);\n423          rewardsProxy = _rewardsProxy;\n424:     }\n\n```\n",
          "loc": [
            "[340](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L340-L366)",
            "[420](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L420-L424)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Custom error has no parameters showing error details",
      "description": "Consider adding parameters to the error to indicate which user or values caused the failure",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n16:      error AssetDoesNotImplementMetadata();\n\n```\n",
          "loc": [
            "[16](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L16-L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n70:      error ProxyDeniedAdminAccess();\n\n```\n",
          "loc": [
            "[70](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L70-L70)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Empty function body",
      "description": "Consider adding a comment about why the function body is empty",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n25       /**\n26        * @dev Sets the initial authority (the access manager) who control upgrader roles.\n27        */\n28:      constructor(address initialAuthority) AccessManaged(initialAuthority) {}\n\n```\n",
          "loc": [
            "[25](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L25-L28)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events are missing sender information",
      "description": "When an action is triggered based on a user's action, not being able to filter based on who triggered the action makes event processing a lot more cumbersome. Including the `msg.sender` the events of these types of action will make events much more useful to end users, especially when `msg.sender` is not `tx.origin`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n80:          emit Upgraded(newImplementation);\n\n```\n",
          "loc": [
            "[80](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L80-L80)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n236:         emit Redeem(owner, receiver, shares);\n\n261:         emit Redeem(owner, receiver, shares);\n\n364:             emit YieldUpdated(_user, updatedUserYieldInIBT);\n\n416:         emit RatesStoredAtExpiry(ibtRate, ptRate);\n\n422:         emit RewardsProxyChange(rewardsProxy, _rewardsProxy);\n\n740:         emit YTDeployed(_yt);\n\n797:         emit Redeem(_owner, _receiver, shares);\n\n```\n",
          "loc": [
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L364)",
            "[416](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L416-L416)",
            "[422](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L422-L422)",
            "[740](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L740-L740)",
            "[797](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L797-L797)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L236)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events that mark critical parameter changes should contain both the old and the new value",
      "description": "This should especially be done if the new value is not required to be different from the old value",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n80:          emit Upgraded(newImplementation);\n\n```\n",
          "loc": [
            "[80](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L80-L80)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n364:             emit YieldUpdated(_user, updatedUserYieldInIBT);\n\n```\n",
          "loc": [
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L364)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Expressions for constant values should use `immutable` rather than `constant`",
      "description": "While it does not save gas for some simple binary expressions because the compiler knows that developers often make this mistake, it's still best to use the right tool for the task at hand. There is a difference between `constant` variables and `immutable` variables, and they should each be used in their appropriate contexts. `constants` should be used for literal values written into the code, and `immutable` variables should be used for expressions, or values calculated in, or passed into the constructor.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n42:      bytes32 private constant ON_FLASH_LOAN = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n```\n",
          "loc": [
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L42-L42)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "High cyclomatic complexity",
      "description": "Consider breaking down these blocks into more manageable units, by splitting things into utility functions, by reducing nesting, and by using early returns",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n55       function _computeYield(\n56           address _user,\n57           uint256 _userYieldIBT,\n58           uint256 _oldIBTRate,\n59           uint256 _ibtRate,\n60           uint256 _oldPTRate,\n61           uint256 _ptRate,\n62           address _yt\n63       ) external view returns (uint256) {\n64           if (_oldPTRate == _ptRate && _ibtRate == _oldIBTRate) {\n65               return _userYieldIBT;\n66           }\n67           uint256 newYieldInIBTRay;\n68           uint256 userYTBalanceInRay = IYieldToken(_yt).actualBalanceOf(_user).toRay(\n69               IYieldToken(_yt).decimals()\n70           );\n71           // ibtOfPT is the yield generated by each PT corresponding to the YTs that the user holds\n72           uint256 ibtOfPTInRay = userYTBalanceInRay.mulDiv(_oldPTRate, _oldIBTRate);\n73           if (_oldPTRate == _ptRate && _ibtRate > _oldIBTRate) {\n74               // only positive yield happened\n75               newYieldInIBTRay = ibtOfPTInRay.mulDiv(_ibtRate - _oldIBTRate, _ibtRate);\n76           } else {\n77               if (_oldPTRate > _ptRate) {\n78                   // PT depeg happened\n79                   uint256 yieldInAssetRay;\n80                   if (_ibtRate >= _oldIBTRate) {\n81                       // both negative and positive yield happened, more positive\n82                       yieldInAssetRay =\n83                           _convertToAssetsWithRate(\n84                               userYTBalanceInRay,\n85                               _oldPTRate - _ptRate,\n86                               RayMath.RAY_UNIT,\n87                               Math.Rounding.Floor\n88                           ) +\n89                           _convertToAssetsWithRate(\n90                               ibtOfPTInRay,\n91                               _ibtRate - _oldIBTRate,\n92                               RayMath.RAY_UNIT,\n93                               Math.Rounding.Floor\n94                           );\n95                   } else {\n96                       // either both negative and positive yield happened, more negative\n97                       // or only negative yield happened\n98                       uint256 actualNegativeYieldInAssetRay = _convertToAssetsWithRate(\n99                           userYTBalanceInRay,\n100                          _oldPTRate - _ptRate,\n101                          RayMath.RAY_UNIT,\n102                          Math.Rounding.Floor\n103                      );\n104                      uint256 expectedNegativeYieldInAssetRay = Math.ceilDiv(\n105                          ibtOfPTInRay * (_oldIBTRate - _ibtRate),\n106                          RayMath.RAY_UNIT\n107                      );\n108                      yieldInAssetRay = expectedNegativeYieldInAssetRay >\n109                          actualNegativeYieldInAssetRay\n110                          ? 0\n111                          : actualNegativeYieldInAssetRay - expectedNegativeYieldInAssetRay;\n112                      yieldInAssetRay = yieldInAssetRay.fromRay(\n113                          IERC4626(IPrincipalToken(IYieldToken(_yt).getPT()).underlying()).decimals()\n114                      ) < SAFETY_BOUND\n115                          ? 0\n116                          : yieldInAssetRay;\n117                  }\n118                  newYieldInIBTRay = _convertToSharesWithRate(\n119                      yieldInAssetRay,\n120                      _ibtRate,\n121                      RayMath.RAY_UNIT,\n122                      Math.Rounding.Floor\n123                  );\n124              } else {\n125                  // PT rate increased or did not depeg on IBT rate decrease\n126                  revert IPrincipalToken.RateError();\n127              }\n128          }\n129          return _userYieldIBT + newYieldInIBTRay.fromRay(IERC20Metadata(_yt).decimals());\n130:     }\n\n```\n",
          "loc": [
            "[55](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L55-L130)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Import declarations should import specific identifiers, rather than the whole file",
      "description": "Using import declarations of the form `import {<identifier_name>} from \"some/file.sol\"` avoids polluting the symbol namespace making flattened files smaller, and speeds up compilation (but does not save any gas)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n5:    import \"../interfaces/IYieldToken.sol\";\n\n6:    import \"../interfaces/IPrincipalToken.sol\";\n\n7:    import \"../interfaces/IRegistry.sol\";\n\n8:    import \"openzeppelin-contracts/interfaces/IERC4626.sol\";\n\n9:    import \"openzeppelin-math/Math.sol\";\n\n10:   import \"../libraries/RayMath.sol\";\n\n```\n",
          "loc": [
            "[7](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L7)",
            "[8](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L8)",
            "[9](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L9)",
            "[6](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L6)",
            "[10](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L10)",
            "[5](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n8:    import \"openzeppelin-contracts/access/manager/AccessManaged.sol\";\n\n```\n",
          "loc": [
            "[8](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L8)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n8:    import \"openzeppelin-contracts/access/manager/AccessManaged.sol\";\n\n```\n",
          "loc": [
            "[8](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L8)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n5:    import \"openzeppelin-contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6:    import \"openzeppelin-contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\";\n\n7:    import \"openzeppelin-contracts-upgradeable/utils/PausableUpgradeable.sol\";\n\n8:    import \"openzeppelin-contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\n\n9:    import \"openzeppelin-math/Math.sol\";\n\n10:   import \"openzeppelin-erc20-extensions/ERC20PermitUpgradeable.sol\";\n\n11:   import \"openzeppelin-contracts/proxy/beacon/BeaconProxy.sol\";\n\n12:   import \"openzeppelin-contracts/interfaces/IERC3156FlashBorrower.sol\";\n\n13:   import \"openzeppelin-contracts/interfaces/IERC4626.sol\";\n\n15:   import \"../libraries/PrincipalTokenUtil.sol\";\n\n16:   import \"../libraries/NamingUtil.sol\";\n\n17:   import \"../libraries/RayMath.sol\";\n\n18:   import \"../interfaces/IRegistry.sol\";\n\n19:   import \"../interfaces/IPrincipalToken.sol\";\n\n20:   import \"../interfaces/IYieldToken.sol\";\n\n21:   import \"../interfaces/IRewardsProxy.sol\";\n\n```\n",
          "loc": [
            "[7](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L7)",
            "[5](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L5)",
            "[6](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L6)",
            "[8](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L8)",
            "[9](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L9)",
            "[10](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L10)",
            "[11](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L11)",
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L12)",
            "[13](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L13)",
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L15)",
            "[16](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L16)",
            "[17](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L17)",
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L18)",
            "[19](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L19)",
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L20)",
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L21)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n5:    import \"openzeppelin-math/Math.sol\";\n\n6:    import \"openzeppelin-erc20-extensions/ERC20PermitUpgradeable.sol\";\n\n7:    import \"openzeppelin-erc20-basic/extensions/IERC20Metadata.sol\";\n\n8:    import \"../interfaces/IPrincipalToken.sol\";\n\n9:    import \"../interfaces/IYieldToken.sol\";\n\n```\n",
          "loc": [
            "[5](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L5)",
            "[8](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L8)",
            "[9](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L9)",
            "[6](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L6)",
            "[7](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L7)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Imports could be organized more systematically",
      "description": "The contract's interface should be imported first, followed by each of the interfaces it uses, followed by all other files. The examples below do not follow this layout.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n8:   import {IERC1967} from \"openzeppelin-contracts/interfaces/IERC1967.sol\";\n\n```\n",
          "loc": [
            "[8](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L8-L8)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n12:  import \"openzeppelin-contracts/interfaces/IERC3156FlashBorrower.sol\";\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L12-L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n7:   import \"openzeppelin-erc20-basic/extensions/IERC20Metadata.sol\";\n\n```\n",
          "loc": [
            "[7](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L7-L7)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Interfaces should be defined in separate files from their usage",
      "description": "The interfaces below should be defined in separate files, so that it's easier for future projects to import them, and to avoid duplication later on if they need to be used elsewhere in the project",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n17:  interface IAMTransparentUpgradeableProxy is IERC1967 {\n\n```\n",
          "loc": [
            "[17](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L17-L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Interfaces should use floating version pragmas",
      "description": "If the file contains non-interfaces as well, the interfaces should be moved to a separate file.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n/// @audit IAMTransparentUpgradeableProxy\n4:   pragma solidity 0.8.20;\n\n```\n",
          "loc": [
            "[4](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L4-L4)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large or complicated code bases should implement invariant tests",
      "description": "Large code bases, or code with lots of inline-assembly, complicated math, or complicated interactions between multiple contracts, should implement [invariant fuzzing tests](https://medium.com/coinmonks/smart-contract-fuzzing-d9b88e0b0a05). Invariant fuzzers such as Echidna require the test writer to come up with invariants which should not be violated under any circumstances, and the fuzzer tests various inputs and function calls to ensure that the invariants always hold. Even code with 100% code coverage can still have bugs due to the order of the operations a user performs, and invariant fuzzers, with properly and extensively-written invariants, can close this testing gap significantly.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Long functions should be refactored into multiple, smaller, functions",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit 76 lines (66 in the body)\n55        function _computeYield(\n56            address _user,\n57            uint256 _userYieldIBT,\n58            uint256 _oldIBTRate,\n59            uint256 _ibtRate,\n60            uint256 _oldPTRate,\n61            uint256 _ptRate,\n62            address _yt\n63:       ) external view returns (uint256) {\n\n```\n",
          "loc": [
            "[55](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L55-L63)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing checks for `address(0x0)` in the constructor",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit implementation_\n39:      constructor(address implementation_, address initialAuthority) AccessManaged(initialAuthority) {\n\n```\n",
          "loc": [
            "[39](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L39-L39)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing checks for empty parameters in the initializer",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit _name\n/// @audit _symbol\n31       function initialize(\n32           string calldata _name,\n33           string calldata _symbol,\n34           address _pt\n35:      ) external initializer {\n\n```\n",
          "loc": [
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L32-L32)",
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L33-L33)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing checks for uint state variable assignments",
      "description": "Consider whether reasonable bounds checks for variables would be useful",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit initialize(_duration)\n132:         duration = _duration;\n\n```\n",
          "loc": [
            "[132](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L122-L122)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing checks for uint state variable initializer assignments",
      "description": "Consider whether reasonable bounds checks for variables would be useful",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit _duration\n120      function initialize(\n121          address _ibt,\n122          uint256 _duration,\n123          address _initialAuthority\n124:     ) external initializer {\n\n```\n",
          "loc": [
            "[120](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L122-L122)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing event for critical parameter change",
      "description": "Events help non-contract tools to track changes",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit totalFeesInIBT:  _updateFees(), flashLoan()\n/// @audit unclaimedFeesInIBT:  _updateFees(), flashLoan()\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612          uint256 _amount,\n613          bytes calldata _data\n614:     ) external override returns (bool) {\n\n```\n",
          "loc": [
            "[609](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L609-L614)",
            "[609](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L609-L614)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Multiple `address`/ID mappings can be combined into a single `mapping` of an `address`/ID to a `struct`, for readability",
      "description": "Well-organized data structures make code reviews easier, which may lead to fewer bugs. Consider combining related mappings into mappings to structs, so it's clear what data is related. The instances below refer to both mappings using the same key in the same function, so the mappings are related.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit combine into a `struct`: ibtRateOfUser,ptRateOfUser,yieldOfUserInIBT\n340      function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n341          (uint256 _ptRate, uint256 _ibtRate) = _updatePTandIBTRates();\n342  \n343          uint256 _oldIBTRateUser = ibtRateOfUser[_user];\n344          if (_oldIBTRateUser != _ibtRate) {\n345              ibtRateOfUser[_user] = _ibtRate;\n346          }\n347          uint256 _oldPTRateUser = ptRateOfUser[_user];\n348          if (_oldPTRateUser != _ptRate) {\n349              ptRateOfUser[_user] = _ptRate;\n350          }\n351  \n352          // Check for skipping yield update when the user deposits for the first time or rates decreased to 0.\n353          if (_oldIBTRateUser != 0) {\n354              updatedUserYieldInIBT = PrincipalTokenUtil._computeYield(\n355                  _user,\n356                  yieldOfUserInIBT[_user],\n357                  _oldIBTRateUser,\n358                  _ibtRate,\n359                  _oldPTRateUser,\n360                  _ptRate,\n361                  yt\n362              );\n363              yieldOfUserInIBT[_user] = updatedUserYieldInIBT;\n364              emit YieldUpdated(_user, updatedUserYieldInIBT);\n365          }\n366:     }\n\n/// @audit combine into a `struct`: ibtRateOfUser,ptRateOfUser,yieldOfUserInIBT\n560      function getCurrentYieldOfUserInIBT(\n561          address _user\n562      ) external view override returns (uint256 _yieldOfUserInIBT) {\n563          (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n564          uint256 _oldIBTRate = ibtRateOfUser[_user];\n565          uint256 _oldPTRate = ptRateOfUser[_user];\n566          if (_oldIBTRate != 0) {\n567              _yieldOfUserInIBT = PrincipalTokenUtil._computeYield(\n568                  _user,\n569                  yieldOfUserInIBT[_user],\n570                  _oldIBTRate,\n571                  _ibtRate,\n572                  _oldPTRate,\n573                  _ptRate,\n574                  yt\n575              );\n576              _yieldOfUserInIBT -= PrincipalTokenUtil._computeYieldFee(_yieldOfUserInIBT, registry);\n577          }\n578:     }\n\n```\n",
          "loc": [
            "[340](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L340-L366)",
            "[560](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L560-L578)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Named imports of parent contracts are missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit AccessManaged\n20:  contract AMBeacon is IBeacon, AccessManaged {\n\n```\n",
          "loc": [
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L20-L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n/// @audit AccessManaged\n14:  contract AMProxyAdmin is AccessManaged {\n\n```\n",
          "loc": [
            "[14](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L14-L14)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit ERC20PermitUpgradeable\n30:      ERC20PermitUpgradeable,\n\n/// @audit AccessManagedUpgradeable\n31:      AccessManagedUpgradeable,\n\n/// @audit ReentrancyGuardUpgradeable\n32:      ReentrancyGuardUpgradeable,\n\n/// @audit PausableUpgradeable\n33:      PausableUpgradeable,\n\n/// @audit IPrincipalToken\n34:      IPrincipalToken\n\n```\n",
          "loc": [
            "[33](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L33-L33)",
            "[34](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L34-L34)",
            "[32](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L32-L32)",
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L31-L31)",
            "[30](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L30-L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit IYieldToken\n/// @audit ERC20PermitUpgradeable\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)",
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Contract declarations should have `@author` tags",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n12:  library PrincipalTokenUtil {\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L12-L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n20:  contract AMBeacon is IBeacon, AccessManaged {\n\n```\n",
          "loc": [
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L20-L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n14   contract AMProxyAdmin is AccessManaged {\n15       /**\n16        * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n17        * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n18        * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n19        * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n20        * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n21        * during an upgrade.\n22:       */\n\n```\n",
          "loc": [
            "[14](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L14-L22)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n17:  interface IAMTransparentUpgradeableProxy is IERC1967 {\n\n60   contract AMTransparentUpgradeableProxy is ERC1967Proxy {\n61       // An immutable address for the admin to avoid unnecessary SLOADs before each call\n62       // at the expense of removing the ability to change the admin once it's set.\n63       // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n64:      // with its own ability to transfer the permissions to another account.\n\n```\n",
          "loc": [
            "[17](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L17-L17)",
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L60-L64)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Contract declarations should have `@dev` tags",
      "description": "`@dev` is used to explain extra details to developers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n12:  library PrincipalTokenUtil {\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L12-L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Contract declarations should have `@notice` tags",
      "description": "`@notice` is used to explain to end users what the contract does, and the compiler interprets `///` or `/**` comments (but not `//` or `/*`) as this tag if one wasn't explicitly provided. Note that the NatSpec comment must be _above_ the contract definition.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n12:  library PrincipalTokenUtil {\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L12-L12)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Contract declarations should have `@title` tags",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n12:  library PrincipalTokenUtil {\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L12-L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n14   contract AMProxyAdmin is AccessManaged {\n15       /**\n16        * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n17        * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n18        * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n19        * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n20        * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n21        * during an upgrade.\n22:       */\n\n```\n",
          "loc": [
            "[14](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L14-L22)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n17:  interface IAMTransparentUpgradeableProxy is IERC1967 {\n\n60   contract AMTransparentUpgradeableProxy is ERC1967Proxy {\n61       // An immutable address for the admin to avoid unnecessary SLOADs before each call\n62       // at the expense of removing the ability to change the admin once it's set.\n63       // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n64:      // with its own ability to transfer the permissions to another account.\n\n```\n",
          "loc": [
            "[17](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L17-L17)",
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L60-L64)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Contract declarations should have descriptions",
      "description": "e.g. `@dev` or `@notice`, and it must appear above the contract definition braces in order to be identified by the compiler as NatSpec",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n12:  library PrincipalTokenUtil {\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L12-L12)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Error `@param` tag is missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit Missing '@param implementation'\n21       address private _implementation;\n22   \n23       /**\n24        * @dev The `implementation` of the beacon is invalid.\n25        */\n26:      error BeaconInvalidImplementation(address implementation);\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L21-L26)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Error declarations should have `@dev` tags",
      "description": "`@dev` is used to explain extra details to developers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n16:      error AssetDoesNotImplementMetadata();\n\n```\n",
          "loc": [
            "[16](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L16-L16)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Error declarations should have `@notice` tags",
      "description": "`@notice` is used to explain to end users what the error does, and the compiler interprets `///` or `/**` comments (but not `//` or `/*`) as this tag if one wasn't explicitly provided",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n16:      error AssetDoesNotImplementMetadata();\n\n```\n",
          "loc": [
            "[16](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L16-L16)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Error declarations should have descriptions",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n16:      error AssetDoesNotImplementMetadata();\n\n```\n",
          "loc": [
            "[16](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L16-L16)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Event `@param` tag is missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit Missing '@param implementation'\n26       error BeaconInvalidImplementation(address implementation);\n27   \n28       /**\n29        * @dev Emitted when the implementation returned by the beacon is changed.\n30        */\n31:      event Upgraded(address indexed implementation);\n\n```\n",
          "loc": [
            "[26](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L26-L31)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit Missing '@param from'\n/// @audit Missing '@param to'\n/// @audit Missing '@param amount'\n63       mapping(address => uint256) private ptRateOfUser; // stores each user's PT rate (in Ray)\n64       mapping(address => uint256) private yieldOfUserInIBT; // stores each user's yield generated from YTs\n65   \n66       /* EVENTS\n67        *****************************************************************************************************************/\n68:      event Redeem(address indexed from, address indexed to, uint256 amount);\n\n/// @audit Missing '@param from'\n/// @audit Missing '@param to'\n/// @audit Missing '@param amount'\n64       mapping(address => uint256) private yieldOfUserInIBT; // stores each user's yield generated from YTs\n65   \n66       /* EVENTS\n67        *****************************************************************************************************************/\n68       event Redeem(address indexed from, address indexed to, uint256 amount);\n69:      event Mint(address indexed from, address indexed to, uint256 amount);\n\n/// @audit Missing '@param yt'\n65   \n66       /* EVENTS\n67        *****************************************************************************************************************/\n68       event Redeem(address indexed from, address indexed to, uint256 amount);\n69       event Mint(address indexed from, address indexed to, uint256 amount);\n70:      event YTDeployed(address indexed yt);\n\n/// @audit Missing '@param user'\n/// @audit Missing '@param yieldInIBT'\n66       /* EVENTS\n67        *****************************************************************************************************************/\n68       event Redeem(address indexed from, address indexed to, uint256 amount);\n69       event Mint(address indexed from, address indexed to, uint256 amount);\n70       event YTDeployed(address indexed yt);\n71:      event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n\n/// @audit Missing '@param owner'\n/// @audit Missing '@param receiver'\n/// @audit Missing '@param yieldInIBT'\n67        *****************************************************************************************************************/\n68       event Redeem(address indexed from, address indexed to, uint256 amount);\n69       event Mint(address indexed from, address indexed to, uint256 amount);\n70       event YTDeployed(address indexed yt);\n71       event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n72:      event YieldClaimed(address indexed owner, address indexed receiver, uint256 indexed yieldInIBT);\n\n/// @audit Missing '@param user'\n69       event Mint(address indexed from, address indexed to, uint256 amount);\n70       event YTDeployed(address indexed yt);\n71       event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n72       event YieldClaimed(address indexed owner, address indexed receiver, uint256 indexed yieldInIBT);\n73       event FeeClaimed(\n74:          address indexed user,\n\n/// @audit Missing '@param redeemedIbts'\n70       event YTDeployed(address indexed yt);\n71       event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n72       event YieldClaimed(address indexed owner, address indexed receiver, uint256 indexed yieldInIBT);\n73       event FeeClaimed(\n74           address indexed user,\n75:          uint256 indexed redeemedIbts,\n\n/// @audit Missing '@param receivedAssets'\n71       event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n72       event YieldClaimed(address indexed owner, address indexed receiver, uint256 indexed yieldInIBT);\n73       event FeeClaimed(\n74           address indexed user,\n75           uint256 indexed redeemedIbts,\n76:          uint256 indexed receivedAssets\n\n/// @audit Missing '@param ibtRate'\n/// @audit Missing '@param ptRate'\n73       event FeeClaimed(\n74           address indexed user,\n75           uint256 indexed redeemedIbts,\n76           uint256 indexed receivedAssets\n77       );\n78:      event RatesStoredAtExpiry(uint256 indexed ibtRate, uint256 indexed ptRate);\n\n/// @audit Missing '@param oldRewardsProxy'\n/// @audit Missing '@param newRewardsProxy'\n74           address indexed user,\n75           uint256 indexed redeemedIbts,\n76           uint256 indexed receivedAssets\n77       );\n78       event RatesStoredAtExpiry(uint256 indexed ibtRate, uint256 indexed ptRate);\n79:      event RewardsProxyChange(address indexed oldRewardsProxy, address indexed newRewardsProxy);\n\n```\n",
          "loc": [
            "[66](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L66-L71)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L63-L68)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L63-L68)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L63-L68)",
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L64-L69)",
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L64-L69)",
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L64-L69)",
            "[65](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L65-L70)",
            "[66](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L66-L71)",
            "[67](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L67-L72)",
            "[67](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L67-L72)",
            "[67](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L67-L72)",
            "[69](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L69-L74)",
            "[70](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L70-L75)",
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L71-L76)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L73-L78)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L73-L78)",
            "[74](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L74-L79)",
            "[74](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L74-L79)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Event declarations should have `@dev` tags",
      "description": "`@dev` is used to explain extra details to developers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n68:      event Redeem(address indexed from, address indexed to, uint256 amount);\n\n69:      event Mint(address indexed from, address indexed to, uint256 amount);\n\n70:      event YTDeployed(address indexed yt);\n\n71:      event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n\n72:      event YieldClaimed(address indexed owner, address indexed receiver, uint256 indexed yieldInIBT);\n\n73       event FeeClaimed(\n74           address indexed user,\n75           uint256 indexed redeemedIbts,\n76           uint256 indexed receivedAssets\n77:      );\n\n78:      event RatesStoredAtExpiry(uint256 indexed ibtRate, uint256 indexed ptRate);\n\n79:      event RewardsProxyChange(address indexed oldRewardsProxy, address indexed newRewardsProxy);\n\n```\n",
          "loc": [
            "[78](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L78-L78)",
            "[79](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L79-L79)",
            "[68](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L68-L68)",
            "[69](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L69-L69)",
            "[70](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L70-L70)",
            "[72](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L72-L72)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L73-L77)",
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L71-L71)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Event declarations should have `@notice` tags",
      "description": "`@notice` is used to explain to end users what the event does, and the compiler interprets `///` or `/**` comments (but not `//` or `/*`) as this tag if one wasn't explicitly provided",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n68:      event Redeem(address indexed from, address indexed to, uint256 amount);\n\n69:      event Mint(address indexed from, address indexed to, uint256 amount);\n\n70:      event YTDeployed(address indexed yt);\n\n71:      event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n\n72:      event YieldClaimed(address indexed owner, address indexed receiver, uint256 indexed yieldInIBT);\n\n73       event FeeClaimed(\n74           address indexed user,\n75           uint256 indexed redeemedIbts,\n76           uint256 indexed receivedAssets\n77:      );\n\n78:      event RatesStoredAtExpiry(uint256 indexed ibtRate, uint256 indexed ptRate);\n\n79:      event RewardsProxyChange(address indexed oldRewardsProxy, address indexed newRewardsProxy);\n\n```\n",
          "loc": [
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L71-L71)",
            "[72](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L72-L72)",
            "[68](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L68-L68)",
            "[69](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L69-L69)",
            "[70](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L70-L70)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L73-L77)",
            "[78](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L78-L78)",
            "[79](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L79-L79)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Event declarations should have descriptions",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n68:      event Redeem(address indexed from, address indexed to, uint256 amount);\n\n69:      event Mint(address indexed from, address indexed to, uint256 amount);\n\n70:      event YTDeployed(address indexed yt);\n\n71:      event YieldUpdated(address indexed user, uint256 indexed yieldInIBT);\n\n72:      event YieldClaimed(address indexed owner, address indexed receiver, uint256 indexed yieldInIBT);\n\n73       event FeeClaimed(\n74           address indexed user,\n75           uint256 indexed redeemedIbts,\n76           uint256 indexed receivedAssets\n77:      );\n\n78:      event RatesStoredAtExpiry(uint256 indexed ibtRate, uint256 indexed ptRate);\n\n79:      event RewardsProxyChange(address indexed oldRewardsProxy, address indexed newRewardsProxy);\n\n```\n",
          "loc": [
            "[70](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L70-L70)",
            "[68](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L68-L68)",
            "[69](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L69-L69)",
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L71-L71)",
            "[72](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L72-L72)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L73-L77)",
            "[78](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L78-L78)",
            "[79](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L79-L79)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function `@param` tag is missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit Missing '@param _assets'\n18       uint256 private constant SAFETY_BOUND = 100; // used to favour the protocol in case of approximations\n19       uint256 private constant FEE_DIVISOR = 1e18; // equivalent to 100% fees\n20   \n21       /** @dev See {IPrincipalToken-convertToSharesWithRate}. */\n22       function _convertToSharesWithRate(\n23:          uint256 _assets,\n\n/// @audit Missing '@param _rate'\n19       uint256 private constant FEE_DIVISOR = 1e18; // equivalent to 100% fees\n20   \n21       /** @dev See {IPrincipalToken-convertToSharesWithRate}. */\n22       function _convertToSharesWithRate(\n23           uint256 _assets,\n24:          uint256 _rate,\n\n/// @audit Missing '@param _ibtUnit'\n20   \n21       /** @dev See {IPrincipalToken-convertToSharesWithRate}. */\n22       function _convertToSharesWithRate(\n23           uint256 _assets,\n24           uint256 _rate,\n25:          uint256 _ibtUnit,\n\n/// @audit Missing '@param _rounding'\n21       /** @dev See {IPrincipalToken-convertToSharesWithRate}. */\n22       function _convertToSharesWithRate(\n23           uint256 _assets,\n24           uint256 _rate,\n25           uint256 _ibtUnit,\n26:          Math.Rounding _rounding\n\n/// @audit Missing '@param _shares'\n31           return _assets.mulDiv(_ibtUnit, _rate, _rounding);\n32       }\n33   \n34       /** @dev See {IPrincipalToken-convertToAssetsWithRate}. */\n35       function _convertToAssetsWithRate(\n36:          uint256 _shares,\n\n/// @audit Missing '@param _rate'\n32       }\n33   \n34       /** @dev See {IPrincipalToken-convertToAssetsWithRate}. */\n35       function _convertToAssetsWithRate(\n36           uint256 _shares,\n37:          uint256 _rate,\n\n/// @audit Missing '@param _ibtUnit'\n33   \n34       /** @dev See {IPrincipalToken-convertToAssetsWithRate}. */\n35       function _convertToAssetsWithRate(\n36           uint256 _shares,\n37           uint256 _rate,\n38:          uint256 _ibtUnit,\n\n/// @audit Missing '@param _rounding'\n34       /** @dev See {IPrincipalToken-convertToAssetsWithRate}. */\n35       function _convertToAssetsWithRate(\n36           uint256 _shares,\n37           uint256 _rate,\n38           uint256 _ibtUnit,\n39:          Math.Rounding _rounding\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L21-L26)",
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L31-L36)",
            "[32](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L32-L37)",
            "[33](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L33-L38)",
            "[34](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L34-L39)",
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L20-L25)",
            "[19](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L19-L24)",
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L18-L23)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit Missing '@param newImplementation'\n58        *   By default it is the ADMIN_ROLE of the AccessManager contract.\n59        *   Other roles can be used see setTargetFunctionRole(target, selectors, roleId)\n60        *   in AccessManager.sol (OpenZeppelin 5.0)\n61        * - `newImplementation` must be a contract.\n62        */\n63:      function upgradeTo(address newImplementation) public virtual restricted {\n\n/// @audit Missing '@param newImplementation'\n70        * Requirements:\n71        *\n72        * - `newImplementation` must be a contract.\n73        *\n74        */\n75:      function _setImplementation(address newImplementation) private {\n\n```\n",
          "loc": [
            "[70](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L70-L75)",
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L58-L63)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n/// @audit Missing '@param initialAuthority'\n23       string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n24   \n25       /**\n26        * @dev Sets the initial authority (the access manager) who control upgrader roles.\n27        */\n28:      constructor(address initialAuthority) AccessManaged(initialAuthority) {}\n\n/// @audit Missing '@param proxy'\n36        * - This contract must be the admin of `proxy`.\n37        * - If `data` is empty, `msg.value` must be zero.\n38        * - msg.sender must have a role that allows them to upgrade the proxy.\n39        */\n40       function upgradeAndCall(\n41:          IAMTransparentUpgradeableProxy proxy,\n\n/// @audit Missing '@param implementation'\n37        * - If `data` is empty, `msg.value` must be zero.\n38        * - msg.sender must have a role that allows them to upgrade the proxy.\n39        */\n40       function upgradeAndCall(\n41           IAMTransparentUpgradeableProxy proxy,\n42:          address implementation,\n\n/// @audit Missing '@param data'\n38        * - msg.sender must have a role that allows them to upgrade the proxy.\n39        */\n40       function upgradeAndCall(\n41           IAMTransparentUpgradeableProxy proxy,\n42           address implementation,\n43:          bytes memory data\n\n```\n",
          "loc": [
            "[38](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L38-L43)",
            "[36](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L36-L41)",
            "[37](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L37-L42)",
            "[23](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L23-L28)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n/// @audit Missing '@param _logic'\n73        * @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n74        * backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n75        * {ERC1967Proxy-constructor}.\n76        */\n77       constructor(\n78:          address _logic,\n\n/// @audit Missing '@param initialAuthority'\n74        * backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n75        * {ERC1967Proxy-constructor}.\n76        */\n77       constructor(\n78           address _logic,\n79:          address initialAuthority,\n\n/// @audit Missing '@param _data'\n75        * {ERC1967Proxy-constructor}.\n76        */\n77       constructor(\n78           address _logic,\n79           address initialAuthority,\n80:          bytes memory _data\n\n```\n",
          "loc": [
            "[74](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L74-L79)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L73-L78)",
            "[75](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L75-L80)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit Missing '@param _registry'\n97           _;\n98       }\n99   \n100      /* CONSTRUCTOR\n101       *****************************************************************************************************************/\n102:     constructor(address _registry) {\n\n/// @audit Missing '@param assets'\n/// @audit Missing '@param receiver'\n166      function unPause() external override restricted {\n167          _unpause();\n168      }\n169  \n170      /** @dev See {IPrincipalToken-deposit}. */\n171:     function deposit(uint256 assets, address receiver) external override returns (uint256 shares) {\n\n/// @audit Missing '@param assets'\n172          shares = deposit(assets, receiver, receiver);\n173      }\n174  \n175      /** @dev See {IPrincipalToken-deposit}. */\n176      function deposit(\n177:         uint256 assets,\n\n/// @audit Missing '@param ptReceiver'\n173      }\n174  \n175      /** @dev See {IPrincipalToken-deposit}. */\n176      function deposit(\n177          uint256 assets,\n178:         address ptReceiver,\n\n/// @audit Missing '@param ytReceiver'\n174  \n175      /** @dev See {IPrincipalToken-deposit}. */\n176      function deposit(\n177          uint256 assets,\n178          address ptReceiver,\n179:         address ytReceiver\n\n/// @audit Missing '@param assets'\n184          shares = _depositIBT(ibts, ptReceiver, ytReceiver);\n185      }\n186  \n187      /** @dev See {IPrincipalToken-deposit}. */\n188      function deposit(\n189:         uint256 assets,\n\n/// @audit Missing '@param ptReceiver'\n185      }\n186  \n187      /** @dev See {IPrincipalToken-deposit}. */\n188      function deposit(\n189          uint256 assets,\n190:         address ptReceiver,\n\n/// @audit Missing '@param ytReceiver'\n186  \n187      /** @dev See {IPrincipalToken-deposit}. */\n188      function deposit(\n189          uint256 assets,\n190          address ptReceiver,\n191:         address ytReceiver,\n\n/// @audit Missing '@param minShares'\n187      /** @dev See {IPrincipalToken-deposit}. */\n188      function deposit(\n189          uint256 assets,\n190          address ptReceiver,\n191          address ytReceiver,\n192:         uint256 minShares\n\n/// @audit Missing '@param ibts'\n/// @audit Missing '@param receiver'\n196              revert ERC5143SlippageProtectionFailed();\n197          }\n198      }\n199  \n200      /** @dev See {IPrincipalToken-depositIBT}. */\n201:     function depositIBT(uint256 ibts, address receiver) external override returns (uint256 shares) {\n\n/// @audit Missing '@param ibts'\n202          shares = depositIBT(ibts, receiver, receiver);\n203      }\n204  \n205      /** @dev See {IPrincipalToken-depositIBT}. */\n206      function depositIBT(\n207:         uint256 ibts,\n\n/// @audit Missing '@param ptReceiver'\n203      }\n204  \n205      /** @dev See {IPrincipalToken-depositIBT}. */\n206      function depositIBT(\n207          uint256 ibts,\n208:         address ptReceiver,\n\n/// @audit Missing '@param ytReceiver'\n204  \n205      /** @dev See {IPrincipalToken-depositIBT}. */\n206      function depositIBT(\n207          uint256 ibts,\n208          address ptReceiver,\n209:         address ytReceiver\n\n/// @audit Missing '@param ibts'\n212          shares = _depositIBT(ibts, ptReceiver, ytReceiver);\n213      }\n214  \n215      /** @dev See {IPrincipalToken-depositIBT}. */\n216      function depositIBT(\n217:         uint256 ibts,\n\n/// @audit Missing '@param ptReceiver'\n213      }\n214  \n215      /** @dev See {IPrincipalToken-depositIBT}. */\n216      function depositIBT(\n217          uint256 ibts,\n218:         address ptReceiver,\n\n/// @audit Missing '@param ytReceiver'\n214  \n215      /** @dev See {IPrincipalToken-depositIBT}. */\n216      function depositIBT(\n217          uint256 ibts,\n218          address ptReceiver,\n219:         address ytReceiver,\n\n/// @audit Missing '@param minShares'\n215      /** @dev See {IPrincipalToken-depositIBT}. */\n216      function depositIBT(\n217          uint256 ibts,\n218          address ptReceiver,\n219          address ytReceiver,\n220:         uint256 minShares\n\n/// @audit Missing '@param shares'\n225          }\n226      }\n227  \n228      /** @dev See {IPrincipalToken-redeem}. */\n229      function redeem(\n230:         uint256 shares,\n\n/// @audit Missing '@param receiver'\n226      }\n227  \n228      /** @dev See {IPrincipalToken-redeem}. */\n229      function redeem(\n230          uint256 shares,\n231:         address receiver,\n\n/// @audit Missing '@param owner'\n227  \n228      /** @dev See {IPrincipalToken-redeem}. */\n229      function redeem(\n230          uint256 shares,\n231          address receiver,\n232:         address owner\n\n/// @audit Missing '@param shares'\n236          emit Redeem(owner, receiver, shares);\n237      }\n238  \n239      /** @dev See {IPrincipalToken-redeem}. */\n240      function redeem(\n241:         uint256 shares,\n\n/// @audit Missing '@param receiver'\n237      }\n238  \n239      /** @dev See {IPrincipalToken-redeem}. */\n240      function redeem(\n241          uint256 shares,\n242:         address receiver,\n\n/// @audit Missing '@param owner'\n238  \n239      /** @dev See {IPrincipalToken-redeem}. */\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243:         address owner,\n\n/// @audit Missing '@param minAssets'\n239      /** @dev See {IPrincipalToken-redeem}. */\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243          address owner,\n244:         uint256 minAssets\n\n/// @audit Missing '@param shares'\n249          }\n250      }\n251  \n252      /** @dev See {IPrincipalToken-redeemForIBT}. */\n253      function redeemForIBT(\n254:         uint256 shares,\n\n/// @audit Missing '@param receiver'\n250      }\n251  \n252      /** @dev See {IPrincipalToken-redeemForIBT}. */\n253      function redeemForIBT(\n254          uint256 shares,\n255:         address receiver,\n\n/// @audit Missing '@param owner'\n251  \n252      /** @dev See {IPrincipalToken-redeemForIBT}. */\n253      function redeemForIBT(\n254          uint256 shares,\n255          address receiver,\n256:         address owner\n\n/// @audit Missing '@param shares'\n261          emit Redeem(owner, receiver, shares);\n262      }\n263  \n264      /** @dev See {IPrincipalToken-redeemForIBT}. */\n265      function redeemForIBT(\n266:         uint256 shares,\n\n/// @audit Missing '@param receiver'\n262      }\n263  \n264      /** @dev See {IPrincipalToken-redeemForIBT}. */\n265      function redeemForIBT(\n266          uint256 shares,\n267:         address receiver,\n\n/// @audit Missing '@param owner'\n263  \n264      /** @dev See {IPrincipalToken-redeemForIBT}. */\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268:         address owner,\n\n/// @audit Missing '@param minIbts'\n264      /** @dev See {IPrincipalToken-redeemForIBT}. */\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268          address owner,\n269:         uint256 minIbts\n\n/// @audit Missing '@param assets'\n274          }\n275      }\n276  \n277      /** @dev See {IPrincipalToken-withdraw}. */\n278      function withdraw(\n279:         uint256 assets,\n\n/// @audit Missing '@param receiver'\n275      }\n276  \n277      /** @dev See {IPrincipalToken-withdraw}. */\n278      function withdraw(\n279          uint256 assets,\n280:         address receiver,\n\n/// @audit Missing '@param owner'\n276  \n277      /** @dev See {IPrincipalToken-withdraw}. */\n278      function withdraw(\n279          uint256 assets,\n280          address receiver,\n281:         address owner\n\n/// @audit Missing '@param assets'\n286          shares = _withdrawShares(ibts, receiver, owner, _ptRate, _ibtRate);\n287      }\n288  \n289      /** @dev See {IPrincipalToken-withdraw}. */\n290      function withdraw(\n291:         uint256 assets,\n\n/// @audit Missing '@param receiver'\n287      }\n288  \n289      /** @dev See {IPrincipalToken-withdraw}. */\n290      function withdraw(\n291          uint256 assets,\n292:         address receiver,\n\n/// @audit Missing '@param owner'\n288  \n289      /** @dev See {IPrincipalToken-withdraw}. */\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293:         address owner,\n\n/// @audit Missing '@param maxShares'\n289      /** @dev See {IPrincipalToken-withdraw}. */\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293          address owner,\n294:         uint256 maxShares\n\n/// @audit Missing '@param ibts'\n299          }\n300      }\n301  \n302      /** @dev See {IPrincipalToken-withdrawIBT}. */\n303      function withdrawIBT(\n304:         uint256 ibts,\n\n/// @audit Missing '@param receiver'\n300      }\n301  \n302      /** @dev See {IPrincipalToken-withdrawIBT}. */\n303      function withdrawIBT(\n304          uint256 ibts,\n305:         address receiver,\n\n/// @audit Missing '@param owner'\n301  \n302      /** @dev See {IPrincipalToken-withdrawIBT}. */\n303      function withdrawIBT(\n304          uint256 ibts,\n305          address receiver,\n306:         address owner\n\n/// @audit Missing '@param ibts'\n312          IERC20(ibt).safeTransfer(receiver, ibts);\n313      }\n314  \n315      /** @dev See {IPrincipalToken-withdrawIBT}. */\n316      function withdrawIBT(\n317:         uint256 ibts,\n\n/// @audit Missing '@param receiver'\n313      }\n314  \n315      /** @dev See {IPrincipalToken-withdrawIBT}. */\n316      function withdrawIBT(\n317          uint256 ibts,\n318:         address receiver,\n\n/// @audit Missing '@param owner'\n314  \n315      /** @dev See {IPrincipalToken-withdrawIBT}. */\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319:         address owner,\n\n/// @audit Missing '@param maxShares'\n315      /** @dev See {IPrincipalToken-withdrawIBT}. */\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319          address owner,\n320:         uint256 maxShares\n\n/// @audit Missing '@param _user'\n335          assets = IERC4626(ibt).redeem(ibts, msg.sender, address(this));\n336          emit FeeClaimed(msg.sender, ibts, assets);\n337      }\n338  \n339      /** @dev See {IPrincipalToken-updateYield}. */\n340:     function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n\n/// @audit Missing '@param _receiver'\n364              emit YieldUpdated(_user, updatedUserYieldInIBT);\n365          }\n366      }\n367  \n368      /** @dev See {IPrincipalToken-claimYield}. */\n369:     function claimYield(address _receiver) public override returns (uint256 yieldInAsset) {\n\n/// @audit Missing '@param _receiver'\n372              yieldInAsset = IERC4626(ibt).redeem(yieldInIBT, _receiver, address(this));\n373          }\n374      }\n375  \n376      /** @dev See {IPrincipalToken-claimYieldInIBT}. */\n377:     function claimYieldInIBT(address _receiver) public override returns (uint256 yieldInIBT) {\n\n/// @audit Missing '@param _from'\n/// @audit Missing '@param _to'\n380              IERC20(ibt).safeTransfer(_receiver, yieldInIBT);\n381          }\n382      }\n383  \n384      /** @dev See {IPrincipalToken-beforeYtTransfer}. */\n385:     function beforeYtTransfer(address _from, address _to) external override {\n\n/// @audit Missing '@param _data'\n389          updateYield(_from);\n390          updateYield(_to);\n391      }\n392  \n393      /** @dev See {IPrincipalToken-claimRewards}. */\n394:     function claimRewards(bytes memory _data) external restricted {\n\n/// @audit Missing '@param _rewardsProxy'\n415          (ptRate, ibtRate) = _getCurrentPTandIBTRates(false);\n416          emit RatesStoredAtExpiry(ibtRate, ptRate);\n417      }\n418  \n419      /** @dev See {IPrincipalToken-setRewardsProxy}. */\n420:     function setRewardsProxy(address _rewardsProxy) external restricted {\n\n/// @audit Missing '@param assets'\n425  \n426      /* GETTERS\n427       *****************************************************************************************************************/\n428  \n429      /** @dev See {IPrincipalToken-previewDeposit}. */\n430:     function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n/// @audit Missing '@param ibts'\n431          uint256 ibts = IERC4626(ibt).previewDeposit(assets);\n432          return _previewDepositIBT(ibts);\n433      }\n434  \n435      /** @dev See {IPrincipalToken-previewDepositIBT}. */\n436:     function previewDepositIBT(uint256 ibts) external view override returns (uint256) {\n\n/// @audit Missing '@param assets'\n442          return type(uint256).max;\n443      }\n444  \n445      /** @dev See {IPrincipalToken-previewWithdraw}. */\n446      function previewWithdraw(\n447:         uint256 assets\n\n/// @audit Missing '@param ibts'\n449          uint256 ibts = IERC4626(ibt).previewWithdraw(assets);\n450          return previewWithdrawIBT(ibts);\n451      }\n452  \n453      /** @dev See {IPrincipalToken-previewWithdrawIBT}. */\n454:     function previewWithdrawIBT(uint256 ibts) public view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@param owner'\n455          return _convertIBTsToShares(ibts, true);\n456      }\n457  \n458      /** @dev See {IPrincipalToken-maxWithdraw}.\n459       */\n460:     function maxWithdraw(address owner) public view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@param owner'\n461          return convertToUnderlying(_maxBurnable(owner));\n462      }\n463  \n464      /** @dev See {IPrincipalToken-maxWithdrawIBT}.\n465       */\n466:     function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@param shares'\n466      function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n467          return _convertSharesToIBTs(_maxBurnable(owner), false);\n468      }\n469  \n470      /** @dev See {IPrincipalToken-previewRedeem}. */\n471:     function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n/// @audit Missing '@param shares'\n472          return IERC4626(ibt).previewRedeem(previewRedeemForIBT(shares));\n473      }\n474  \n475      /** @dev See {IPrincipalToken-previewRedeemForIBT}. */\n476      function previewRedeemForIBT(\n477:         uint256 shares\n\n/// @audit Missing '@param owner'\n478      ) public view override whenNotPaused returns (uint256) {\n479          return _convertSharesToIBTs(shares, false);\n480      }\n481  \n482      /** @dev See {IPrincipalToken-maxRedeem}. */\n483:     function maxRedeem(address owner) public view override returns (uint256) {\n\n/// @audit Missing '@param underlyingAmount'\n483      function maxRedeem(address owner) public view override returns (uint256) {\n484          return _maxBurnable(owner);\n485      }\n486  \n487      /** @dev See {IPrincipalToken-convertToPrincipal}. */\n488:     function convertToPrincipal(uint256 underlyingAmount) external view override returns (uint256) {\n\n/// @audit Missing '@param principalAmount'\n488      function convertToPrincipal(uint256 underlyingAmount) external view override returns (uint256) {\n489          return _convertIBTsToShares(IERC4626(ibt).previewDeposit(underlyingAmount), false);\n490      }\n491  \n492      /** @dev See {IPrincipalToken-convertToUnderlying}. */\n493:     function convertToUnderlying(uint256 principalAmount) public view override returns (uint256) {\n\n/// @audit Missing '@param _user'\n556          return totalFeesInIBT;\n557      }\n558  \n559      /** @dev See {IPrincipalToken-getCurrentYieldOfUserInIBT}. */\n560      function getCurrentYieldOfUserInIBT(\n561:         address _user\n\n/// @audit Missing '@param _token'\n578      }\n579  \n580      /**\n581       * @dev See {IERC3156FlashLender-maxFlashLoan}.\n582       */\n583:     function maxFlashLoan(address _token) public view override returns (uint256) {\n\n/// @audit Missing '@param _token'\n/// @audit Missing '@param _amount'\n589      }\n590  \n591      /**\n592       * @dev See {IERC3156FlashLender-flashFee}.\n593       */\n594:     function flashFee(address _token, uint256 _amount) public view override returns (uint256) {\n\n/// @audit Missing '@param _receiver'\n605  \n606      /**\n607       * @dev See {IERC3156FlashLender-flashLoan}.\n608       */\n609      function flashLoan(\n610:         IERC3156FlashBorrower _receiver,\n\n/// @audit Missing '@param _token'\n606      /**\n607       * @dev See {IERC3156FlashLender-flashLoan}.\n608       */\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611:         address _token,\n\n/// @audit Missing '@param _amount'\n607       * @dev See {IERC3156FlashLender-flashLoan}.\n608       */\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612:         uint256 _amount,\n\n/// @audit Missing '@param _data'\n608       */\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612          uint256 _amount,\n613:         bytes calldata _data\n\n```\n",
          "loc": [
            "[364](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L364-L369)",
            "[97](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L97-L102)",
            "[166](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L166-L171)",
            "[166](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L166-L171)",
            "[172](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L172-L177)",
            "[173](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L173-L178)",
            "[174](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L174-L179)",
            "[184](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L184-L189)",
            "[185](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L185-L190)",
            "[186](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L186-L191)",
            "[187](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L187-L192)",
            "[196](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L196-L201)",
            "[196](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L196-L201)",
            "[202](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L202-L207)",
            "[203](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L203-L208)",
            "[204](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L204-L209)",
            "[212](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L212-L217)",
            "[213](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L213-L218)",
            "[214](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L214-L219)",
            "[215](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L215-L220)",
            "[225](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L225-L230)",
            "[226](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L226-L231)",
            "[227](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L227-L232)",
            "[236](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L236-L241)",
            "[237](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L237-L242)",
            "[238](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L238-L243)",
            "[239](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L239-L244)",
            "[249](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L249-L254)",
            "[250](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L250-L255)",
            "[251](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L251-L256)",
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L266)",
            "[262](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L262-L267)",
            "[263](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L263-L268)",
            "[264](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L264-L269)",
            "[274](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L274-L279)",
            "[275](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L275-L280)",
            "[276](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L276-L281)",
            "[286](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L286-L291)",
            "[287](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L287-L292)",
            "[288](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L288-L293)",
            "[289](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L289-L294)",
            "[299](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L299-L304)",
            "[300](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L300-L305)",
            "[301](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L301-L306)",
            "[312](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L312-L317)",
            "[313](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L313-L318)",
            "[314](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L314-L319)",
            "[315](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L315-L320)",
            "[335](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L335-L340)",
            "[372](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L372-L377)",
            "[380](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L380-L385)",
            "[380](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L380-L385)",
            "[389](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L389-L394)",
            "[415](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L415-L420)",
            "[425](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L425-L430)",
            "[431](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L431-L436)",
            "[442](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L442-L447)",
            "[449](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L449-L454)",
            "[455](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L455-L460)",
            "[461](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L461-L466)",
            "[466](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L466-L471)",
            "[472](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L472-L477)",
            "[478](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L478-L483)",
            "[483](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L483-L488)",
            "[488](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L488-L493)",
            "[556](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L556-L561)",
            "[578](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L578-L583)",
            "[589](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L589-L594)",
            "[589](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L589-L594)",
            "[605](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L605-L610)",
            "[606](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L606-L611)",
            "[607](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L607-L612)",
            "[608](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L608-L613)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit Missing '@param from'\n/// @audit Missing '@param amount'\n37           __ERC20Permit_init(_name);\n38           pt = _pt;\n39       }\n40   \n41       /** @dev See {IYieldToken-burnWithoutUpdate} */\n42:      function burnWithoutUpdate(address from, uint256 amount) external override {\n\n/// @audit Missing '@param to'\n/// @audit Missing '@param amount'\n45           }\n46           _burn(from, amount);\n47       }\n48   \n49       /** @dev See {IYieldToken-mint} */\n50:      function mint(address to, uint256 amount) external override {\n\n/// @audit Missing '@param amount'\n53           }\n54           _mint(to, amount);\n55       }\n56   \n57       /** @dev See {IYieldToken-burn} */\n58:      function burn(uint256 amount) public override {\n\n/// @audit Missing '@param to'\n67        *\n68        * - `to` cannot be the zero address.\n69        * - the caller must have a balance of at least `amount`.\n70        */\n71       function transfer(\n72:          address to,\n\n/// @audit Missing '@param amount'\n68        * - `to` cannot be the zero address.\n69        * - the caller must have a balance of at least `amount`.\n70        */\n71       function transfer(\n72           address to,\n73:          uint256 amount\n\n/// @audit Missing '@param from'\n91        * - `from` must have a balance of at least `amount`.\n92        * - the caller must have allowance for ``from``'s tokens of at least\n93        * `amount`.\n94        */\n95       function transferFrom(\n96:          address from,\n\n/// @audit Missing '@param to'\n92        * - the caller must have allowance for ``from``'s tokens of at least\n93        * `amount`.\n94        */\n95       function transferFrom(\n96           address from,\n97:          address to,\n\n/// @audit Missing '@param amount'\n93        * `amount`.\n94        */\n95       function transferFrom(\n96           address from,\n97           address to,\n98:          uint256 amount\n\n/// @audit Missing '@param account'\n117          return pt;\n118      }\n119  \n120      /** @dev See {IYieldToken-balanceOf} */\n121      function balanceOf(\n122:         address account\n\n/// @audit Missing '@param account'\n123      ) public view override(IYieldToken, ERC20Upgradeable) returns (uint256) {\n124          return (block.timestamp < IPrincipalToken(pt).maturity()) ? super.balanceOf(account) : 0;\n125      }\n126  \n127      /** @dev See {IYieldToken-actualBalanceOf} */\n128:     function actualBalanceOf(address account) public view override returns (uint256) {\n\n```\n",
          "loc": [
            "[91](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L91-L96)",
            "[37](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L37-L42)",
            "[45](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L45-L50)",
            "[53](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L53-L58)",
            "[123](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L123-L128)",
            "[37](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L37-L42)",
            "[67](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L67-L72)",
            "[68](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L68-L73)",
            "[45](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L45-L50)",
            "[92](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L92-L97)",
            "[93](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L93-L98)",
            "[117](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L117-L122)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function `@return` tag is missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit Missing '@return shares'\n21       /** @dev See {IPrincipalToken-convertToSharesWithRate}. */\n22       function _convertToSharesWithRate(\n23           uint256 _assets,\n24           uint256 _rate,\n25           uint256 _ibtUnit,\n26           Math.Rounding _rounding\n27:      ) internal pure returns (uint256 shares) {\n\n/// @audit Missing '@return assets'\n34       /** @dev See {IPrincipalToken-convertToAssetsWithRate}. */\n35       function _convertToAssetsWithRate(\n36           uint256 _shares,\n37           uint256 _rate,\n38           uint256 _ibtUnit,\n39           Math.Rounding _rounding\n40:      ) internal pure returns (uint256 assets) {\n\n```\n",
          "loc": [
            "[34](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L34-L40)",
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L21-L27)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit Missing '@return  '\n43       /**\n44        * @dev Returns the current implementation address.\n45        */\n46:      function implementation() public view virtual returns (address) {\n\n```\n",
          "loc": [
            "[43](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L43-L46)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n/// @audit Missing '@return  '\n91       /**\n92        * @dev Returns the admin of this proxy.\n93        */\n94:      function _proxyAdmin() internal virtual returns (address) {\n\n```\n",
          "loc": [
            "[91](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L91-L94)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit Missing '@return shares'\n170      /** @dev See {IPrincipalToken-deposit}. */\n171:     function deposit(uint256 assets, address receiver) external override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n175      /** @dev See {IPrincipalToken-deposit}. */\n176      function deposit(\n177          uint256 assets,\n178          address ptReceiver,\n179          address ytReceiver\n180:     ) public override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n187      /** @dev See {IPrincipalToken-deposit}. */\n188      function deposit(\n189          uint256 assets,\n190          address ptReceiver,\n191          address ytReceiver,\n192          uint256 minShares\n193:     ) external override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n200      /** @dev See {IPrincipalToken-depositIBT}. */\n201:     function depositIBT(uint256 ibts, address receiver) external override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n205      /** @dev See {IPrincipalToken-depositIBT}. */\n206      function depositIBT(\n207          uint256 ibts,\n208          address ptReceiver,\n209          address ytReceiver\n210:     ) public override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n215      /** @dev See {IPrincipalToken-depositIBT}. */\n216      function depositIBT(\n217          uint256 ibts,\n218          address ptReceiver,\n219          address ytReceiver,\n220          uint256 minShares\n221:     ) external override returns (uint256 shares) {\n\n/// @audit Missing '@return assets'\n228      /** @dev See {IPrincipalToken-redeem}. */\n229      function redeem(\n230          uint256 shares,\n231          address receiver,\n232          address owner\n233:     ) public override returns (uint256 assets) {\n\n/// @audit Missing '@return assets'\n239      /** @dev See {IPrincipalToken-redeem}. */\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243          address owner,\n244          uint256 minAssets\n245:     ) external override returns (uint256 assets) {\n\n/// @audit Missing '@return ibts'\n252      /** @dev See {IPrincipalToken-redeemForIBT}. */\n253      function redeemForIBT(\n254          uint256 shares,\n255          address receiver,\n256          address owner\n257:     ) public override returns (uint256 ibts) {\n\n/// @audit Missing '@return ibts'\n264      /** @dev See {IPrincipalToken-redeemForIBT}. */\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268          address owner,\n269          uint256 minIbts\n270:     ) external override returns (uint256 ibts) {\n\n/// @audit Missing '@return shares'\n277      /** @dev See {IPrincipalToken-withdraw}. */\n278      function withdraw(\n279          uint256 assets,\n280          address receiver,\n281          address owner\n282:     ) public override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n289      /** @dev See {IPrincipalToken-withdraw}. */\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293          address owner,\n294          uint256 maxShares\n295:     ) external override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n302      /** @dev See {IPrincipalToken-withdrawIBT}. */\n303      function withdrawIBT(\n304          uint256 ibts,\n305          address receiver,\n306          address owner\n307:     ) public override returns (uint256 shares) {\n\n/// @audit Missing '@return shares'\n315      /** @dev See {IPrincipalToken-withdrawIBT}. */\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319          address owner,\n320          uint256 maxShares\n321:     ) external override returns (uint256 shares) {\n\n/// @audit Missing '@return assets'\n328      /** @dev See {IPrincipalToken-claimFees}. */\n329:     function claimFees() external override returns (uint256 assets) {\n\n/// @audit Missing '@return updatedUserYieldInIBT'\n339      /** @dev See {IPrincipalToken-updateYield}. */\n340:     function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n\n/// @audit Missing '@return yieldInAsset'\n368      /** @dev See {IPrincipalToken-claimYield}. */\n369:     function claimYield(address _receiver) public override returns (uint256 yieldInAsset) {\n\n/// @audit Missing '@return yieldInIBT'\n376      /** @dev See {IPrincipalToken-claimYieldInIBT}. */\n377:     function claimYieldInIBT(address _receiver) public override returns (uint256 yieldInIBT) {\n\n/// @audit Missing '@return  '\n429      /** @dev See {IPrincipalToken-previewDeposit}. */\n430:     function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n435      /** @dev See {IPrincipalToken-previewDepositIBT}. */\n436:     function previewDepositIBT(uint256 ibts) external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n440      /** @dev See {IPrincipalToken-maxDeposit}. */\n441:     function maxDeposit(address) external pure override returns (uint256) {\n\n/// @audit Missing '@return  '\n445      /** @dev See {IPrincipalToken-previewWithdraw}. */\n446      function previewWithdraw(\n447          uint256 assets\n448:     ) external view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@return  '\n453      /** @dev See {IPrincipalToken-previewWithdrawIBT}. */\n454:     function previewWithdrawIBT(uint256 ibts) public view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@return  '\n458      /** @dev See {IPrincipalToken-maxWithdraw}.\n459       */\n460:     function maxWithdraw(address owner) public view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@return  '\n464      /** @dev See {IPrincipalToken-maxWithdrawIBT}.\n465       */\n466:     function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@return  '\n470      /** @dev See {IPrincipalToken-previewRedeem}. */\n471:     function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n475      /** @dev See {IPrincipalToken-previewRedeemForIBT}. */\n476      function previewRedeemForIBT(\n477          uint256 shares\n478:     ) public view override whenNotPaused returns (uint256) {\n\n/// @audit Missing '@return  '\n482      /** @dev See {IPrincipalToken-maxRedeem}. */\n483:     function maxRedeem(address owner) public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n487      /** @dev See {IPrincipalToken-convertToPrincipal}. */\n488:     function convertToPrincipal(uint256 underlyingAmount) external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n492      /** @dev See {IPrincipalToken-convertToUnderlying}. */\n493:     function convertToUnderlying(uint256 principalAmount) public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n497      /** @dev See {IPrincipalToken-totalAssets}. */\n498:     function totalAssets() public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n502      /** @dev See {IERC20Metadata-decimals} */\n503:     function decimals() public view override(IERC20Metadata, ERC20Upgradeable) returns (uint8) {\n\n/// @audit Missing '@return  '\n507      /** @dev See {IPrincipalToken-underlying}. */\n508:     function underlying() external view override returns (address) {\n\n/// @audit Missing '@return  '\n512      /** @dev See {IPrincipalToken-maturity}. */\n513:     function maturity() external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n517      /** @dev See {IPrincipalToken-getDuration}. */\n518:     function getDuration() external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n522      /** @dev See {IPrincipalToken-getIBT}. */\n523:     function getIBT() external view override returns (address) {\n\n/// @audit Missing '@return  '\n527      /** @dev See {IPrincipalToken-getYT}. */\n528:     function getYT() external view override returns (address) {\n\n/// @audit Missing '@return  '\n532      /** @dev See {IPrincipalToken-getIBTRate}. */\n533:     function getIBTRate() external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n538      /** @dev See {IPrincipalToken-getPTRate}. */\n539:     function getPTRate() external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n544      /** @dev See {IPrincipalToken-getIBTUnit}. */\n545:     function getIBTUnit() external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n549      /** @dev See {IPrincipalToken-getUnclaimedFeesInIBT}. */\n550:     function getUnclaimedFeesInIBT() external view override returns (uint256) {\n\n/// @audit Missing '@return  '\n554      /** @dev See {IPrincipalToken-getTotalFeesInIBT}. */\n555:     function getTotalFeesInIBT() external view override returns (uint256) {\n\n/// @audit Missing '@return _yieldOfUserInIBT'\n559      /** @dev See {IPrincipalToken-getCurrentYieldOfUserInIBT}. */\n560      function getCurrentYieldOfUserInIBT(\n561          address _user\n562:     ) external view override returns (uint256 _yieldOfUserInIBT) {\n\n/// @audit Missing '@return  '\n580      /**\n581       * @dev See {IERC3156FlashLender-maxFlashLoan}.\n582       */\n583:     function maxFlashLoan(address _token) public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n591      /**\n592       * @dev See {IERC3156FlashLender-flashFee}.\n593       */\n594:     function flashFee(address _token, uint256 _amount) public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n599      /**\n600       * @dev See {IPrincipalToken-tokenizationFee}.\n601       */\n602:     function getTokenizationFee() public view override returns (uint256) {\n\n/// @audit Missing '@return  '\n606      /**\n607       * @dev See {IERC3156FlashLender-flashLoan}.\n608       */\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612          uint256 _amount,\n613          bytes calldata _data\n614:     ) external override returns (bool) {\n\n/// @audit Missing '@return _ptRate'\n/// @audit Missing '@return _ibtRate'\n876      /**\n877       * @dev Internal function for updating PT and IBT rates i.e. depegging PT if negative yield happened\n878       */\n879:     function _updatePTandIBTRates() internal returns (uint256 _ptRate, uint256 _ibtRate) {\n\n```\n",
          "loc": [
            "[339](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L339-L340)",
            "[368](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L368-L369)",
            "[376](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L376-L377)",
            "[429](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L429-L430)",
            "[435](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L435-L436)",
            "[440](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L440-L441)",
            "[445](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L445-L448)",
            "[453](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L453-L454)",
            "[458](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L458-L460)",
            "[464](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L464-L466)",
            "[470](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L470-L471)",
            "[475](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L475-L478)",
            "[482](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L482-L483)",
            "[487](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L487-L488)",
            "[492](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L492-L493)",
            "[497](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L497-L498)",
            "[502](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L502-L503)",
            "[507](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L507-L508)",
            "[512](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L512-L513)",
            "[517](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L517-L518)",
            "[522](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L522-L523)",
            "[527](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L527-L528)",
            "[532](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L532-L533)",
            "[538](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L538-L539)",
            "[544](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L544-L545)",
            "[549](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L549-L550)",
            "[559](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L559-L562)",
            "[580](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L580-L583)",
            "[591](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L591-L594)",
            "[599](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L599-L602)",
            "[606](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L606-L614)",
            "[876](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L876-L879)",
            "[876](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L876-L879)",
            "[554](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L554-L555)",
            "[170](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L170-L171)",
            "[175](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L175-L180)",
            "[187](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L187-L193)",
            "[200](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L200-L201)",
            "[205](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L205-L210)",
            "[215](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L215-L221)",
            "[228](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L228-L233)",
            "[239](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L239-L245)",
            "[252](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L252-L257)",
            "[264](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L264-L270)",
            "[277](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L277-L282)",
            "[289](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L289-L295)",
            "[302](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L302-L307)",
            "[315](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L315-L321)",
            "[328](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L328-L329)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit Missing '@return success'\n63       /**\n64        * @dev See {IERC20-transfer}.\n65        *\n66        * Requirements:\n67        *\n68        * - `to` cannot be the zero address.\n69        * - the caller must have a balance of at least `amount`.\n70        */\n71       function transfer(\n72           address to,\n73           uint256 amount\n74:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n/// @audit Missing '@return success'\n79       /**\n80        * @dev See {IERC20-transferFrom}.\n81        *\n82        * Emits an {Approval} event indicating the updated allowance. This is not\n83        * required by the EIP. See the note at the beginning of {ERC20}.\n84        *\n85        * NOTE: Does not update the allowance if the current allowance\n86        * is the maximum `uint256`.\n87        *\n88        * Requirements:\n89        *\n90        * - `from` and `to` cannot be the zero address.\n91        * - `from` must have a balance of at least `amount`.\n92        * - the caller must have allowance for ``from``'s tokens of at least\n93        * `amount`.\n94        */\n95       function transferFrom(\n96           address from,\n97           address to,\n98           uint256 amount\n99:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n/// @audit Missing '@return  '\n104      /** @dev See {IERC20Upgradeable-decimals} */\n105      function decimals()\n106          public\n107          view\n108          virtual\n109          override(IYieldToken, ERC20Upgradeable)\n110          returns (uint8)\n111:     {\n\n/// @audit Missing '@return  '\n115      /** @dev See {IYieldToken-getPT} */\n116:     function getPT() public view virtual override returns (address) {\n\n/// @audit Missing '@return  '\n120      /** @dev See {IYieldToken-balanceOf} */\n121      function balanceOf(\n122          address account\n123:     ) public view override(IYieldToken, ERC20Upgradeable) returns (uint256) {\n\n/// @audit Missing '@return  '\n127      /** @dev See {IYieldToken-actualBalanceOf} */\n128:     function actualBalanceOf(address account) public view override returns (uint256) {\n\n```\n",
          "loc": [
            "[115](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L115-L116)",
            "[120](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L120-L123)",
            "[127](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L127-L128)",
            "[104](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L104-L111)",
            "[79](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L79-L99)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L63-L74)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function declarations should have `@dev` tags",
      "description": "`@dev` is used to explain to developers what the potential integration issues/foot-guns are",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n18:      function upgradeToAndCall(address, bytes calldata) external payable;\n\n```\n",
          "loc": [
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L18-L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n102:     constructor(address _registry) {\n\n866:     function _maxBurnable(address _user) internal view returns (uint256 maxBurnable) {\n\n```\n",
          "loc": [
            "[866](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L866-L866)",
            "[102](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L102-L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n21:      constructor() {\n\n31       function initialize(\n32           string calldata _name,\n33           string calldata _symbol,\n34           address _pt\n35:      ) external initializer {\n\n```\n",
          "loc": [
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L31-L35)",
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L21-L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function declarations should have `@notice` tags",
      "description": "`@notice` is used to explain to end users what the function does, and the compiler interprets `///` or `/**` comments (but not `//` or `/*`) as this tag if one wasn't explicitly provided",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n18:      function upgradeToAndCall(address, bytes calldata) external payable;\n\n```\n",
          "loc": [
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L18-L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n102:     constructor(address _registry) {\n\n```\n",
          "loc": [
            "[102](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L102-L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n21:      constructor() {\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L21-L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function declarations should have descriptions",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n18:      function upgradeToAndCall(address, bytes calldata) external payable;\n\n```\n",
          "loc": [
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L18-L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n102:     constructor(address _registry) {\n\n```\n",
          "loc": [
            "[102](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L102-L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n21:      constructor() {\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L21-L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Modifier declarations should have `@dev` tags",
      "description": "`@dev` is used to explain extra details to developers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n84       /// @notice Ensures the current block timestamp is before expiry\n85       modifier notExpired() virtual {\n86           if (block.timestamp >= expiry) {\n87               revert PTExpired();\n88           }\n89           _;\n90:      }\n\n92       /// @notice Ensures the current block timestamp is at or after expiry\n93       modifier afterExpiry() virtual {\n94           if (block.timestamp < expiry) {\n95               revert PTNotExpired();\n96           }\n97           _;\n98:      }\n\n```\n",
          "loc": [
            "[92](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L92-L98)",
            "[84](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L84-L90)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Non-public state variable declarations should use `@dev` tags",
      "description": "i.e. `@dev` [tags](https://docs.soliditylang.org/en/latest/natspec-format.html#tags). Note that since they're non-public, `@notice` is not the right tag to use.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n18:      uint256 private constant SAFETY_BOUND = 100; // used to favour the protocol in case of approximations\n\n19:      uint256 private constant FEE_DIVISOR = 1e18; // equivalent to 100% fees\n\n```\n",
          "loc": [
            "[19](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L19-L19)",
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L18-L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n21:      address private _implementation;\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L21-L21)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n65:      address private immutable _admin;\n\n```\n",
          "loc": [
            "[65](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L65-L65)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n40:      uint256 private constant MIN_DECIMALS = 6;\n\n41:      uint256 private constant MAX_DECIMALS = 18;\n\n42:      bytes32 private constant ON_FLASH_LOAN = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n44:      address private immutable registry;\n\n46:      address private rewardsProxy;\n\n47:      bool private ratesAtExpiryStored;\n\n48:      address private ibt; // address of the Interest Bearing Token 4626 held by this PT vault\n\n49:      address private _asset; // the asset of this PT vault (which is also the asset of the IBT 4626)\n\n50:      address private yt; // YT corresponding to this PT, deployed at initialization\n\n51:      uint256 private ibtUnit; // equal to one unit of the IBT held by this PT vault (10^decimals)\n\n52:      uint256 private _ibtDecimals;\n\n53:      uint256 private _assetDecimals;\n\n55:      uint256 private ptRate; // or PT price in asset (in Ray)\n\n56:      uint256 private ibtRate; // or IBT price in asset (in Ray)\n\n57:      uint256 private unclaimedFeesInIBT; // unclaimed fees\n\n58:      uint256 private totalFeesInIBT; // total fees\n\n59:      uint256 private expiry; // date of maturity (set at initialization)\n\n60:      uint256 private duration; // duration to maturity\n\n62:      mapping(address => uint256) private ibtRateOfUser; // stores each user's IBT rate (in Ray)\n\n63:      mapping(address => uint256) private ptRateOfUser; // stores each user's PT rate (in Ray)\n\n64:      mapping(address => uint256) private yieldOfUserInIBT; // stores each user's yield generated from YTs\n\n```\n",
          "loc": [
            "[59](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L59-L59)",
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L60-L60)",
            "[62](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L62-L62)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L63-L63)",
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L64-L64)",
            "[53](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L53-L53)",
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L40-L40)",
            "[41](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L41-L41)",
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L42-L42)",
            "[44](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L44-L44)",
            "[46](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L46-L46)",
            "[47](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L47-L47)",
            "[48](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L48-L48)",
            "[49](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L49-L49)",
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L50-L50)",
            "[51](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L51-L51)",
            "[52](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L52-L52)",
            "[55](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L55-L55)",
            "[56](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L56-L56)",
            "[57](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L57-L57)",
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L58-L58)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n18:      address private pt;\n\n```\n",
          "loc": [
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L18-L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: State variable declarations should have descriptions",
      "description": "e.g. `@notice` [tags](https://docs.soliditylang.org/en/latest/natspec-format.html#tags)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n18:      uint256 private constant SAFETY_BOUND = 100; // used to favour the protocol in case of approximations\n\n19:      uint256 private constant FEE_DIVISOR = 1e18; // equivalent to 100% fees\n\n```\n",
          "loc": [
            "[19](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L19-L19)",
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L18-L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n21:      address private _implementation;\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L21-L21)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n65:      address private immutable _admin;\n\n```\n",
          "loc": [
            "[65](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L65-L65)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n40:      uint256 private constant MIN_DECIMALS = 6;\n\n41:      uint256 private constant MAX_DECIMALS = 18;\n\n42:      bytes32 private constant ON_FLASH_LOAN = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n44:      address private immutable registry;\n\n46:      address private rewardsProxy;\n\n47:      bool private ratesAtExpiryStored;\n\n48:      address private ibt; // address of the Interest Bearing Token 4626 held by this PT vault\n\n49:      address private _asset; // the asset of this PT vault (which is also the asset of the IBT 4626)\n\n50:      address private yt; // YT corresponding to this PT, deployed at initialization\n\n51:      uint256 private ibtUnit; // equal to one unit of the IBT held by this PT vault (10^decimals)\n\n52:      uint256 private _ibtDecimals;\n\n53:      uint256 private _assetDecimals;\n\n55:      uint256 private ptRate; // or PT price in asset (in Ray)\n\n56:      uint256 private ibtRate; // or IBT price in asset (in Ray)\n\n57:      uint256 private unclaimedFeesInIBT; // unclaimed fees\n\n58:      uint256 private totalFeesInIBT; // total fees\n\n59:      uint256 private expiry; // date of maturity (set at initialization)\n\n60:      uint256 private duration; // duration to maturity\n\n62:      mapping(address => uint256) private ibtRateOfUser; // stores each user's IBT rate (in Ray)\n\n63:      mapping(address => uint256) private ptRateOfUser; // stores each user's PT rate (in Ray)\n\n64:      mapping(address => uint256) private yieldOfUserInIBT; // stores each user's yield generated from YTs\n\n```\n",
          "loc": [
            "[44](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L44-L44)",
            "[46](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L46-L46)",
            "[47](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L47-L47)",
            "[48](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L48-L48)",
            "[49](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L49-L49)",
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L50-L50)",
            "[51](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L51-L51)",
            "[52](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L52-L52)",
            "[53](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L53-L53)",
            "[55](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L55-L55)",
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L42-L42)",
            "[57](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L57-L57)",
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L58-L58)",
            "[59](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L59-L59)",
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L60-L60)",
            "[62](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L62-L62)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L63-L63)",
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L64-L64)",
            "[41](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L41-L41)",
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L40-L40)",
            "[56](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L56-L56)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n18:      address private pt;\n\n```\n",
          "loc": [
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L18-L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Use `@inheritdoc` rather than using a non-standard tags",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n160      /** @dev See {PausableUpgradeable-_pause}. */\n161:     function pause() external override restricted {\n\n165      /** @dev See {PausableUpgradeable-_unPause}. */\n166:     function unPause() external override restricted {\n\n170      /** @dev See {IPrincipalToken-deposit}. */\n171:     function deposit(uint256 assets, address receiver) external override returns (uint256 shares) {\n\n175      /** @dev See {IPrincipalToken-deposit}. */\n176      function deposit(\n177          uint256 assets,\n178          address ptReceiver,\n179          address ytReceiver\n180:     ) public override returns (uint256 shares) {\n\n187      /** @dev See {IPrincipalToken-deposit}. */\n188      function deposit(\n189          uint256 assets,\n190          address ptReceiver,\n191          address ytReceiver,\n192          uint256 minShares\n193:     ) external override returns (uint256 shares) {\n\n200      /** @dev See {IPrincipalToken-depositIBT}. */\n201:     function depositIBT(uint256 ibts, address receiver) external override returns (uint256 shares) {\n\n205      /** @dev See {IPrincipalToken-depositIBT}. */\n206      function depositIBT(\n207          uint256 ibts,\n208          address ptReceiver,\n209          address ytReceiver\n210:     ) public override returns (uint256 shares) {\n\n215      /** @dev See {IPrincipalToken-depositIBT}. */\n216      function depositIBT(\n217          uint256 ibts,\n218          address ptReceiver,\n219          address ytReceiver,\n220          uint256 minShares\n221:     ) external override returns (uint256 shares) {\n\n228      /** @dev See {IPrincipalToken-redeem}. */\n229      function redeem(\n230          uint256 shares,\n231          address receiver,\n232          address owner\n233:     ) public override returns (uint256 assets) {\n\n239      /** @dev See {IPrincipalToken-redeem}. */\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243          address owner,\n244          uint256 minAssets\n245:     ) external override returns (uint256 assets) {\n\n252      /** @dev See {IPrincipalToken-redeemForIBT}. */\n253      function redeemForIBT(\n254          uint256 shares,\n255          address receiver,\n256          address owner\n257:     ) public override returns (uint256 ibts) {\n\n264      /** @dev See {IPrincipalToken-redeemForIBT}. */\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268          address owner,\n269          uint256 minIbts\n270:     ) external override returns (uint256 ibts) {\n\n277      /** @dev See {IPrincipalToken-withdraw}. */\n278      function withdraw(\n279          uint256 assets,\n280          address receiver,\n281          address owner\n282:     ) public override returns (uint256 shares) {\n\n289      /** @dev See {IPrincipalToken-withdraw}. */\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293          address owner,\n294          uint256 maxShares\n295:     ) external override returns (uint256 shares) {\n\n302      /** @dev See {IPrincipalToken-withdrawIBT}. */\n303      function withdrawIBT(\n304          uint256 ibts,\n305          address receiver,\n306          address owner\n307:     ) public override returns (uint256 shares) {\n\n315      /** @dev See {IPrincipalToken-withdrawIBT}. */\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319          address owner,\n320          uint256 maxShares\n321:     ) external override returns (uint256 shares) {\n\n328      /** @dev See {IPrincipalToken-claimFees}. */\n329:     function claimFees() external override returns (uint256 assets) {\n\n339      /** @dev See {IPrincipalToken-updateYield}. */\n340:     function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n\n368      /** @dev See {IPrincipalToken-claimYield}. */\n369:     function claimYield(address _receiver) public override returns (uint256 yieldInAsset) {\n\n376      /** @dev See {IPrincipalToken-claimYieldInIBT}. */\n377:     function claimYieldInIBT(address _receiver) public override returns (uint256 yieldInIBT) {\n\n384      /** @dev See {IPrincipalToken-beforeYtTransfer}. */\n385:     function beforeYtTransfer(address _from, address _to) external override {\n\n393      /** @dev See {IPrincipalToken-claimRewards}. */\n394:     function claimRewards(bytes memory _data) external restricted {\n\n408      /** @dev See {IPrincipalToken-storeRatesAtExpiry}. */\n409:     function storeRatesAtExpiry() public override afterExpiry {\n\n419      /** @dev See {IPrincipalToken-setRewardsProxy}. */\n420:     function setRewardsProxy(address _rewardsProxy) external restricted {\n\n429      /** @dev See {IPrincipalToken-previewDeposit}. */\n430:     function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n435      /** @dev See {IPrincipalToken-previewDepositIBT}. */\n436:     function previewDepositIBT(uint256 ibts) external view override returns (uint256) {\n\n440      /** @dev See {IPrincipalToken-maxDeposit}. */\n441:     function maxDeposit(address) external pure override returns (uint256) {\n\n445      /** @dev See {IPrincipalToken-previewWithdraw}. */\n446      function previewWithdraw(\n447          uint256 assets\n448:     ) external view override whenNotPaused returns (uint256) {\n\n453      /** @dev See {IPrincipalToken-previewWithdrawIBT}. */\n454:     function previewWithdrawIBT(uint256 ibts) public view override whenNotPaused returns (uint256) {\n\n458      /** @dev See {IPrincipalToken-maxWithdraw}.\n459       */\n460:     function maxWithdraw(address owner) public view override whenNotPaused returns (uint256) {\n\n464      /** @dev See {IPrincipalToken-maxWithdrawIBT}.\n465       */\n466:     function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n\n470      /** @dev See {IPrincipalToken-previewRedeem}. */\n471:     function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n475      /** @dev See {IPrincipalToken-previewRedeemForIBT}. */\n476      function previewRedeemForIBT(\n477          uint256 shares\n478:     ) public view override whenNotPaused returns (uint256) {\n\n482      /** @dev See {IPrincipalToken-maxRedeem}. */\n483:     function maxRedeem(address owner) public view override returns (uint256) {\n\n487      /** @dev See {IPrincipalToken-convertToPrincipal}. */\n488:     function convertToPrincipal(uint256 underlyingAmount) external view override returns (uint256) {\n\n492      /** @dev See {IPrincipalToken-convertToUnderlying}. */\n493:     function convertToUnderlying(uint256 principalAmount) public view override returns (uint256) {\n\n497      /** @dev See {IPrincipalToken-totalAssets}. */\n498:     function totalAssets() public view override returns (uint256) {\n\n502      /** @dev See {IERC20Metadata-decimals} */\n503:     function decimals() public view override(IERC20Metadata, ERC20Upgradeable) returns (uint8) {\n\n507      /** @dev See {IPrincipalToken-underlying}. */\n508:     function underlying() external view override returns (address) {\n\n512      /** @dev See {IPrincipalToken-maturity}. */\n513:     function maturity() external view override returns (uint256) {\n\n517      /** @dev See {IPrincipalToken-getDuration}. */\n518:     function getDuration() external view override returns (uint256) {\n\n522      /** @dev See {IPrincipalToken-getIBT}. */\n523:     function getIBT() external view override returns (address) {\n\n527      /** @dev See {IPrincipalToken-getYT}. */\n528:     function getYT() external view override returns (address) {\n\n532      /** @dev See {IPrincipalToken-getIBTRate}. */\n533:     function getIBTRate() external view override returns (uint256) {\n\n538      /** @dev See {IPrincipalToken-getPTRate}. */\n539:     function getPTRate() external view override returns (uint256) {\n\n544      /** @dev See {IPrincipalToken-getIBTUnit}. */\n545:     function getIBTUnit() external view override returns (uint256) {\n\n549      /** @dev See {IPrincipalToken-getUnclaimedFeesInIBT}. */\n550:     function getUnclaimedFeesInIBT() external view override returns (uint256) {\n\n554      /** @dev See {IPrincipalToken-getTotalFeesInIBT}. */\n555:     function getTotalFeesInIBT() external view override returns (uint256) {\n\n559      /** @dev See {IPrincipalToken-getCurrentYieldOfUserInIBT}. */\n560      function getCurrentYieldOfUserInIBT(\n561          address _user\n562:     ) external view override returns (uint256 _yieldOfUserInIBT) {\n\n580      /**\n581       * @dev See {IERC3156FlashLender-maxFlashLoan}.\n582       */\n583:     function maxFlashLoan(address _token) public view override returns (uint256) {\n\n591      /**\n592       * @dev See {IERC3156FlashLender-flashFee}.\n593       */\n594:     function flashFee(address _token, uint256 _amount) public view override returns (uint256) {\n\n599      /**\n600       * @dev See {IPrincipalToken-tokenizationFee}.\n601       */\n602:     function getTokenizationFee() public view override returns (uint256) {\n\n606      /**\n607       * @dev See {IERC3156FlashLender-flashLoan}.\n608       */\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612          uint256 _amount,\n613          bytes calldata _data\n614:     ) external override returns (bool) {\n\n```\n",
          "loc": [
            "[482](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L482-L483)",
            "[160](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L160-L161)",
            "[165](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L165-L166)",
            "[170](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L170-L171)",
            "[175](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L175-L180)",
            "[187](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L187-L193)",
            "[200](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L200-L201)",
            "[205](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L205-L210)",
            "[215](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L215-L221)",
            "[228](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L228-L233)",
            "[239](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L239-L245)",
            "[252](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L252-L257)",
            "[264](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L264-L270)",
            "[277](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L277-L282)",
            "[289](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L289-L295)",
            "[302](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L302-L307)",
            "[315](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L315-L321)",
            "[328](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L328-L329)",
            "[339](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L339-L340)",
            "[368](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L368-L369)",
            "[376](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L376-L377)",
            "[384](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L384-L385)",
            "[393](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L393-L394)",
            "[408](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L408-L409)",
            "[419](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L419-L420)",
            "[429](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L429-L430)",
            "[435](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L435-L436)",
            "[440](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L440-L441)",
            "[445](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L445-L448)",
            "[453](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L453-L454)",
            "[458](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L458-L460)",
            "[464](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L464-L466)",
            "[470](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L470-L471)",
            "[475](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L475-L478)",
            "[487](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L487-L488)",
            "[492](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L492-L493)",
            "[497](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L497-L498)",
            "[502](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L502-L503)",
            "[507](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L507-L508)",
            "[512](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L512-L513)",
            "[517](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L517-L518)",
            "[522](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L522-L523)",
            "[527](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L527-L528)",
            "[532](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L532-L533)",
            "[538](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L538-L539)",
            "[544](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L544-L545)",
            "[549](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L549-L550)",
            "[554](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L554-L555)",
            "[559](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L559-L562)",
            "[580](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L580-L583)",
            "[591](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L591-L594)",
            "[599](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L599-L602)",
            "[606](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L606-L614)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n41       /** @dev See {IYieldToken-burnWithoutUpdate} */\n42:      function burnWithoutUpdate(address from, uint256 amount) external override {\n\n49       /** @dev See {IYieldToken-mint} */\n50:      function mint(address to, uint256 amount) external override {\n\n57       /** @dev See {IYieldToken-burn} */\n58:      function burn(uint256 amount) public override {\n\n63       /**\n64        * @dev See {IERC20-transfer}.\n65        *\n66        * Requirements:\n67        *\n68        * - `to` cannot be the zero address.\n69        * - the caller must have a balance of at least `amount`.\n70        */\n71       function transfer(\n72           address to,\n73           uint256 amount\n74:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n79       /**\n80        * @dev See {IERC20-transferFrom}.\n81        *\n82        * Emits an {Approval} event indicating the updated allowance. This is not\n83        * required by the EIP. See the note at the beginning of {ERC20}.\n84        *\n85        * NOTE: Does not update the allowance if the current allowance\n86        * is the maximum `uint256`.\n87        *\n88        * Requirements:\n89        *\n90        * - `from` and `to` cannot be the zero address.\n91        * - `from` must have a balance of at least `amount`.\n92        * - the caller must have allowance for ``from``'s tokens of at least\n93        * `amount`.\n94        */\n95       function transferFrom(\n96           address from,\n97           address to,\n98           uint256 amount\n99:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n104      /** @dev See {IERC20Upgradeable-decimals} */\n105      function decimals()\n106          public\n107          view\n108          virtual\n109          override(IYieldToken, ERC20Upgradeable)\n110          returns (uint8)\n111:     {\n\n115      /** @dev See {IYieldToken-getPT} */\n116:     function getPT() public view virtual override returns (address) {\n\n120      /** @dev See {IYieldToken-balanceOf} */\n121      function balanceOf(\n122          address account\n123:     ) public view override(IYieldToken, ERC20Upgradeable) returns (uint256) {\n\n127      /** @dev See {IYieldToken-actualBalanceOf} */\n128:     function actualBalanceOf(address account) public view override returns (uint256) {\n\n```\n",
          "loc": [
            "[115](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L115-L116)",
            "[120](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L120-L123)",
            "[127](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L127-L128)",
            "[41](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L41-L42)",
            "[49](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L49-L50)",
            "[57](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L57-L58)",
            "[79](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L79-L99)",
            "[104](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L104-L111)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L63-L74)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Not using the named return variables anywhere in the function is confusing",
      "description": "Consider changing the variable to be an unnamed one, since the variable is never assigned, nor is it returned by name. If the optimizer is not turned on, leaving the code as it is will also waste gas for the stack variable.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit shares\n22       function _convertToSharesWithRate(\n23           uint256 _assets,\n24           uint256 _rate,\n25           uint256 _ibtUnit,\n26           Math.Rounding _rounding\n27:      ) internal pure returns (uint256 shares) {\n\n/// @audit assets\n35       function _convertToAssetsWithRate(\n36           uint256 _shares,\n37           uint256 _rate,\n38           uint256 _ibtUnit,\n39           Math.Rounding _rounding\n40:      ) internal pure returns (uint256 assets) {\n\n```\n",
          "loc": [
            "[22](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L22-L27)",
            "[35](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L35-L40)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit success\n71       function transfer(\n72           address to,\n73           uint256 amount\n74:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n/// @audit success\n95       function transferFrom(\n96           address from,\n97           address to,\n98           uint256 amount\n99:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n```\n",
          "loc": [
            "[95](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L95-L99)",
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L71-L74)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Polymorphic functions make security audits more time-consuming and error-prone",
      "description": "The instances below point to one of two functions with the same name. Consider naming each function differently, in order to make code navigation and analysis easier.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/RayMath.sol\n\n35       function fromRay(\n36           uint256 _a,\n37           uint256 _decimals,\n38           bool _roundUp\n39:      ) internal pure returns (uint256 b) {\n\n```\n",
          "loc": [
            "[35](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L35-L39)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n176      function deposit(\n177          uint256 assets,\n178          address ptReceiver,\n179          address ytReceiver\n180:     ) public override returns (uint256 shares) {\n\n188      function deposit(\n189          uint256 assets,\n190          address ptReceiver,\n191          address ytReceiver,\n192          uint256 minShares\n193:     ) external override returns (uint256 shares) {\n\n206      function depositIBT(\n207          uint256 ibts,\n208          address ptReceiver,\n209          address ytReceiver\n210:     ) public override returns (uint256 shares) {\n\n216      function depositIBT(\n217          uint256 ibts,\n218          address ptReceiver,\n219          address ytReceiver,\n220          uint256 minShares\n221:     ) external override returns (uint256 shares) {\n\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243          address owner,\n244          uint256 minAssets\n245:     ) external override returns (uint256 assets) {\n\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268          address owner,\n269          uint256 minIbts\n270:     ) external override returns (uint256 ibts) {\n\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293          address owner,\n294          uint256 maxShares\n295:     ) external override returns (uint256 shares) {\n\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319          address owner,\n320          uint256 maxShares\n321:     ) external override returns (uint256 shares) {\n\n```\n",
          "loc": [
            "[216](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L216-L221)",
            "[240](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L240-L245)",
            "[265](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L265-L270)",
            "[290](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L290-L295)",
            "[316](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L316-L321)",
            "[176](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L176-L180)",
            "[188](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L188-L193)",
            "[206](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L206-L210)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Setters should prevent re-setting of the same value",
      "description": "This especially problematic when the setter also emits the same value, which may be confusing to offline parsers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit _implementation:  _setImplementation(), upgradeTo()\n75       function _setImplementation(address newImplementation) private {\n76           if (newImplementation.code.length == 0) {\n77               revert BeaconInvalidImplementation(newImplementation);\n78           }\n79           _implementation = newImplementation;\n80           emit Upgraded(newImplementation);\n81:      }\n\n```\n",
          "loc": [
            "[75](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L75-L81)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit rewardsProxy:  setRewardsProxy()\n420      function setRewardsProxy(address _rewardsProxy) external restricted {\n421          // Note: address zero is allowed in order to disable the claim proxy\n422          emit RewardsProxyChange(rewardsProxy, _rewardsProxy);\n423          rewardsProxy = _rewardsProxy;\n424:     }\n\n```\n",
          "loc": [
            "[420](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L420-L424)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Control structures do not follow the Solidity Style Guide",
      "description": "See the [control structures](https://docs.soliditylang.org/en/latest/style-guide.html#control-structures) section of the Solidity Style Guide",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n595:          if (_token != ibt) revert AddressError();\n\n595:          if (_token != ibt) revert AddressError();\n\n615:          if (_amount > maxFlashLoan(_token)) revert FlashLoanExceedsMaxAmount();\n\n```\n",
          "loc": [
            "[595](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L595)",
            "[595](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L595)",
            "[615](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L615)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Extraneous whitespace",
      "description": "See the [whitespace](https://docs.soliditylang.org/en/v0.8.16/style-guide.html#whitespace-in-expressions) section of the Solidity Style Guide",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n399:          (bool success, ) = rewardsProxy.delegatecall(_data);\n\n540:          (uint256 _ptRate, ) = _getPTandIBTRates(false);\n\n```\n",
          "loc": [
            "[399](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L399)",
            "[540](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L540)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Function ordering does not follow the Solidity style guide",
      "description": "According to the [Solidity style guide](https://docs.soliditylang.org/en/v0.8.17/style-guide.html#order-of-functions), functions should be laid out in the following order :`constructor()`, `receive()`, `fallback()`, `external`, `public`, `internal`, `private`, but the cases below do not follow this pattern",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit _convertToAssetsWithRate() came earlier\n55        function _computeYield(\n56            address _user,\n57            uint256 _userYieldIBT,\n58            uint256 _oldIBTRate,\n59            uint256 _ibtRate,\n60            uint256 _oldPTRate,\n61            uint256 _ptRate,\n62            address _yt\n63:       ) external view returns (uint256) {\n\n```\n",
          "loc": [
            "[55](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L55-L63)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit deposit() came earlier\n188       function deposit(\n189           uint256 assets,\n190           address ptReceiver,\n191           address ytReceiver,\n192           uint256 minShares\n193:      ) external override returns (uint256 shares) {\n\n/// @audit depositIBT() came earlier\n216       function depositIBT(\n217           uint256 ibts,\n218           address ptReceiver,\n219           address ytReceiver,\n220           uint256 minShares\n221:      ) external override returns (uint256 shares) {\n\n/// @audit redeem() came earlier\n240       function redeem(\n241           uint256 shares,\n242           address receiver,\n243           address owner,\n244           uint256 minAssets\n245:      ) external override returns (uint256 assets) {\n\n/// @audit redeemForIBT() came earlier\n265       function redeemForIBT(\n266           uint256 shares,\n267           address receiver,\n268           address owner,\n269           uint256 minIbts\n270:      ) external override returns (uint256 ibts) {\n\n/// @audit withdraw() came earlier\n290       function withdraw(\n291           uint256 assets,\n292           address receiver,\n293           address owner,\n294           uint256 maxShares\n295:      ) external override returns (uint256 shares) {\n\n/// @audit withdrawIBT() came earlier\n316       function withdrawIBT(\n317           uint256 ibts,\n318           address receiver,\n319           address owner,\n320           uint256 maxShares\n321:      ) external override returns (uint256 shares) {\n\n/// @audit claimYieldInIBT() came earlier\n385:      function beforeYtTransfer(address _from, address _to) external override {\n\n/// @audit storeRatesAtExpiry() came earlier\n420:      function setRewardsProxy(address _rewardsProxy) external restricted {\n\n/// @audit previewDeposit() came earlier\n436:      function previewDepositIBT(uint256 ibts) external view override returns (uint256) {\n\n/// @audit maxRedeem() came earlier\n488:      function convertToPrincipal(uint256 underlyingAmount) external view override returns (uint256) {\n\n/// @audit decimals() came earlier\n508:      function underlying() external view override returns (address) {\n\n/// @audit getTokenizationFee() came earlier\n609       function flashLoan(\n610           IERC3156FlashBorrower _receiver,\n611           address _token,\n612           uint256 _amount,\n613           bytes calldata _data\n614:      ) external override returns (bool) {\n\n```\n",
          "loc": [
            "[240](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L240-L245)",
            "[188](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L188-L193)",
            "[216](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L216-L221)",
            "[265](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L265-L270)",
            "[290](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L290-L295)",
            "[316](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L316-L321)",
            "[385](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L385)",
            "[420](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L420)",
            "[436](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L436)",
            "[488](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L488)",
            "[508](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L508)",
            "[609](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L609-L614)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Lines are too long",
      "description": "Usually lines in source code are limited to [80](https://softwareengineering.stackexchange.com/questions/148677/why-is-80-characters-the-standard-limit-for-code-width) characters. Today's screens are much larger so it's reasonable to stretch this in some cases. The solidity style guide recommends a maximumum line length of [120 characters](https://docs.soliditylang.org/en/v0.8.17/style-guide.html#maximum-line-length), so the lines below should be split when they reach that length.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n34:        * @dev Initializes the contract setting the address of the initial implementation and the initial authority (Access Manager contract).\n\n```\n",
          "loc": [
            "[34](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L34)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n25:    * @notice A PrincipalToken (PT) is an ERC5095 vault that allows user to tokenize their yield in a permissionless manner.\n\n26:    * The shares of the vaults are composed by PT/YT pairs. These are always minted at same times and amounts upon deposits.\n\n637:       * @dev Preview the amount of shares that would be minted for a given amount (ibts) of IBT. This method is used both to preview a deposit with assets and a deposit with IBTs.\n\n702:          (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(true); // to round up the shares, the PT rate must round down\n\n898:       * @param roundUpPTRate true if the ptRate resulting from mulDiv computation in case of negative rate should be rounded up\n\n918:       * @param roundUpPTRate true if the PTRate result from mulDiv computation in case of negative rate should be rounded up\n\n```\n",
          "loc": [
            "[702](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L702)",
            "[898](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L898)",
            "[918](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L918)",
            "[637](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L637)",
            "[26](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L26)",
            "[25](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n13:    * @notice A YieldToken (YT) is a Spectra token that keeps track of users' yield ownership. It is minted at same times and amounts as a PT.\n\n```\n",
          "loc": [
            "[13](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L13)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Non-`external`/`public` variable names should begin with an underscore",
      "description": "According to the Solidity Style Guide, non-`external`/`public` variable names should begin with an [underscore](https://docs.soliditylang.org/en/latest/style-guide.html#underscore-prefix-for-non-external-functions-and-variables)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n18:      uint256 private constant SAFETY_BOUND = 100; // used to favour the protocol in case of approximations\n\n19:      uint256 private constant FEE_DIVISOR = 1e18; // equivalent to 100% fees\n\n```\n",
          "loc": [
            "[19](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L19-L19)",
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L18-L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n40:      uint256 private constant MIN_DECIMALS = 6;\n\n41:      uint256 private constant MAX_DECIMALS = 18;\n\n42:      bytes32 private constant ON_FLASH_LOAN = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n44:      address private immutable registry;\n\n46:      address private rewardsProxy;\n\n47:      bool private ratesAtExpiryStored;\n\n48:      address private ibt; // address of the Interest Bearing Token 4626 held by this PT vault\n\n50:      address private yt; // YT corresponding to this PT, deployed at initialization\n\n51:      uint256 private ibtUnit; // equal to one unit of the IBT held by this PT vault (10^decimals)\n\n55:      uint256 private ptRate; // or PT price in asset (in Ray)\n\n56:      uint256 private ibtRate; // or IBT price in asset (in Ray)\n\n57:      uint256 private unclaimedFeesInIBT; // unclaimed fees\n\n58:      uint256 private totalFeesInIBT; // total fees\n\n59:      uint256 private expiry; // date of maturity (set at initialization)\n\n60:      uint256 private duration; // duration to maturity\n\n62:      mapping(address => uint256) private ibtRateOfUser; // stores each user's IBT rate (in Ray)\n\n63:      mapping(address => uint256) private ptRateOfUser; // stores each user's PT rate (in Ray)\n\n64:      mapping(address => uint256) private yieldOfUserInIBT; // stores each user's yield generated from YTs\n\n```\n",
          "loc": [
            "[44](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L44-L44)",
            "[46](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L46-L46)",
            "[47](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L47-L47)",
            "[48](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L48-L48)",
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L50-L50)",
            "[51](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L51-L51)",
            "[55](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L55-L55)",
            "[56](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L56-L56)",
            "[57](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L57-L57)",
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L58-L58)",
            "[59](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L59-L59)",
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L40-L40)",
            "[62](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L62-L62)",
            "[63](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L63-L63)",
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L64-L64)",
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L60-L60)",
            "[41](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L41-L41)",
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L42-L42)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n18:      address private pt;\n\n```\n",
          "loc": [
            "[18](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L18-L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: State and local variables should be named using lowerCamelCase",
      "description": "The Solidity style guide [says](https://docs.soliditylang.org/en/latest/style-guide.html#local-and-state-variable-names) to use mixedCase for local and state variable names. Note that while OpenZeppelin may not follow this advice, it still is the recommended way of naming variables.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/RayMath.sol\n\n21:          uint256 decimals_ratio = 10 ** (27 - _decimals);\n\n40:          uint256 decimals_ratio = 10 ** (27 - _decimals);\n\n58:          uint256 decimals_ratio = 10 ** (27 - _decimals);\n\n```\n",
          "loc": [
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L58-L58)",
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L40-L40)",
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L21-L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Top-level declarations should be separated by at least two lines",
      "description": "And functions within contracts should be separate by a [single](https://docs.soliditylang.org/en/latest/style-guide.html#blank-lines) line",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n10    import \"../libraries/RayMath.sol\";\n11    \n12:   library PrincipalTokenUtil {\n\n```\n",
          "loc": [
            "[10](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L10-L12)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Variable names for `immutable`s should use CONSTANT_CASE",
      "description": "For `immutable` variable names, each word should use all capital letters, with underscores separating each word (CONSTANT_CASE)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n65:      address private immutable _admin;\n\n```\n",
          "loc": [
            "[65](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L65-L65)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n44:      address private immutable registry;\n\n```\n",
          "loc": [
            "[44](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L44-L44)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "The `nonReentrant` `modifier` should occur before all other modifiers",
      "description": "This is a best-practice to protect against reentrancy in other modifiers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n750      function _depositIBT(\n751          uint256 _ibts,\n752          address _ptReceiver,\n753          address _ytReceiver\n754:     ) internal notExpired nonReentrant whenNotPaused returns (uint256 shares) {\n\n828:     function _beforeWithdraw(uint256 _assets, address _owner) internal whenNotPaused nonReentrant {\n\n```\n",
          "loc": [
            "[828](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L828-L828)",
            "[750](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L750-L754)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Typos",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit intializes\n115:       * it deploys yt and intializes values of required variables\n\n```\n",
          "loc": [
            "[115](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L115)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused `public` contract variable",
      "description": "Note that there may be cases where a variable superficially appears to be used, but this is only because there are multiple definitions of the variable in different files. In such cases, the variable definition should be moved into a separate file. The instances below are the unused variables.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n23:      string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n```\n",
          "loc": [
            "[23](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L23-L23)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use `abi.encodeCall()` instead of `abi.encodeWithSignature()`/`abi.encodeWithSelector()`",
      "description": "`abi.encodeCall()` has compiler [type safety](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3693), whereas the other two functions do not",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n398:         _data = abi.encodeWithSelector(IRewardsProxy(rewardsProxy).claimRewards.selector, _data);\n\n732:                 abi.encodeWithSelector(\n\n```\n",
          "loc": [
            "[398](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L398-L398)",
            "[732](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L732-L732)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use of `override` is unnecessary",
      "description": "Starting with Solidity version [0.8.8](https://docs.soliditylang.org/en/v0.8.20/contracts.html#function-overriding), using the `override` keyword when the function solely overrides an interface function, and the function doesn't exist in multiple base contracts, is unnecessary.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n101:     function _fallback() internal virtual override {\n\n```\n",
          "loc": [
            "[101](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L101-L101)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n161:     function pause() external override restricted {\n\n166:     function unPause() external override restricted {\n\n171:     function deposit(uint256 assets, address receiver) external override returns (uint256 shares) {\n\n176      function deposit(\n177          uint256 assets,\n178          address ptReceiver,\n179          address ytReceiver\n180:     ) public override returns (uint256 shares) {\n\n188      function deposit(\n189          uint256 assets,\n190          address ptReceiver,\n191          address ytReceiver,\n192          uint256 minShares\n193:     ) external override returns (uint256 shares) {\n\n201:     function depositIBT(uint256 ibts, address receiver) external override returns (uint256 shares) {\n\n206      function depositIBT(\n207          uint256 ibts,\n208          address ptReceiver,\n209          address ytReceiver\n210:     ) public override returns (uint256 shares) {\n\n216      function depositIBT(\n217          uint256 ibts,\n218          address ptReceiver,\n219          address ytReceiver,\n220          uint256 minShares\n221:     ) external override returns (uint256 shares) {\n\n229      function redeem(\n230          uint256 shares,\n231          address receiver,\n232          address owner\n233:     ) public override returns (uint256 assets) {\n\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243          address owner,\n244          uint256 minAssets\n245:     ) external override returns (uint256 assets) {\n\n253      function redeemForIBT(\n254          uint256 shares,\n255          address receiver,\n256          address owner\n257:     ) public override returns (uint256 ibts) {\n\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268          address owner,\n269          uint256 minIbts\n270:     ) external override returns (uint256 ibts) {\n\n278      function withdraw(\n279          uint256 assets,\n280          address receiver,\n281          address owner\n282:     ) public override returns (uint256 shares) {\n\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293          address owner,\n294          uint256 maxShares\n295:     ) external override returns (uint256 shares) {\n\n303      function withdrawIBT(\n304          uint256 ibts,\n305          address receiver,\n306          address owner\n307:     ) public override returns (uint256 shares) {\n\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319          address owner,\n320          uint256 maxShares\n321:     ) external override returns (uint256 shares) {\n\n329:     function claimFees() external override returns (uint256 assets) {\n\n340:     function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n\n369:     function claimYield(address _receiver) public override returns (uint256 yieldInAsset) {\n\n377:     function claimYieldInIBT(address _receiver) public override returns (uint256 yieldInIBT) {\n\n385:     function beforeYtTransfer(address _from, address _to) external override {\n\n409:     function storeRatesAtExpiry() public override afterExpiry {\n\n430:     function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n436:     function previewDepositIBT(uint256 ibts) external view override returns (uint256) {\n\n441:     function maxDeposit(address) external pure override returns (uint256) {\n\n446      function previewWithdraw(\n447          uint256 assets\n448:     ) external view override whenNotPaused returns (uint256) {\n\n454:     function previewWithdrawIBT(uint256 ibts) public view override whenNotPaused returns (uint256) {\n\n460:     function maxWithdraw(address owner) public view override whenNotPaused returns (uint256) {\n\n466:     function maxWithdrawIBT(address owner) public view override whenNotPaused returns (uint256) {\n\n471:     function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n476      function previewRedeemForIBT(\n477          uint256 shares\n478:     ) public view override whenNotPaused returns (uint256) {\n\n483:     function maxRedeem(address owner) public view override returns (uint256) {\n\n488:     function convertToPrincipal(uint256 underlyingAmount) external view override returns (uint256) {\n\n493:     function convertToUnderlying(uint256 principalAmount) public view override returns (uint256) {\n\n498:     function totalAssets() public view override returns (uint256) {\n\n503:     function decimals() public view override(IERC20Metadata, ERC20Upgradeable) returns (uint8) {\n\n508:     function underlying() external view override returns (address) {\n\n513:     function maturity() external view override returns (uint256) {\n\n518:     function getDuration() external view override returns (uint256) {\n\n523:     function getIBT() external view override returns (address) {\n\n528:     function getYT() external view override returns (address) {\n\n533:     function getIBTRate() external view override returns (uint256) {\n\n539:     function getPTRate() external view override returns (uint256) {\n\n545:     function getIBTUnit() external view override returns (uint256) {\n\n550:     function getUnclaimedFeesInIBT() external view override returns (uint256) {\n\n555:     function getTotalFeesInIBT() external view override returns (uint256) {\n\n560      function getCurrentYieldOfUserInIBT(\n561          address _user\n562:     ) external view override returns (uint256 _yieldOfUserInIBT) {\n\n583:     function maxFlashLoan(address _token) public view override returns (uint256) {\n\n594:     function flashFee(address _token, uint256 _amount) public view override returns (uint256) {\n\n602:     function getTokenizationFee() public view override returns (uint256) {\n\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612          uint256 _amount,\n613          bytes calldata _data\n614:     ) external override returns (bool) {\n\n```\n",
          "loc": [
            "[253](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L253-L257)",
            "[166](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L166-L166)",
            "[161](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L161-L161)",
            "[265](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L265-L270)",
            "[278](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L278-L282)",
            "[290](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L290-L295)",
            "[303](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L303-L307)",
            "[316](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L316-L321)",
            "[329](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L329-L329)",
            "[340](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L340-L340)",
            "[369](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L369-L369)",
            "[377](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L377-L377)",
            "[385](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L385-L385)",
            "[409](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L409-L409)",
            "[430](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L430-L430)",
            "[436](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L436-L436)",
            "[441](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L441-L441)",
            "[446](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L446-L448)",
            "[454](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L454-L454)",
            "[460](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L460-L460)",
            "[466](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L466-L466)",
            "[471](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L471-L471)",
            "[476](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L476-L478)",
            "[483](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L483-L483)",
            "[488](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L488-L488)",
            "[493](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L493-L493)",
            "[498](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L498-L498)",
            "[503](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L503-L503)",
            "[508](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L508-L508)",
            "[513](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L513-L513)",
            "[518](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L518-L518)",
            "[523](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L523-L523)",
            "[528](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L528-L528)",
            "[533](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L533-L533)",
            "[539](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L539-L539)",
            "[545](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L545-L545)",
            "[550](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L550-L550)",
            "[555](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L555-L555)",
            "[560](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L560-L562)",
            "[583](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L583-L583)",
            "[594](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L594-L594)",
            "[602](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L602-L602)",
            "[609](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L609-L614)",
            "[176](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L176-L180)",
            "[188](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L188-L193)",
            "[206](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L206-L210)",
            "[201](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L201-L201)",
            "[216](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L216-L221)",
            "[229](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L229-L233)",
            "[240](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L240-L245)",
            "[171](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L171-L171)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n42:      function burnWithoutUpdate(address from, uint256 amount) external override {\n\n50:      function mint(address to, uint256 amount) external override {\n\n58:      function burn(uint256 amount) public override {\n\n71       function transfer(\n72           address to,\n73           uint256 amount\n74:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n95       function transferFrom(\n96           address from,\n97           address to,\n98           uint256 amount\n99:      ) public virtual override(IYieldToken, ERC20Upgradeable) returns (bool success) {\n\n105      function decimals()\n106          public\n107          view\n108          virtual\n109          override(IYieldToken, ERC20Upgradeable)\n110          returns (uint8)\n111:     {\n\n116:     function getPT() public view virtual override returns (address) {\n\n121      function balanceOf(\n122          address account\n123:     ) public view override(IYieldToken, ERC20Upgradeable) returns (uint256) {\n\n128:     function actualBalanceOf(address account) public view override returns (uint256) {\n\n```\n",
          "loc": [
            "[121](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L121-L123)",
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L42-L42)",
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L50-L50)",
            "[58](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L58-L58)",
            "[71](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L71-L74)",
            "[95](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L95-L99)",
            "[105](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L105-L111)",
            "[116](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L116-L116)",
            "[128](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L128-L128)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables can be packed into fewer storage slots by truncating timestamp bytes",
      "description": "By using a `uint32` rather than a larger type for variables that track timestamps/block numbers, one can save gas by using fewer storage slots per struct, at the expense of the protocol breaking after the year 2106 (when `uint32` wraps). If this is an acceptable tradeoff, if variables occupying the same slot are both written the same function or by the constructor, avoids a separate Gsset (**20000 gas**). Reads of the variables can also be cheaper",
      "gasSavings": 2000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit Variable ordering with 15 slots instead of the current 16:\n///           uint256(32):ibtUnit, uint256(32):_ibtDecimals, uint256(32):_assetDecimals, uint256(32):ptRate, uint256(32):ibtRate, uint256(32):unclaimedFeesInIBT, uint256(32):totalFeesInIBT, uint256(32):expiry, mapping(32):ibtRateOfUser, mapping(32):ptRateOfUser, mapping(32):yieldOfUserInIBT, address(20):rewardsProxy, uint64(8):duration, bool(1):ratesAtExpiryStored, address(20):ibt, address(20):_asset, address(20):yt\n29:   contract PrincipalToken is\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid updating storage when the value hasn't changed",
      "description": "If the old value is equal to the new value, not re-storing the value will avoid a Gsreset (**2900 gas**), potentially at the expense of a Gcoldsload (**2100 gas**) or a Gwarmaccess (**100 gas**)",
      "gasSavings": 1600,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit _implementation:  _setImplementation(), upgradeTo()\n75       function _setImplementation(address newImplementation) private {\n76           if (newImplementation.code.length == 0) {\n77               revert BeaconInvalidImplementation(newImplementation);\n78           }\n79           _implementation = newImplementation;\n80           emit Upgraded(newImplementation);\n81:      }\n\n```\n",
          "loc": [
            "[75](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L75-L81)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit rewardsProxy:  setRewardsProxy()\n420      function setRewardsProxy(address _rewardsProxy) external restricted {\n421          // Note: address zero is allowed in order to disable the claim proxy\n422          emit RewardsProxyChange(rewardsProxy, _rewardsProxy);\n423          rewardsProxy = _rewardsProxy;\n424:     }\n\n```\n",
          "loc": [
            "[420](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L420-L424)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Events should be emitted outside of loops",
      "description": "Emitting an event has an overhead of **375 gas**, which will be incurred on every iteration of the loop. It is cheaper to `emit` only [once](https://github.com/ethereum/EIPs/blob/adad5968fd6de29902174e0cb51c8fc3dceb9ab5/EIPS/eip-1155.md?plain=1#L68) after the loop has finished.",
      "gasSavings": 750,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit  redeemForIBT(), _dispatch(), execute()\n261:         emit Redeem(owner, receiver, shares);\n\n/// @audit  _depositIBT(), depositIBT(), _dispatch(), execute()\n767:         emit Mint(msg.sender, _ptReceiver, shares);\n\n```\n",
          "loc": [
            "[261](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L261-L261)",
            "[767](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L767-L767)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Use scratch space for building calldata",
      "description": "If an external call's calldata can fit into two or fewer words, use the scratch space to build the calldata, rather than allowing Solidity to do a memory expansion.",
      "gasSavings": 4620,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n68:          uint256 userYTBalanceInRay = IYieldToken(_yt).actualBalanceOf(_user).toRay(\n\n166:                     FEE_DIVISOR - IRegistry(_registry).getFeeReduction(_pt, msg.sender),\n\n```\n",
          "loc": [
            "[166](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L166-L166)",
            "[68](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L68-L68)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n152:         ibtRate = IERC4626(ibt).previewRedeem(ibtUnit).toRay(_assetDecimals);\n\n183:         uint256 ibts = IERC4626(ibt).deposit(assets, address(this));\n\n308:         _beforeWithdraw(IERC4626(ibt).previewRedeem(ibts), owner);\n\n431:         uint256 ibts = IERC4626(ibt).previewDeposit(assets);\n\n449:         uint256 ibts = IERC4626(ibt).previewWithdraw(assets);\n\n472:         return IERC4626(ibt).previewRedeem(previewRedeemForIBT(shares));\n\n489:         return _convertIBTsToShares(IERC4626(ibt).previewDeposit(underlyingAmount), false);\n\n494:         return IERC4626(ibt).previewRedeem(_convertSharesToIBTs(principalAmount, false));\n\n499:         return IERC4626(ibt).previewRedeem(IERC4626(ibt).balanceOf(address(this)));\n\n499:         return IERC4626(ibt).previewRedeem(IERC4626(ibt).balanceOf(address(this)));\n\n588:         return IERC4626(ibt).balanceOf(address(this));\n\n768:         IYieldToken(yt).mint(_ytReceiver, shares);\n\n794:             IYieldToken(yt).burnWithoutUpdate(_owner, shares);\n\n818:             IYieldToken(yt).burnWithoutUpdate(_owner, _shares);\n\n871:             uint256 ytBalance = IYieldToken(yt).balanceOf(_user);\n\n902:         uint256 currentIBTRate = IERC4626(ibt).previewRedeem(ibtUnit).toRay(_assetDecimals);\n\n```\n",
          "loc": [
            "[494](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L494-L494)",
            "[499](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L499-L499)",
            "[499](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L499-L499)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152-L152)",
            "[768](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L768-L768)",
            "[794](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L794-L794)",
            "[818](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L818-L818)",
            "[871](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L871-L871)",
            "[902](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L902-L902)",
            "[588](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L588-L588)",
            "[183](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L183-L183)",
            "[308](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L308-L308)",
            "[431](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L431-L431)",
            "[449](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L449-L449)",
            "[472](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L472-L472)",
            "[489](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L489-L489)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n59:          IPrincipalToken(pt).updateYield(msg.sender);\n\n75:          IPrincipalToken(pt).beforeYtTransfer(msg.sender, to);\n\n100:         IPrincipalToken(pt).beforeYtTransfer(from, to);\n\n```\n",
          "loc": [
            "[100](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L100-L100)",
            "[75](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L75-L75)",
            "[59](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L59-L59)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Avoid fetching a low-level call's return data by using assembly",
      "description": "Even if you don't assign the call's second return value, it still gets copied to memory. Use assembly instead to prevent this and save **159 [gas](https://gist.github.com/IllIllI000/0e18a40f3afb0b83f9a347b10ee89ad2)**:\r\n\r\n`(bool success,) = payable(receiver).call{gas: gas, value: value}(\"\");` -> `bool success; assembly { success := call(gas, receiver, value, 0, 0, 0, 0) }`",
      "gasSavings": 159,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n399:         (bool success, ) = rewardsProxy.delegatecall(_data);\n\n```\n",
          "loc": [
            "[399](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L399-L399)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Calculations should be memoized rather than re-calculating them",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n64:          if (_oldPTRate == _ptRate && _ibtRate == _oldIBTRate) {\n\n73:          if (_oldPTRate == _ptRate && _ibtRate > _oldIBTRate) {\n\n```\n",
          "loc": [
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L64-L64)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L73-L73)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider pre-calculating the address of `address(this)` to save gas",
      "description": "Use `foundry`'s [`script.sol`](https://book.getfoundry.sh/reference/forge-std/compute-create-address) or `solady`'s [`LibRlp.sol`](https://github.com/Vectorized/solady/blob/main/src/utils/LibRLP.sol) to save the value in a constant, which will avoid having to spend gas to push the value on the stack every time it's used.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n181:         IERC20(_asset).safeTransferFrom(msg.sender, address(this), assets);\n\n183:         uint256 ibts = IERC4626(ibt).deposit(assets, address(this));\n\n211:         IERC20(ibt).safeTransferFrom(msg.sender, address(this), ibts);\n\n235:         assets = IERC4626(ibt).redeem(_convertSharesToIBTs(shares, false), receiver, address(this));\n\n285:         uint256 ibts = IERC4626(ibt).withdraw(assets, receiver, address(this));\n\n335:         assets = IERC4626(ibt).redeem(ibts, msg.sender, address(this));\n\n372:             yieldInAsset = IERC4626(ibt).redeem(yieldInIBT, _receiver, address(this));\n\n499:         return IERC4626(ibt).previewRedeem(IERC4626(ibt).balanceOf(address(this)));\n\n588:         return IERC4626(ibt).balanceOf(address(this));\n\n628:         IERC20(ibt).safeTransferFrom(address(_receiver), address(this), _amount + fee);\n\n646:             address(this),\n\n736:                     address(this)\n\n758:             address(this),\n\n```\n",
          "loc": [
            "[628](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L628-L628)",
            "[181](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L181-L181)",
            "[183](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L183-L183)",
            "[211](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L211-L211)",
            "[235](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L235-L235)",
            "[285](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L285-L285)",
            "[335](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L335-L335)",
            "[372](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L372-L372)",
            "[499](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L499-L499)",
            "[588](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L588-L588)",
            "[646](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L646-L646)",
            "[736](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L736-L736)",
            "[758](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L758-L758)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider using `solady`'s token contracts to save gas",
      "description": "They're written using heavily-optimized assembly, and will your users a lot of gas",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit ERC20PermitUpgradeable\n/// @audit ERC20Upgradeable\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)",
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit ERC20Upgradeable\n/// @audit ERC20PermitUpgradeable\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)",
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `calldata` instead of `memory` for read-only arguments in `public`/`external` functions saves gas",
      "description": "When a function with a `memory` array is called externally, the `abi.decode()` step has to copy read each index of the `calldata` to `memory`. **Each copy costs at least 60 gas** (i.e. `60 * <mem_array>.length`). Using `calldata` directly, obviates the need for copies of words of the struct/array not being read. Note that even if an interface defines a function as having `memory` arguments, it's still valid for implementation contracts to use `calldata` arguments instead. \r\n\r\nIf the array is passed to an `internal` function which passes the array to another internal function where the array is modified and therefore `memory` is used in the `external` call, it's still more gass-efficient to use `calldata` when the `external` function uses modifiers, since the modifiers may prevent the internal functions from being called. Structs have the same overhead as an array of length one\r\n\r\nNote that I've also flagged instances where the function is `public` but can be marked as `external` since it's not called by the contract (you may have to change the visibility of the `interface`'s version of the function to `external` [first](https://docs.soliditylang.org/en/v0.8.20/contracts.html#function-overriding)), and cases where a constructor is involved",
      "gasSavings": 240,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n/// @audit data\n40       function upgradeAndCall(\n41           IAMTransparentUpgradeableProxy proxy,\n42           address implementation,\n43           bytes memory data\n44:      ) public payable virtual restricted {\n\n```\n",
          "loc": [
            "[40](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L43-L43)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit _data\n394:     function claimRewards(bytes memory _data) external restricted {\n\n```\n",
          "loc": [
            "[394](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L394-L394)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid transferring amounts of zero in order to save gas",
      "description": "Skipping the external call when nothing will be transferred, will save at least **100 gas**",
      "gasSavings": 700,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n181:         IERC20(_asset).safeTransferFrom(msg.sender, address(this), assets);\n\n211:         IERC20(ibt).safeTransferFrom(msg.sender, address(this), ibts);\n\n260:         IERC20(ibt).safeTransfer(receiver, ibts);\n\n312:         IERC20(ibt).safeTransfer(receiver, ibts);\n\n621:         IERC20(ibt).safeTransfer(address(_receiver), _amount);\n\n```\n",
          "loc": [
            "[312](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L312-L312)",
            "[621](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L621-L621)",
            "[211](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L211-L211)",
            "[260](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L260-L260)",
            "[181](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L181-L181)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n76:          return super.transfer(to, amount);\n\n101:         return super.transferFrom(from, to, amount);\n\n```\n",
          "loc": [
            "[101](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L101-L101)",
            "[76](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L76-L76)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `bool`s for storage incurs overhead",
      "description": "```solidity\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n```\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\r\nUse `uint256(0)` and `uint256(1)` for true/false to avoid a Gwarmaccess (**[100 gas](https://gist.github.com/IllIllI000/1b70014db712f8572a72378321250058)**) for the extra SLOAD",
      "gasSavings": 100,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n47:      bool private ratesAtExpiryStored;\n\n```\n",
          "loc": [
            "[47](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L47-L47)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables should be cached in stack variables rather than re-reading them from storage",
      "description": "The instances below point to the second+ access of a state variable within a function. Caching of a state variable replaces each Gwarmaccess (**100 gas**) with a much cheaper stack read. Other less obvious fixes/optimizations include having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.",
      "gasSavings": 2328,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit rewardsProxy on line 395\n398:          _data = abi.encodeWithSelector(IRewardsProxy(rewardsProxy).claimRewards.selector, _data);\n\n/// @audit rewardsProxy on line 398\n399:          (bool success, ) = rewardsProxy.delegatecall(_data);\n\n/// @audit ibt on line 150\n152:          ibtRate = IERC4626(ibt).previewRedeem(ibtUnit).toRay(_assetDecimals);\n\n/// @audit ibt on line 182\n183:          uint256 ibts = IERC4626(ibt).deposit(assets, address(this));\n\n/// @audit ibt on line 308\n312:          IERC20(ibt).safeTransfer(receiver, ibts);\n\n/// @audit ibt on line 499\n499:          return IERC4626(ibt).previewRedeem(IERC4626(ibt).balanceOf(address(this)));\n\n/// @audit ibt on line 584\n588:          return IERC4626(ibt).balanceOf(address(this));\n\n/// @audit ibt on line 621\n628:          IERC20(ibt).safeTransferFrom(address(_receiver), address(this), _amount + fee);\n\n/// @audit ibt on line 902\n/// @audit ibt on line 903\n903:          if (IERC4626(ibt).totalAssets() == 0 && IERC4626(ibt).totalSupply() != 0) {\n\n/// @audit _asset on line 131\n142:          _assetDecimals = PrincipalTokenUtil._tryGetTokenDecimals(_asset);\n\n/// @audit _asset on line 181\n182:          IERC20(_asset).safeIncreaseAllowance(ibt, assets);\n\n/// @audit ibtUnit on line 151\n152:          ibtRate = IERC4626(ibt).previewRedeem(ibtUnit).toRay(_assetDecimals);\n\n/// @audit _ibtDecimals on line 141\n145:              _assetDecimals > _ibtDecimals ||\n\n/// @audit _ibtDecimals on line 145\n146:              _ibtDecimals > MAX_DECIMALS\n\n/// @audit _ibtDecimals on line 146\n151:          ibtUnit = 10 ** _ibtDecimals;\n\n/// @audit _assetDecimals on line 142\n144:              _assetDecimals < MIN_DECIMALS ||\n\n/// @audit _assetDecimals on line 144\n145:              _assetDecimals > _ibtDecimals ||\n\n/// @audit _assetDecimals on line 145\n152:          ibtRate = IERC4626(ibt).previewRedeem(ibtUnit).toRay(_assetDecimals);\n\n/// @audit expiry on line 133\n135:          string memory name = NamingUtil.genPTName(_ibtSymbol, expiry);\n\n/// @audit expiry on line 135\n136:          __ERC20_init(name, NamingUtil.genPTSymbol(_ibtSymbol, expiry));\n\n/// @audit expiry on line 136\n155:              NamingUtil.genYTName(_ibtSymbol, expiry),\n\n/// @audit expiry on line 155\n156:              NamingUtil.genYTSymbol(_ibtSymbol, expiry)\n\n/// @audit expiry on line 880\n886:          if (block.timestamp < expiry) {\n\n```\n",
          "loc": [
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152)",
            "[398](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L398)",
            "[399](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L399)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152)",
            "[183](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L183)",
            "[312](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L312)",
            "[499](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L499)",
            "[588](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L588)",
            "[628](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L628)",
            "[903](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L903)",
            "[903](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L903)",
            "[142](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L142)",
            "[182](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L182)",
            "[145](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L145)",
            "[146](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L146)",
            "[151](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L151)",
            "[144](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L144)",
            "[145](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L145)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152)",
            "[135](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L135)",
            "[136](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L136)",
            "[155](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L155)",
            "[156](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L156)",
            "[886](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L886)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use the inputs/results of assignments rather than re-reading state variables",
      "description": "When a state variable is assigned, it saves gas to use the value being assigned, later in the function, rather than re-reading the state variable itself. If needed, it can also be stored to a local variable, and be used in that way. Both options avoid a Gwarmaccess (**100 gas**). Note that if the operation is, say `+=`, the assignment also results in a value which can be used. The instances below point to the first reference after the assignment, since later references are already covered by issues describing the caching of state variable values.",
      "gasSavings": 582,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit use result of assignment of expiry, here\n135:         string memory name = NamingUtil.genPTName(_ibtSymbol, expiry);\n\n/// @audit use result of assignment of _asset, here\n142:         _assetDecimals = PrincipalTokenUtil._tryGetTokenDecimals(_asset);\n\n/// @audit use result of assignment of _assetDecimals, here\n144:             _assetDecimals < MIN_DECIMALS ||\n\n/// @audit use result of assignment of _ibtDecimals, here\n146:             _ibtDecimals > MAX_DECIMALS\n\n/// @audit use result of assignment of ibt, here\n/// @audit use result of assignment of ibtUnit, here\n152:         ibtRate = IERC4626(ibt).previewRedeem(ibtUnit).toRay(_assetDecimals);\n\n```\n",
          "loc": [
            "[146](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L146-L146)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152-L152)",
            "[152](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L152-L152)",
            "[135](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L135-L135)",
            "[142](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L142-L142)",
            "[144](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L144-L144)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple accesses of a mapping/array should use a local variable cache",
      "description": "The instances below point to the second+ access of a value inside a mapping/array, within a function. Caching a mapping's value in a local `storage` or `calldata` variable when the value is accessed [multiple times](https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0), saves **~42 gas per access** due to not having to recalculate the key's keccak256 hash (`Gkeccak256` - **30 gas**) and that calculation's associated stack operations. Caching an array's struct avoids recalculating the array offsets into memory/calldata",
      "gasSavings": 126,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit ibtRateOfUser...[]\n345:             ibtRateOfUser[_user] = _ibtRate;\n\n/// @audit ptRateOfUser...[]\n349:             ptRateOfUser[_user] = _ptRate;\n\n/// @audit yieldOfUserInIBT...[]\n363:             yieldOfUserInIBT[_user] = updatedUserYieldInIBT;\n\n```\n",
          "loc": [
            "[363](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L363-L363)",
            "[349](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L349-L349)",
            "[345](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L345-L345)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Combine `mapping`s referenced in the same function by the same key",
      "description": "Reads and subsequent writes can also be cheaper when a function requires both values and they both fit in the same storage slot (i.e. runtime gas savings). Even if the values can't be packed, if both fields are accessed in the same function (as is the case for these instances), combining them can save **~42 gas per access** due to [not having to recalculate the key's keccak256 hash](https://gist.github.com/IllIllI000/639032d73e35d7e968ff58d8784bc445) (Gkeccak256 - 30 gas) and that calculation's associated stack operations.",
      "gasSavings": 84,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit combine into a `struct`: ibtRateOfUser,ptRateOfUser,yieldOfUserInIBT\n340      function updateYield(address _user) public override returns (uint256 updatedUserYieldInIBT) {\n341          (uint256 _ptRate, uint256 _ibtRate) = _updatePTandIBTRates();\n342  \n343          uint256 _oldIBTRateUser = ibtRateOfUser[_user];\n344          if (_oldIBTRateUser != _ibtRate) {\n345              ibtRateOfUser[_user] = _ibtRate;\n346          }\n347          uint256 _oldPTRateUser = ptRateOfUser[_user];\n348          if (_oldPTRateUser != _ptRate) {\n349              ptRateOfUser[_user] = _ptRate;\n350          }\n351  \n352          // Check for skipping yield update when the user deposits for the first time or rates decreased to 0.\n353          if (_oldIBTRateUser != 0) {\n354              updatedUserYieldInIBT = PrincipalTokenUtil._computeYield(\n355                  _user,\n356                  yieldOfUserInIBT[_user],\n357                  _oldIBTRateUser,\n358                  _ibtRate,\n359                  _oldPTRateUser,\n360                  _ptRate,\n361                  yt\n362              );\n363              yieldOfUserInIBT[_user] = updatedUserYieldInIBT;\n364              emit YieldUpdated(_user, updatedUserYieldInIBT);\n365          }\n366:     }\n\n/// @audit combine into a `struct`: ibtRateOfUser,ptRateOfUser,yieldOfUserInIBT\n560      function getCurrentYieldOfUserInIBT(\n561          address _user\n562      ) external view override returns (uint256 _yieldOfUserInIBT) {\n563          (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n564          uint256 _oldIBTRate = ibtRateOfUser[_user];\n565          uint256 _oldPTRate = ptRateOfUser[_user];\n566          if (_oldIBTRate != 0) {\n567              _yieldOfUserInIBT = PrincipalTokenUtil._computeYield(\n568                  _user,\n569                  yieldOfUserInIBT[_user],\n570                  _oldIBTRate,\n571                  _ibtRate,\n572                  _oldPTRate,\n573                  _ptRate,\n574                  yt\n575              );\n576              _yieldOfUserInIBT -= PrincipalTokenUtil._computeYieldFee(_yieldOfUserInIBT, registry);\n577          }\n578:     }\n\n```\n",
          "loc": [
            "[560](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L560-L578)",
            "[340](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L340-L366)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Add `unchecked {}` for subtractions where the operands cannot underflow because of a previous `require()` or `if`-statement",
      "description": "`require(a <= b); x = b - a` => `require(a <= b); unchecked { x = b - a }`",
      "gasSavings": 90,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n/// @audit if-condition on line 77\n85:                               _oldPTRate - _ptRate,\n\n/// @audit if-condition on line 77\n100:                          _oldPTRate - _ptRate,\n\n/// @audit if-condition on line 80\n91:                               _ibtRate - _oldIBTRate,\n\n```\n",
          "loc": [
            "[100](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L100)",
            "[91](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L91)",
            "[85](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L85)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Functions guaranteed to revert when called by normal users can be marked `payable`",
      "description": "If a function modifier such as `onlyOwner` is used, or a function checks `msg.sender` some other way, the function will revert if a normal user tries to pay the function. Marking the function as `payable` will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided. The extra opcodes avoided are `CALLVALUE`(2),`DUP1`(3),`ISZERO`(3),`PUSH2`(3),`JUMPI`(10),`PUSH1`(3),`DUP1`(3),`REVERT`(0),`JUMPDEST`(1),`POP`(2), which costs an average of about **21 gas per call** to the function, in addition to the extra deployment cost",
      "gasSavings": 273,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n229      function redeem(\n230          uint256 shares,\n231          address receiver,\n232          address owner\n233:     ) public override returns (uint256 assets) {\n\n240      function redeem(\n241          uint256 shares,\n242          address receiver,\n243          address owner,\n244          uint256 minAssets\n245:     ) external override returns (uint256 assets) {\n\n253      function redeemForIBT(\n254          uint256 shares,\n255          address receiver,\n256          address owner\n257:     ) public override returns (uint256 ibts) {\n\n265      function redeemForIBT(\n266          uint256 shares,\n267          address receiver,\n268          address owner,\n269          uint256 minIbts\n270:     ) external override returns (uint256 ibts) {\n\n278      function withdraw(\n279          uint256 assets,\n280          address receiver,\n281          address owner\n282:     ) public override returns (uint256 shares) {\n\n290      function withdraw(\n291          uint256 assets,\n292          address receiver,\n293          address owner,\n294          uint256 maxShares\n295:     ) external override returns (uint256 shares) {\n\n303      function withdrawIBT(\n304          uint256 ibts,\n305          address receiver,\n306          address owner\n307:     ) public override returns (uint256 shares) {\n\n316      function withdrawIBT(\n317          uint256 ibts,\n318          address receiver,\n319          address owner,\n320          uint256 maxShares\n321:     ) external override returns (uint256 shares) {\n\n329:     function claimFees() external override returns (uint256 assets) {\n\n385:     function beforeYtTransfer(address _from, address _to) external override {\n\n609      function flashLoan(\n610          IERC3156FlashBorrower _receiver,\n611          address _token,\n612          uint256 _amount,\n613          bytes calldata _data\n614:     ) external override returns (bool) {\n\n```\n",
          "loc": [
            "[278](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L278-L282)",
            "[265](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L265-L270)",
            "[253](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L253-L257)",
            "[303](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L303-L307)",
            "[316](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L316-L321)",
            "[329](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L329-L329)",
            "[385](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L385-L385)",
            "[609](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L609-L614)",
            "[240](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L240-L245)",
            "[229](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L229-L233)",
            "[290](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L290-L295)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n42:      function burnWithoutUpdate(address from, uint256 amount) external override {\n\n50:      function mint(address to, uint256 amount) external override {\n\n```\n",
          "loc": [
            "[42](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L42-L42)",
            "[50](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L50-L50)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Constructors can be marked `payable`",
      "description": "Payable functions cost less gas to execute, since the compiler does not have to add extra checks to ensure that a payment wasn't provided. A constructor can safely be marked as payable, since only the deployer would be able to pass funds, and the project itself would not pass any funds.",
      "gasSavings": 84,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n39:       constructor(address implementation_, address initialAuthority) AccessManaged(initialAuthority) {\n\n```\n",
          "loc": [
            "[39](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L39)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n28:       constructor(address initialAuthority) AccessManaged(initialAuthority) {}\n\n```\n",
          "loc": [
            "[28](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L28)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n102:      constructor(address _registry) {\n\n```\n",
          "loc": [
            "[102](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n21        constructor() {\n22:           _disableInitializers(); // using this so that the deployed logic contract later cannot be initialized.\n\n```\n",
          "loc": [
            "[21](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L21-L22)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`internal` functions only called once can be inlined to save gas",
      "description": "Not inlining costs **20 to 40 gas** because of two extra `JUMP` instructions and additional stack operations needed for function calls. The inliner can do it only for 'simple' cases:\r\n> Now to get back to the point why we require the routine to be simple: As soon as you do more complicated things like for example branching, calling external contracts, the Common Subexpression Eliminator cannot re-construct the code anymore or does not do full symbolic evaluation of the expressions. \r\n\r\nhttps://soliditylang.org/blog/2021/03/02/saving-gas-with-simple-inliner/\r\n\r\nTherefore, the instances below contain branching or use op-codes with side-effects",
      "gasSavings": 60,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n701:     function _convertIBTsToSharesPreview(uint256 ibts) internal view returns (uint256 shares) {\n\n724:     function _deployYT(string memory _name, string memory _symbol) internal returns (address _yt) {\n\n879:     function _updatePTandIBTRates() internal returns (uint256 _ptRate, uint256 _ibtRate) {\n\n```\n",
          "loc": [
            "[701](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L701-L701)",
            "[724](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L724-L724)",
            "[879](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L879-L879)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Function call results should be memoized rather than re-calling them",
      "description": "",
      "gasSavings": 40,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n83                           _convertToAssetsWithRate(\n84                               userYTBalanceInRay,\n85                               _oldPTRate - _ptRate,\n86                               RayMath.RAY_UNIT,\n87                               Math.Rounding.Floor\n88:                          ) +\n\n98                       uint256 actualNegativeYieldInAssetRay = _convertToAssetsWithRate(\n99                           userYTBalanceInRay,\n100                          _oldPTRate - _ptRate,\n101                          RayMath.RAY_UNIT,\n102                          Math.Rounding.Floor\n103:                     );\n\n```\n",
          "loc": [
            "[98](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L98-L103)",
            "[83](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L83-L88)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`x += y` costs more gas than `x = x + y` for basic-typed state variables",
      "description": "Using the addition operator instead of plus-equals saves **[10 gas](https://gist.github.com/IllIllI000/cbbfb267425b898e5be734d4008d4fe8)** because of extra `PUSH`es and `POP`s associated with the manipulation of the state variable when using `+=` for basic-typed state variables",
      "gasSavings": 20,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n714:         unclaimedFeesInIBT += _feesInIBT;\n\n715:         totalFeesInIBT += _feesInIBT;\n\n```\n",
          "loc": [
            "[715](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L715-L715)",
            "[714](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L714-L714)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`require()`/`revert()` strings longer than 32 bytes cost extra gas",
      "description": "Each extra memory word of bytes past the original 32 [incurs an MSTORE](https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#consider-having-short-revert-strings) which costs **3 gas**",
      "gasSavings": 3,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n82            require(\n83                initialAuthority != address(0),\n84                \"AMTransparentUpgradeableProxy: initialAuthority is zero address\"\n85:           );\n\n```\n",
          "loc": [
            "[82](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L82-L85)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Check `msg.sender` using `xor` and the scratch space",
      "description": "See [this](https://code4rena.com/reports/2023-05-juicebox#g-06-use-assembly-to-validate-msgsender) prior finding for details on the conversion",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n102:         if (msg.sender == _proxyAdmin()) {\n\n```\n",
          "loc": [
            "[102](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L102-L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n330:         if (msg.sender != IRegistry(registry).getFeeCollector()) {\n\n386:         if (msg.sender != yt) {\n\n806:         if (_owner != msg.sender) {\n\n829:         if (_owner != msg.sender) {\n\n```\n",
          "loc": [
            "[829](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L829-L829)",
            "[386](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L386-L386)",
            "[806](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L806-L806)",
            "[330](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L330-L330)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n43:          if (msg.sender != pt) {\n\n51:          if (msg.sender != pt) {\n\n```\n",
          "loc": [
            "[43](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L43-L43)",
            "[51](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L51-L51)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Checks for `address(0x0)` are more efficient in assembly",
      "description": "Using assembly allows you to [skip](https://gist.github.com/IllIllI000/d6b4b26af2fcd19827093a121e7e3f78) the clearing of the higher-order bits before performing the check for equality.",
      "gasSavings": 108,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n83:              initialAuthority != address(0),\n\n```\n",
          "loc": [
            "[83](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L83-L83)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n103:         if (_registry == address(0)) {\n\n125:         if (_ibt == address(0) || _initialAuthority == address(0)) {\n\n125:         if (_ibt == address(0) || _initialAuthority == address(0)) {\n\n395:         if (rewardsProxy == address(0)) {\n\n726:         if (ytBeacon == address(0)) {\n\n```\n",
          "loc": [
            "[395](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L395-L395)",
            "[726](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L726-L726)",
            "[103](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L103-L103)",
            "[125](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L125-L125)",
            "[125](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L125-L125)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`>=` costs less gas than `>`",
      "description": "The compiler uses opcodes `GT` and `ISZERO` for solidity code that uses `>`, but only requires `LT` for `>=`, [which saves **3 gas**](https://gist.github.com/IllIllI000/3dc79d25acccfa16dee4e83ffdc6ffde). If `<` is being used, the condition can be inverted. In cases where a for-loop is being used, one can count down rather than up, in order to use the optimal operator (e.g. `for (i = len-1; i >= 1; --i)`)",
      "gasSavings": 66,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n73:          if (_oldPTRate == _ptRate && _ibtRate > _oldIBTRate) {\n\n77:              if (_oldPTRate > _ptRate) {\n\n108                      yieldInAssetRay = expectedNegativeYieldInAssetRay >\n109:                         actualNegativeYieldInAssetRay\n\n112                      yieldInAssetRay = yieldInAssetRay.fromRay(\n113                          IERC4626(IPrincipalToken(IYieldToken(_yt).getPT()).underlying()).decimals()\n114:                     ) < SAFETY_BOUND\n\n```\n",
          "loc": [
            "[112](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L112-L114)",
            "[108](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L108-L109)",
            "[77](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L77-L77)",
            "[73](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L73-L73)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n94:          if (block.timestamp < expiry) {\n\n144:             _assetDecimals < MIN_DECIMALS ||\n\n145:             _assetDecimals > _ibtDecimals ||\n\n146:             _ibtDecimals > MAX_DECIMALS\n\n195:         if (shares < minShares) {\n\n223:         if (shares < minShares) {\n\n247:         if (assets < minAssets) {\n\n272:         if (ibts < minIbts) {\n\n297:         if (shares > maxShares) {\n\n323:         if (shares > maxShares) {\n\n615:         if (_amount > maxFlashLoan(_token)) revert FlashLoanExceedsMaxAmount();\n\n793:         if (block.timestamp < expiry) {\n\n809:         if (_shares > _maxBurnable(_owner)) {\n\n839:         if (maxWithdraw(_owner) < _assets) {\n\n872:             maxBurnable = (ptBalance > ytBalance) ? ytBalance : ptBalance;\n\n886:         if (block.timestamp < expiry) {\n\n906:         uint256 currentPTRate = currentIBTRate < ibtRate\n\n```\n",
          "loc": [
            "[223](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L223-L223)",
            "[94](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L94-L94)",
            "[144](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L144-L144)",
            "[145](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L145-L145)",
            "[146](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L146-L146)",
            "[195](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L195-L195)",
            "[247](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L247-L247)",
            "[272](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L272-L272)",
            "[297](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L297-L297)",
            "[323](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L323-L323)",
            "[615](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L615-L615)",
            "[793](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L793-L793)",
            "[809](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L809-L809)",
            "[839](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L839-L839)",
            "[872](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L872-L872)",
            "[886](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L886-L886)",
            "[906](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L906-L906)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n124:         return (block.timestamp < IPrincipalToken(pt).maturity()) ? super.balanceOf(account) : 0;\n\n```\n",
          "loc": [
            "[124](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L124-L124)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Enable IR-based code generation",
      "description": "By using `--via-ir` or `{\"viaIR\": true}`, the compiler is able to use more advanced [multi-function optimizations](https://docs.soliditylang.org/en/v0.8.17/ir-breaking-changes.html#solidity-ir-based-codegen-changes), for extra gas savings.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Initializers can be marked `payable`",
      "description": "Payable functions cost less gas to execute, since the compiler does not have to add extra checks to ensure that a payment wasn't provided. An initializer can safely be marked as payable, since only the deployer would be able to pass funds, and the project itself would not pass any funds.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n120      function initialize(\n121          address _ibt,\n122          uint256 _duration,\n123          address _initialAuthority\n124:     ) external initializer {\n\n```\n",
          "loc": [
            "[120](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L120-L124)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n31       function initialize(\n32           string calldata _name,\n33           string calldata _symbol,\n34           address _pt\n35:      ) external initializer {\n\n```\n",
          "loc": [
            "[31](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L31-L35)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Memory-safe annotation missing",
      "description": "Use `assembly (\"memory-safe\") { ... }` for the assembly blocks below since they dont't read or modify memory, and therefore are [memory-safe](https://docs.soliditylang.org/en/latest/assembly.html#memory-safety). This will help the optimizer to create more optimal gas-efficient code. Use the comment variant if prior to Solidity version 0.8.13",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/RayMath.sol\n\n59           // to avoid overflow, b/decimals_ratio == _a\n60           assembly {\n61               b := mul(_a, decimals_ratio)\n62   \n63               if iszero(eq(div(b, decimals_ratio), _a)) {\n64                   revert(0, 0)\n65               }\n66:          }\n\n```\n",
          "loc": [
            "[59](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L59-L66)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple `address`/ID mappings can be combined into a single `mapping` of an `address`/ID to a `struct`",
      "description": "Saves a storage slot for each of the removed mappings (i.e. this finding is not about runtime savings). The instances below refer to both mappings using the same key in the same function, so the mappings are related.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit combine into a `struct`: ibtRateOfUser,ptRateOfUser,yieldOfUserInIBT\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Optimize names to save gas",
      "description": "`public`/`external` function names and `public` member variable names can be optimized to save gas. See [this](https://gist.github.com/IllIllI000/a5d8b486a8259f9f77891a919febd1a9) link for an example of how it works. Below are the interfaces/abstract contracts that can be optimized so that the most frequently-called functions use the least amount of gas possible during method lookup. Method IDs that have two leading zero bytes can save **128 gas** each during deployment, and renaming functions to have lower method IDs will save **22 gas** per call, [per sorted position shifted](https://medium.com/joyso/solidity-how-does-function-name-affect-gas-consumption-in-smart-contract-47d270d8ac92)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n/// @audit  upgradeTo()\n20:  contract AMBeacon is IBeacon, AccessManaged {\n\n```\n",
          "loc": [
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L20-L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n/// @audit  upgradeAndCall()\n14   contract AMProxyAdmin is AccessManaged {\n15       /**\n16        * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n17        * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n18        * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n19        * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n20        * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n21        * during an upgrade.\n22:       */\n\n```\n",
          "loc": [
            "[14](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L14-L22)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit  withdrawIBT(), withdrawIBT(), claimFees(), updateYield(), claimYield(), claimYieldInIBT(), beforeYtTransfer(), claimRewards(), storeRatesAtExpiry(), setRewardsProxy(), previewDeposit(), previewDepositIBT(), maxDeposit(), previewWithdraw(), previewWithdrawIBT(), maxWithdraw(), maxWithdrawIBT(), previewRedeem(), previewRedeemForIBT(), maxRedeem(), convertToPrincipal(), convertToUnderlying(), totalAssets(), underlying(), maturity(), getDuration(), getIBT(), getYT(), getIBTRate(), getPTRate(), getIBTUnit(), getUnclaimedFeesInIBT(), getTotalFeesInIBT(), getCurrentYieldOfUserInIBT(), getTokenizationFee(), initialize(), pause(), unPause(), deposit(), deposit(), deposit(), depositIBT(), depositIBT(), depositIBT(), redeem(), redeem(), redeemForIBT(), redeemForIBT(), withdraw(), withdraw()\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n/// @audit  burnWithoutUpdate(), mint(), burn(), getPT(), actualBalanceOf(), initialize()\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Reduce deployment costs by tweaking contracts' metadata",
      "description": "See [this](https://www.rareskills.io/post/solidity-metadata) link, at its bottom, for full details",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMBeacon.sol\n\n20:  contract AMBeacon is IBeacon, AccessManaged {\n\n```\n",
          "loc": [
            "[20](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMBeacon.sol#L20-L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n14   contract AMProxyAdmin is AccessManaged {\n15       /**\n16        * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address)`\n17        * and `upgradeAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n18        * while `upgradeAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n19        * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,bytes)` is present, and the second argument must\n20        * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n21        * during an upgrade.\n22:       */\n\n```\n",
          "loc": [
            "[14](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L14-L22)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n60   contract AMTransparentUpgradeableProxy is ERC1967Proxy {\n61       // An immutable address for the admin to avoid unnecessary SLOADs before each call\n62       // at the expense of removing the ability to change the admin once it's set.\n63       // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n64:      // with its own ability to transfer the permissions to another account.\n\n```\n",
          "loc": [
            "[60](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L60-L64)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n29   contract PrincipalToken is\n30       ERC20PermitUpgradeable,\n31       AccessManagedUpgradeable,\n32       ReentrancyGuardUpgradeable,\n33       PausableUpgradeable,\n34       IPrincipalToken\n35:  {\n\n```\n",
          "loc": [
            "[29](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L29-L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/YieldToken.sol\n\n15:  contract YieldToken is IYieldToken, ERC20PermitUpgradeable {\n\n```\n",
          "loc": [
            "[15](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/YieldToken.sol#L15-L15)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use local variables for emitting packed storage variables",
      "description": "Saves **14 gas** due to not having to clear the other bits of the [slot](https://gist.github.com/IllIllI000/f9cf10ee73bfd02d736beeab348c7441).",
      "gasSavings": 14,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit rewardsProxy\n422:         emit RewardsProxyChange(rewardsProxy, _rewardsProxy);\n\n```\n",
          "loc": [
            "[422](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L422-L422)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Nesting `if`-statements is cheaper than using `&&`",
      "description": "Nesting `if`-statements avoids the stack operations of setting up and using an extra `jumpdest`, and saves **6 [gas](https://gist.github.com/IllIllI000/7f3b818abecfadbef93b894481ae7d19)**",
      "gasSavings": 18,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n64           if (_oldPTRate == _ptRate && _ibtRate == _oldIBTRate) {\n65               return _userYieldIBT;\n66:          }\n\n141          if (success && encodedDecimals.length >= 32) {\n142              uint256 returnedDecimals = abi.decode(encodedDecimals, (uint256));\n143              if (returnedDecimals <= type(uint8).max) {\n144                  return uint8(returnedDecimals);\n145              }\n146:         }\n\n```\n",
          "loc": [
            "[64](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L64-L66)",
            "[141](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L141-L146)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n903          if (IERC4626(ibt).totalAssets() == 0 && IERC4626(ibt).totalSupply() != 0) {\n904              currentIBTRate = 0;\n905:         }\n\n```\n",
          "loc": [
            "[903](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L903-L905)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Stack variable is only used once",
      "description": "If the variable is only accessed once, it's cheaper to use the assigned value directly that one time, and save the **3 gas** the extra stack assignment would spend",
      "gasSavings": 54,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/PrincipalTokenUtil.sol\n\n138          (bool success, bytes memory encodedDecimals) = _token.staticcall(\n139              abi.encodeCall(IERC20Metadata.decimals, ())\n140:         );\n\n```\n",
          "loc": [
            "[138](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/PrincipalTokenUtil.sol#L138-L140)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n121:         (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n\n```\n",
          "loc": [
            "[121](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L121-L121)"
          ]
        },
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n183:         uint256 ibts = IERC4626(ibt).deposit(assets, address(this));\n\n284:         (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n\n285:         uint256 ibts = IERC4626(ibt).withdraw(assets, receiver, address(this));\n\n309:         (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n\n399:         (bool success, ) = rewardsProxy.delegatecall(_data);\n\n431:         uint256 ibts = IERC4626(ibt).previewDeposit(assets);\n\n449:         uint256 ibts = IERC4626(ibt).previewWithdraw(assets);\n\n534:         (, uint256 _ibtRate) = _getPTandIBTRates(false);\n\n540:         (uint256 _ptRate, ) = _getPTandIBTRates(false);\n\n563:         (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n\n565:         uint256 _oldPTRate = ptRateOfUser[_user];\n\n644          uint256 tokenizationFee = PrincipalTokenUtil._computeTokenizationFee(\n645              _ibts,\n646              address(this),\n647              registry\n648:         );\n\n663:         (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n\n684:         (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(false);\n\n702:         (uint256 _ptRate, uint256 _ibtRate) = _getPTandIBTRates(true); // to round up the shares, the PT rate must round down\n\n906          uint256 currentPTRate = currentIBTRate < ibtRate\n907              ? ptRate.mulDiv(\n908                  currentIBTRate,\n909                  ibtRate,\n910                  roundUpPTRate ? Math.Rounding.Ceil : Math.Rounding.Floor\n911              )\n912:             : ptRate;\n\n```\n",
          "loc": [
            "[906](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L906-L912)",
            "[183](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L183-L183)",
            "[284](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L284-L284)",
            "[285](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L285-L285)",
            "[309](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L309-L309)",
            "[399](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L399-L399)",
            "[431](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L431-L431)",
            "[449](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L449-L449)",
            "[534](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L534-L534)",
            "[540](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L540-L540)",
            "[563](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L563-L563)",
            "[565](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L565-L565)",
            "[644](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L644-L648)",
            "[663](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L663-L663)",
            "[684](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L684-L684)",
            "[702](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L702-L702)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Split `revert` checks to save gas",
      "description": "Splitting the conditions into two separate checks [saves](https://gist.github.com/IllIllI000/7e25b0fca6bd9d57d9b9bcb9d2018959) **2 gas**",
      "gasSavings": 4,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n125          if (_ibt == address(0) || _initialAuthority == address(0)) {\n126              revert AddressError();\n127:         }\n\n143          if (\n144              _assetDecimals < MIN_DECIMALS ||\n145              _assetDecimals > _ibtDecimals ||\n146              _ibtDecimals > MAX_DECIMALS\n147          ) {\n148              revert InvalidDecimals();\n149:         }\n\n```\n",
          "loc": [
            "[143](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L143-L149)",
            "[125](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L125-L127)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use custom errors rather than `revert()`/`require()` strings to save gas",
      "description": "Custom errors are available from solidity version 0.8.4. Custom errors save [**~50 gas**](https://gist.github.com/IllIllI000/ad1bd0d29a0101b25e57c293b4b0c746) each time they're hit by [avoiding having to allocate and store the revert string](https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth). Not defining the strings also save deployment gas",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/proxy/AMTransparentUpgradeableProxy.sol\n\n82           require(\n83               initialAuthority != address(0),\n84               \"AMTransparentUpgradeableProxy: initialAuthority is zero address\"\n85:          );\n\n```\n",
          "loc": [
            "[82](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMTransparentUpgradeableProxy.sol#L82-L85)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use short-circuit evaluation to avoid external calls",
      "description": "By evaluating expressions involving constants, literals, and local variables before ones involving external calls, you can avoid unnecessarily executing the calls in the unhappy path.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/tokens/PrincipalToken.sol\n\n/// @audit move the expression involving `totalAssets()` to the right\n903:         if (IERC4626(ibt).totalAssets() == 0 && IERC4626(ibt).totalSupply() != 0) {\n\n```\n",
          "loc": [
            "[903](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/tokens/PrincipalToken.sol#L903-L903)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `private` rather than `public`, saves gas",
      "description": "For constants, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that [returns a tuple](https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178) of the values of all currently-public constants. Saves **3406-3606 gas** in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it's used, and not adding another entry to the method ID table",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/libraries/RayMath.sol\n\n12:      uint256 public constant RAY_UNIT = 1e27;\n\n```\n",
          "loc": [
            "[12](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/libraries/RayMath.sol#L12-L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/proxy/AMProxyAdmin.sol\n\n23:      string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n```\n",
          "loc": [
            "[23](https://github.com/code-423n4/2024-02-spectra/blob/b35bbf78ad9d0e74e9c8450a0c5c6d35b68f7228/src/proxy/AMProxyAdmin.sol#L23-L23)"
          ]
        }
      ]
    }
  ],
  "createdAt": "2024-02-23T21:18:23.265Z",
  "updatedAt": "2024-02-23T21:18:24.848Z"
}