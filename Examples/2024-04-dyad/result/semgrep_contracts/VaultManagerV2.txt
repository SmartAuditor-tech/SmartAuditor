METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 50 Code rules:
  Scanning 1 file with 50 solidity rules.
                    
                    
┌──────────────────┐
│ 11 Code Findings │
└──────────────────┘
                                     
    /g4b/src/core/VaultManagerV2.sol 
       solidity.performance.non-payable-constructor.non-payable-constructor
          Consider making costructor payable to save gas.                  
          Details: https://sg.run/wRBd                                     
                                                                           
           49┆ constructor(
           50┆   DNft          _dNft,
           51┆   Dyad          _dyad,
           52┆   Licenser      _licenser
           53┆ ) {
           54┆   dNft          = _dNft;
           55┆   dyad          = _dyad;
           56┆   vaultLicenser = _licenser;
           57┆ }
            ⋮┆----------------------------------------
       solidity.performance.state-variable-read-in-a-loop.state-variable-read-in
  -a-loop                                                                       
          Replace state variable reads and writes within loops with local       
  variable reads and writes.                                                    
          Details: https://sg.run/xADy                                          
                                                                                
          223┆ Vault vault      = Vault(vaults[id].at(i));
            ⋮┆----------------------------------------
          259┆ Vault vault = Vault(vaults[id].at(i));
            ⋮┆----------------------------------------
          278┆ Vault vault = Vault(vaultsKerosene[id].at(i));
            ⋮┆----------------------------------------
          280┆ if (keroseneManager.isLicensed(address(vault))) {
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop.unnecessary-c
  hecked-arithmetic-in-loop                                                     
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
          Details: https://sg.run/OvDk                                          
                                                                                
          222┆ for (uint i = 0; i < numberOfVaults; i++) {
            ⋮┆----------------------------------------
          258┆ for (uint i = 0; i < numberOfVaults; i++) {
            ⋮┆----------------------------------------
          277┆ for (uint i = 0; i < numberOfVaults; i++) {
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix.use-prefix-incremen
  t-not-postfix                                                                 
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
          Details: https://sg.run/nxLr                                          
                                                                                
          222┆ for (uint i = 0; i < numberOfVaults; i++) {
            ⋮┆----------------------------------------
          258┆ for (uint i = 0; i < numberOfVaults; i++) {
            ⋮┆----------------------------------------
          277┆ for (uint i = 0; i < numberOfVaults; i++) {

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 50 rules on 1 file: 11 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
